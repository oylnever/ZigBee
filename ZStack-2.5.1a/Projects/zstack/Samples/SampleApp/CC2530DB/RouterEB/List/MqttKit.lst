###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.3.10338/W32 for 8051         27/May/2020  18:08:46 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢» #
#                          ·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ #
#                          ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\So #
#                          urce\MqttKit.c                                     #
#    Command line       =  -f "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ #
#                          ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­ #
#                          Òé)\ZStack-2.5.1a\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\..\..\..\Tools\CC2530DB\f8wRouter.cfg"  #
#                          (-DCPU32MHZ -DROOT=__near_func                     #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8         #
#                          -DMAC_CFG_RX_MAX=5 -DRTR_NWK) -f                   #
#                          "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢ #
#                          »·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé) #
#                          \ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"     #
#                          (-DZIGBEEPRO -DSECURE=0 -DZG_SECURE_DYNAMIC=0      #
#                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800          #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFF1                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁ #
#                          Ï-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\Êµ #
#                          Ñé7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zst #
#                          ack\Samples\SampleApp\Source\MqttKit.c" -D         #
#                          ZTOOL_P1 -D xMT_TASK -D xMT_SYS_FUNC -D            #
#                          xMT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG -lC            #
#                          "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢ #
#                          »·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé) #
#                          \ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\RouterEB\List\" -lA                        #
#                          "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢ #
#                          »·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé) #
#                          \ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\RouterEB\List\" --diag_suppress            #
#                          Pe001,Pa010 -o "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ #
#                          §Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢Àï #
#                          ÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Samp #
#                          les\SampleApp\CC2530DB\RouterEB\Obj\" -e           #
#                          --no_code_motion --debug --core=plain --dptr=16,1  #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ #
#                          ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­ #
#                          Òé)\ZStack-2.5.1a\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\ #
#                          Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢À #
#                          ïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Sam #
#                          ples\SampleApp\CC2530DB\..\Source\" -I             #
#                          "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢ #
#                          »·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé) #
#                          \ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\ZMain\TI2530DB\" -I               #
#                          "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢ #
#                          »·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé) #
#                          \ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\..\..\Components\hal\include\"    #
#                          -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ #
#                          ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­ #
#                          Òé)\ZStack-2.5.1a\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\..\..\..\..\..\Components\hal\target\CC #
#                          2530EB\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï° #
#                          Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆI #
#                          OT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Samples #
#                          \SampleApp\CC2530DB\..\..\..\..\..\Components\mac\ #
#                          include\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï #
#                          °Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆ #
#                          IOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Sample #
#                          s\SampleApp\CC2530DB\..\..\..\..\..\Components\mac #
#                          \high_level\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3 #
#                          \Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ #
#                          ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Sa #
#                          mples\SampleApp\CC2530DB\..\..\..\..\..\Components #
#                          \mac\low_level\srf04\" -I                          #
#                          "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢ #
#                          »·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé) #
#                          \ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\..\..\Components\mac\low_level\sr #
#                          f04\single_chip\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ- #
#                          V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé #
#                          7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstac #
#                          k\Samples\SampleApp\CC2530DB\..\..\..\..\..\Compon #
#                          ents\mt\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï #
#                          °Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆ #
#                          IOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Sample #
#                          s\SampleApp\CC2530DB\..\..\..\..\..\Components\osa #
#                          l\include\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ #
#                          §Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢Àï #
#                          ÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Samp #
#                          les\SampleApp\CC2530DB\..\..\..\..\..\Components\s #
#                          ervices\saddr\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4 #
#                          .3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7. #
#                          °¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\..\..\Componen #
#                          ts\services\sdata\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁ #
#                          Ï-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\Êµ #
#                          Ñé7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zst #
#                          ack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Comp #
#                          onents\stack\af\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ- #
#                          V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé #
#                          7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstac #
#                          k\Samples\SampleApp\CC2530DB\..\..\..\..\..\Compon #
#                          ents\stack\nwk\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V #
#                          4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7 #
#                          .°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack #
#                          \Samples\SampleApp\CC2530DB\..\..\..\..\..\Compone #
#                          nts\stack\sapi\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V #
#                          4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7 #
#                          .°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack #
#                          \Samples\SampleApp\CC2530DB\..\..\..\..\..\Compone #
#                          nts\stack\sec\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4 #
#                          .3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7. #
#                          °¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\..\..\Componen #
#                          ts\stack\sys\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4. #
#                          3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.° #
#                          ¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\S #
#                          amples\SampleApp\CC2530DB\..\..\..\..\..\Component #
#                          s\stack\zdo\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3 #
#                          \Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ #
#                          ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Sa #
#                          mples\SampleApp\CC2530DB\..\..\..\..\..\Components #
#                          \zmac\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°À #
#                          ý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIO #
#                          T(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Samples\ #
#                          SampleApp\CC2530DB\..\..\..\..\..\Components\zmac\ #
#                          f8w\" -Ohz                                         #
#    List file          =  I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢» #
#                          ·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ #
#                          ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC #
#                          2530DB\RouterEB\List\MqttKit.lst                   #
#    Object file        =  I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢» #
#                          ·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ #
#                          ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC #
#                          2530DB\RouterEB\Obj\MqttKit.r51                    #
#                                                                             #
#                                                                             #
###############################################################################

I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\MqttKit.c
      1          /**
      2          	************************************************************
      3          	************************************************************
      4          	************************************************************
      5          	*	ÎÄ¼þÃû£º 	MqttKit.c
      6          	*
      7          	*	×÷Õß£º 		
      8          	*
      9          	*	ÈÕÆÚ£º 		2018-04-27
     10          	*
     11          	*	°æ±¾£º 		V1.4
     12          	*
     13          	*	ËµÃ÷£º 		MQTTÐ­Òé
     14          	*
     15          	*	ÐÞ¸Ä¼ÇÂ¼£º	V1.1£º½â¾öMQTT_PacketSubscribe¶©ÔÄ²»Îª2¸ötopic
     16          	*						¸öÊýÊ±Ð­Òé´íÎóµÄbug
     17          	*				V1.2£ºÐÞ¸´MQTT_PacketCmdRespµÄbug
     18          	*				V1.3£º½«strncpyÌæ»»Îªmemcpy£¬½â¾öÇ±ÔÚbug
     19          	*				V1.4£ºÐÞ¸´	MQTT_PacketPublishAck
     20          	*							MQTT_PacketPublishRel
     21          	*							º¯Êý·â°ü´íÎóµÄbug
     22          	*				V1.5£ºÔö¼Ó	MQTT_UnPacketCmd
     23          	*							MQTT_UnPacketPublish
     24          	*							½Ó¿Ú¶ÔÏûÏ¢ÄÚÈÝ³¤¶ÈµÄÌáÈ¡²ÎÊý
     25          	************************************************************
     26          	************************************************************
     27          	************************************************************
     28          **/
     29          
     30          //Ð­ÒéÍ·ÎÄ¼þ
     31          #include "MqttKit.h"
     32          #include "mqtt.h"
     33          
     34          //C¿â
     35          #include <string.h>
     36          
     37          
     38          #define CMD_TOPIC_PREFIX		"$creq"
     39          
     40          
     41          //==========================================================
     42          //	º¯ÊýÃû³Æ£º	EDP_NewBuffer
     43          //
     44          //	º¯Êý¹¦ÄÜ£º	ÉêÇëÄÚ´æ
     45          //
     46          //	Èë¿Ú²ÎÊý£º	edpPacket£º°ü½á¹¹Ìå
     47          //				size£º´óÐ¡
     48          //
     49          //	·µ»Ø²ÎÊý£º	ÎÞ
     50          //
     51          //	ËµÃ÷£º		1.¿ÉÊ¹ÓÃ¶¯Ì¬·ÖÅäÀ´·ÖÅäÄÚ´æ
     52          //				2.¿ÉÊ¹ÓÃ¾Ö²¿»òÈ«¾ÖÊý×éÀ´Ö¸¶¨ÄÚ´æ
     53          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     54          void MQTT_NewBuffer(MQTT_PACKET_STRUCTURE *mqttPacket, uint32 size)
   \                     MQTT_NewBuffer:
     55          {	
   \   000000   74EC         MOV     A,#-0x14
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 20
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009   7414         MOV     A,#0x14
   \   00000B   12....       LCALL   ?XSTACK_DISP0_8
   \   00000E   78..         MOV     R0,#?V0 + 4
   \   000010   12....       LCALL   ?L_MOV_X
     56          	uint32 i = 0;
     57          
     58          	mqttPacket->_memFlag = MEM_FLAG_STATIC;
   \   000013   8E82         MOV     DPL,R6
   \   000015   8F83         MOV     DPH,R7
   \   000017   A3           INC     DPTR
   \   000018   A3           INC     DPTR
   \   000019   A3           INC     DPTR
   \   00001A   A3           INC     DPTR
   \   00001B   A3           INC     DPTR
   \   00001C   A3           INC     DPTR
   \   00001D   A3           INC     DPTR
   \   00001E   A3           INC     DPTR
   \   00001F   A3           INC     DPTR
   \   000020   A3           INC     DPTR
   \   000021   7402         MOV     A,#0x2
   \   000023   F0           MOVX    @DPTR,A
     59          	
     60          	for(i = 0; i < mqttPacket->_size; i++)
   \   000024   90....       MOV     DPTR,#__Constant_0
   \   000027   78..         MOV     R0,#?V0 + 8
   \   000029   12....       LCALL   ?L_MOV_X
   \   00002C   8010         SJMP    ??MQTT_NewBuffer_0
     61          		mqttPacket->_data[i] = 0;
   \                     ??MQTT_NewBuffer_1:
   \   00002E   85....       MOV     ?V0 + 0,?V0 + 8
   \   000031   85....       MOV     ?V0 + 1,?V0 + 9
   \   000034   12....       LCALL   ?Subroutine10 & 0xFFFF
   \                     ??CrossCallReturnLabel_2:
   \   000037   E4           CLR     A
   \   000038   12....       LCALL   ??Subroutine80_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_183:
   \   00003B   12....       LCALL   ?L_ADD_X
   \                     ??MQTT_NewBuffer_0:
   \   00003E   8E82         MOV     DPL,R6
   \   000040   8F83         MOV     DPH,R7
   \   000042   A3           INC     DPTR
   \   000043   A3           INC     DPTR
   \   000044   A3           INC     DPTR
   \   000045   A3           INC     DPTR
   \   000046   A3           INC     DPTR
   \   000047   A3           INC     DPTR
   \   000048   78..         MOV     R0,#?V0 + 8
   \   00004A   12....       LCALL   ?UL_GE_X
   \   00004D   50DF         JNC     ??MQTT_NewBuffer_1
     62          	
     63          	mqttPacket->_len = 0;
   \   00004F   90....       MOV     DPTR,#__Constant_0
   \   000052   12....       LCALL   ?XLOAD_R2345
   \   000055   8E82         MOV     DPL,R6
   \   000057   8F83         MOV     DPH,R7
   \   000059   A3           INC     DPTR
   \   00005A   A3           INC     DPTR
   \   00005B   12....       LCALL   ?XSTORE_R2345
     64          	
     65          	if(mqttPacket->_size < size)
   \   00005E   8E82         MOV     DPL,R6
   \   000060   8F83         MOV     DPH,R7
   \   000062   A3           INC     DPTR
   \   000063   A3           INC     DPTR
   \   000064   A3           INC     DPTR
   \   000065   A3           INC     DPTR
   \   000066   A3           INC     DPTR
   \   000067   A3           INC     DPTR
   \   000068   78..         MOV     R0,#?V0 + 4
   \   00006A   12....       LCALL   ?UL_GT_X
   \   00006D   5008         JNC     ??MQTT_NewBuffer_2
     66          		mqttPacket->_data = NULL;
   \   00006F   8E82         MOV     DPL,R6
   \   000071   8F83         MOV     DPH,R7
   \   000073   E4           CLR     A
   \   000074   F0           MOVX    @DPTR,A
   \   000075   A3           INC     DPTR
   \   000076   F0           MOVX    @DPTR,A
     67          }
   \                     ??MQTT_NewBuffer_2:
   \   000077                REQUIRE ?Subroutine0
   \   000077                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F0C         MOV     R7,#0xc
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine80_0:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   90....       MOV     DPTR,#__Constant_1
   \   000004   78..         MOV     R0,#?V0 + 8
   \   000006   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine10:
   \   000000   12....       LCALL   ?Subroutine57 & 0xFFFF
   \                     ??CrossCallReturnLabel_105:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine57:
   \   000000   8E82         MOV     DPL,R6
   \   000002   8F83         MOV     DPH,R7
   \   000004   E0           MOVX    A,@DPTR
   \   000005   25..         ADD     A,?V0 + 0
   \   000007   F8           MOV     R0,A
   \   000008   A3           INC     DPTR
   \   000009   E0           MOVX    A,@DPTR
   \   00000A   35..         ADDC    A,?V0 + 1
   \   00000C   8882         MOV     DPL,R0
   \   00000E   F583         MOV     DPH,A
   \   000010   22           RET
     68          
     69          //==========================================================
     70          //	º¯ÊýÃû³Æ£º	MQTT_DeleteBuffer
     71          //
     72          //	º¯Êý¹¦ÄÜ£º	ÊÍ·ÅÊý¾ÝÄÚ´æ
     73          //
     74          //	Èë¿Ú²ÎÊý£º	edpPacket£º°ü½á¹¹Ìå
     75          //
     76          //	·µ»Ø²ÎÊý£º	ÎÞ
     77          //
     78          //	ËµÃ÷£º		
     79          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     80          void MQTT_DeleteBuffer(MQTT_PACKET_STRUCTURE *mqttPacket)
   \                     MQTT_DeleteBuffer:
     81          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   F8           MOV     R0,A
   \   000007   EB           MOV     A,R3
   \   000008   F9           MOV     R1,A
     82          	mqttPacket->_data = NULL;
   \   000009   8882         MOV     DPL,R0
   \   00000B   8983         MOV     DPH,R1
   \   00000D   E4           CLR     A
   \   00000E   F0           MOVX    @DPTR,A
   \   00000F   A3           INC     DPTR
   \   000010   F0           MOVX    @DPTR,A
     83          	mqttPacket->_len = 0;
   \   000011   90....       MOV     DPTR,#__Constant_0
   \   000014   12....       LCALL   ?XLOAD_R2345
   \   000017   8882         MOV     DPL,R0
   \   000019   8983         MOV     DPH,R1
   \   00001B   A3           INC     DPTR
   \   00001C   A3           INC     DPTR
   \   00001D   12....       LCALL   ?XSTORE_R2345
     84          	mqttPacket->_size = 0;
   \   000020   90....       MOV     DPTR,#__Constant_0
   \   000023   12....       LCALL   ?XLOAD_R2345
   \   000026   8882         MOV     DPL,R0
   \   000028   8983         MOV     DPH,R1
   \   00002A   A3           INC     DPTR
   \   00002B   A3           INC     DPTR
   \   00002C   A3           INC     DPTR
   \   00002D   A3           INC     DPTR
   \   00002E   A3           INC     DPTR
   \   00002F   A3           INC     DPTR
   \   000030   12....       LCALL   ?XSTORE_R2345
     85          	mqttPacket->_memFlag = MEM_FLAG_NULL;
   \   000033   8882         MOV     DPL,R0
   \   000035   8983         MOV     DPH,R1
   \   000037   A3           INC     DPTR
   \   000038   A3           INC     DPTR
   \   000039   A3           INC     DPTR
   \   00003A   A3           INC     DPTR
   \   00003B   A3           INC     DPTR
   \   00003C   A3           INC     DPTR
   \   00003D   A3           INC     DPTR
   \   00003E   A3           INC     DPTR
   \   00003F   A3           INC     DPTR
   \   000040   A3           INC     DPTR
   \   000041   E4           CLR     A
   \   000042   F0           MOVX    @DPTR,A
     86          
     87          }
   \   000043   7F01         MOV     R7,#0x1
   \   000045   02....       LJMP    ?BANKED_LEAVE_XDATA
     88          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     89          int32 MQTT_DumpLength(size_t len, uint8 *buf)
   \                     MQTT_DumpLength:
     90          {
   \   000000   74F0         MOV     A,#-0x10
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 0
     91          	
     92          	int32 i = 0;
     93          	
     94          	for(i = 1; i <= 4; ++i)
   \   000005   90....       MOV     DPTR,#__Constant_1
   \   000008   78..         MOV     R0,#?V0 + 4
   \   00000A   12....       LCALL   ?L_MOV_X
     95          	{
     96          		*buf = len % 128;
   \                     ??MQTT_DumpLength_0:
   \   00000D   EA           MOV     A,R2
   \   00000E   547F         ANL     A,#0x7f
   \   000010   8C82         MOV     DPL,R4
   \   000012   8D83         MOV     DPH,R5
   \   000014   F0           MOVX    @DPTR,A
     97          		len >>= 7;
   \   000015   8A..         MOV     ?V0 + 0,R2
   \   000017   8B..         MOV     ?V0 + 1,R3
   \   000019   7407         MOV     A,#0x7
   \   00001B   78..         MOV     R0,#?V0 + 0
   \   00001D   12....       LCALL   ?US_SHR
   \   000020   AA..         MOV     R2,?V0 + 0
   \   000022   AB..         MOV     R3,?V0 + 1
     98          		if(len > 0)
   \   000024   EA           MOV     A,R2
   \   000025   4B           ORL     A,R3
   \   000026   6026         JZ      ??MQTT_DumpLength_1
     99          		{
    100          			*buf |= 128;
   \   000028   E0           MOVX    A,@DPTR
   \   000029   D2E7         SETB    0xE0 /* A   */.7
   \   00002B   F0           MOVX    @DPTR,A
    101          			++buf;
   \   00002C   A3           INC     DPTR
   \   00002D   AC82         MOV     R4,DPL
   \   00002F   AD83         MOV     R5,DPH
    102          		}
   \   000031   90....       MOV     DPTR,#__Constant_1
   \   000034   78..         MOV     R0,#?V0 + 4
   \   000036   12....       LCALL   ?L_ADD_X
   \   000039   90....       MOV     DPTR,#__Constant_5
   \   00003C   78..         MOV     R0,#?V0 + 4
   \   00003E   12....       LCALL   ?SL_GE_X
   \   000041   50CA         JNC     ??MQTT_DumpLength_0
    103          		else
    104          		{
    105          			return i;
    106          		}
    107          	}
    108          
    109          	return -1;
   \   000043   7AFF         MOV     R2,#-0x1
   \   000045   7BFF         MOV     R3,#-0x1
   \   000047   7CFF         MOV     R4,#-0x1
   \   000049   7DFF         MOV     R5,#-0x1
   \                     ??MQTT_DumpLength_2:
   \   00004B   02....       LJMP    ?Subroutine1 & 0xFFFF
   \                     ??MQTT_DumpLength_1:
   \   00004E   AA..         MOV     R2,?V0 + 4
   \   000050   AB..         MOV     R3,?V0 + 5
   \   000052   AC..         MOV     R4,?V0 + 6
   \   000054   AD..         MOV     R5,?V0 + 7
   \   000056   80F3         SJMP    ??MQTT_DumpLength_2
    110          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   7F08         MOV     R7,#0x8
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    111          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    112          int32 MQTT_ReadLength(const uint8 *stream, int32 size, uint32 *len)
   \                     MQTT_ReadLength:
    113          {
   \   000000   74E8         MOV     A,#-0x18
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 24
   \   000005                ; Auto size: 2
   \   000005   74FE         MOV     A,#-0x2
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   85..82       MOV     DPL,?XSP + 0
   \   00000D   85..83       MOV     DPH,?XSP + 1
   \   000010   EA           MOV     A,R2
   \   000011   F0           MOVX    @DPTR,A
   \   000012   A3           INC     DPTR
   \   000013   EB           MOV     A,R3
   \   000014   F0           MOVX    @DPTR,A
   \   000015   EC           MOV     A,R4
   \   000016   FE           MOV     R6,A
   \   000017   ED           MOV     A,R5
   \   000018   FF           MOV     R7,A
   \   000019   741A         MOV     A,#0x1a
   \   00001B   12....       LCALL   ?XSTACK_DISP0_8
   \   00001E   78..         MOV     R0,#?V0 + 0
   \   000020   12....       LCALL   ?L_MOV_X
    114          	
    115          	int32 i;
    116          	const uint8 *in = stream;
    117          	uint32 multiplier = 1;
   \   000023   90....       MOV     DPTR,#__Constant_1
   \   000026   78..         MOV     R0,#?V0 + 4
   \   000028   12....       LCALL   ?L_MOV_X
    118          
    119          	*len = 0;
   \   00002B   90....       MOV     DPTR,#__Constant_0
   \   00002E   12....       LCALL   ?XLOAD_R2345
   \   000031   8E82         MOV     DPL,R6
   \   000033   8F83         MOV     DPH,R7
   \   000035   12....       LCALL   ?XSTORE_R2345
    120          	for(i = 0; i < size; ++i)
   \   000038   90....       MOV     DPTR,#__Constant_0
   \   00003B   78..         MOV     R0,#?V0 + 8
   \   00003D   12....       LCALL   ?L_MOV_X
   \   000040   8008         SJMP    ??MQTT_ReadLength_0
   \                     ??MQTT_ReadLength_1:
   \   000042   90....       MOV     DPTR,#__Constant_1
   \   000045   78..         MOV     R0,#?V0 + 8
   \   000047   12....       LCALL   ?L_ADD_X
   \                     ??MQTT_ReadLength_0:
   \   00004A   78..         MOV     R0,#?V0 + 0
   \   00004C   79..         MOV     R1,#?V0 + 8
   \   00004E   12....       LCALL   ?SL_GT
   \   000051   5068         JNC     ??MQTT_ReadLength_2
    121          	{
    122          		*len += (in[i] & 0x7f) * multiplier;
   \   000053   A8..         MOV     R0,?V0 + 8
   \   000055   A9..         MOV     R1,?V0 + 9
   \   000057   85..82       MOV     DPL,?XSP + 0
   \   00005A   85..83       MOV     DPH,?XSP + 1
   \   00005D   E0           MOVX    A,@DPTR
   \   00005E   28           ADD     A,R0
   \   00005F   F8           MOV     R0,A
   \   000060   A3           INC     DPTR
   \   000061   E0           MOVX    A,@DPTR
   \   000062   39           ADDC    A,R1
   \   000063   F9           MOV     R1,A
   \   000064   E8           MOV     A,R0
   \   000065   FA           MOV     R2,A
   \   000066   E9           MOV     A,R1
   \   000067   FB           MOV     R3,A
   \   000068   8A82         MOV     DPL,R2
   \   00006A   8B83         MOV     DPH,R3
   \   00006C   E0           MOVX    A,@DPTR
   \   00006D   547F         ANL     A,#0x7f
   \   00006F   F5..         MOV     ?V0 + 12,A
   \   000071   E4           CLR     A
   \   000072   F5..         MOV     ?V0 + 13,A
   \   000074   33           RLC     A
   \   000075   95E0         SUBB    A,0xE0 /* A   */
   \   000077   F5..         MOV     ?V0 + 14,A
   \   000079   F5..         MOV     ?V0 + 15,A
   \   00007B   78..         MOV     R0,#?V0 + 12
   \   00007D   79..         MOV     R1,#?V0 + 4
   \   00007F   12....       LCALL   ?L_MUL
   \   000082   8E82         MOV     DPL,R6
   \   000084   8F83         MOV     DPH,R7
   \   000086   78..         MOV     R0,#?V0 + 12
   \   000088   12....       LCALL   ?L_ADD_TO_X
    123          
    124          		if(!(in[i] & 0x80))
   \   00008B   8A82         MOV     DPL,R2
   \   00008D   8B83         MOV     DPH,R3
   \   00008F   E0           MOVX    A,@DPTR
   \   000090   A2E7         MOV     C,0xE0 /* A   */.7
   \   000092   4012         JC      ??MQTT_ReadLength_3
    125          		{
    126          			return i + 1;
   \   000094   90....       MOV     DPTR,#__Constant_1
   \   000097   78..         MOV     R0,#?V0 + 8
   \   000099   12....       LCALL   ?L_ADD_X
   \   00009C   AA..         MOV     R2,?V0 + 8
   \   00009E   AB..         MOV     R3,?V0 + 9
   \   0000A0   AC..         MOV     R4,?V0 + 10
   \   0000A2   AD..         MOV     R5,?V0 + 11
   \   0000A4   801D         SJMP    ??MQTT_ReadLength_4
    127          		}
    128          
    129          		multiplier <<= 7;
   \                     ??MQTT_ReadLength_3:
   \   0000A6   7407         MOV     A,#0x7
   \   0000A8   78..         MOV     R0,#?V0 + 4
   \   0000AA   12....       LCALL   ?L_SHL
    130          		if(multiplier >= 2097152)		//128 * *128 * *128
   \   0000AD   90....       MOV     DPTR,#__Constant_200000
   \   0000B0   78..         MOV     R0,#?V0 + 4
   \   0000B2   12....       LCALL   ?UL_GE_X
   \   0000B5   508B         JNC     ??MQTT_ReadLength_1
    131          		{
    132          			return -2;					// error, out of range
   \   0000B7   7AFE         MOV     R2,#-0x2
   \   0000B9   8002         SJMP    ??MQTT_ReadLength_5
    133          		}
    134          	}
    135          
    136          	return -1;							// not complete
   \                     ??MQTT_ReadLength_2:
   \   0000BB   7AFF         MOV     R2,#-0x1
   \                     ??MQTT_ReadLength_5:
   \   0000BD   7BFF         MOV     R3,#-0x1
   \   0000BF   7CFF         MOV     R4,#-0x1
   \   0000C1   7DFF         MOV     R5,#-0x1
   \                     ??MQTT_ReadLength_4:
   \   0000C3   7402         MOV     A,#0x2
   \   0000C5   02....       LJMP    ?Subroutine2 & 0xFFFF
    137          
    138          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   12....       LCALL   ?DEALLOC_XSTACK8
   \   000003                REQUIRE ??Subroutine81_0
   \   000003                ; // Fall through to label ??Subroutine81_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine81_0:
   \   000000   7F10         MOV     R7,#0x10
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    139          
    140          //==========================================================
    141          //	º¯ÊýÃû³Æ£º	MQTT_UnPacketRecv
    142          //
    143          //	º¯Êý¹¦ÄÜ£º	MQTTÊý¾Ý½ÓÊÕÀàÐÍÅÐ¶Ï
    144          //
    145          //	Èë¿Ú²ÎÊý£º	dataPtr£º½ÓÊÕµÄÊý¾ÝÖ¸Õë
    146          //
    147          //	·µ»Ø²ÎÊý£º	0-³É¹¦		ÆäËû-Ê§°ÜÔ­Òò
    148          //
    149          //	ËµÃ÷£º		
    150          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    151          uint8 MQTT_UnPacketRecv(uint8 *dataPtr)
   \                     MQTT_UnPacketRecv:
    152          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 4
   \   000005   74FC         MOV     A,#-0x4
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   EA           MOV     A,R2
   \   00000B   FE           MOV     R6,A
   \   00000C   EB           MOV     A,R3
   \   00000D   FF           MOV     R7,A
    153          	
    154          	uint8 status = 255;
    155          	uint8 type = dataPtr[0] >> 4;				//ÀàÐÍ¼ì²é
   \   00000E   8E82         MOV     DPL,R6
   \   000010   8F83         MOV     DPH,R7
   \   000012   E0           MOVX    A,@DPTR
   \   000013   C4           SWAP    A
   \   000014   540F         ANL     A,#0xf
   \   000016   F8           MOV     R0,A
    156          	
    157          	if(type < 1 || type > 14)
   \   000017   74FF         MOV     A,#-0x1
   \   000019   28           ADD     A,R0
   \   00001A   C3           CLR     C
   \   00001B   940E         SUBB    A,#0xe
   \   00001D   4005         JC      ??MQTT_UnPacketRecv_0
    158          		return status;
   \                     ??MQTT_UnPacketRecv_1:
   \   00001F   79FF         MOV     R1,#-0x1
   \   000021   02....       LJMP    ??MQTT_UnPacketRecv_2 & 0xFFFF
    159          	
    160          	if(type == MQTT_PKT_PUBLISH)
   \                     ??MQTT_UnPacketRecv_0:
   \   000024   7403         MOV     A,#0x3
   \   000026   68           XRL     A,R0
   \   000027   6003         JZ      $+5
   \   000029   02....       LJMP    ??MQTT_UnPacketRecv_3 & 0xFFFF
    161          	{
    162          		uint8 *msgPtr;
    163          		uint32 remain_len = 0;
   \   00002C   90....       MOV     DPTR,#__Constant_0
   \   00002F   12....       LCALL   ?XLOAD_R2345
   \   000032   85..82       MOV     DPL,?XSP + 0
   \   000035   85..83       MOV     DPH,?XSP + 1
   \   000038   12....       LCALL   ?XSTORE_R2345
    164          		
    165          		msgPtr = dataPtr + MQTT_ReadLength(dataPtr + 1, 4, &remain_len) + 1;
   \   00003B                ; Setup parameters for call to function MQTT_ReadLength
   \   00003B   90....       MOV     DPTR,#__Constant_4
   \   00003E   12....       LCALL   ?PUSH_XSTACK8_X_FOUR
   \   000041   7404         MOV     A,#0x4
   \   000043   12....       LCALL   ?XSTACK_DISP0_8
   \   000046   AC82         MOV     R4,DPL
   \   000048   AD83         MOV     R5,DPH
   \   00004A   8E82         MOV     DPL,R6
   \   00004C   8F83         MOV     DPH,R7
   \   00004E   A3           INC     DPTR
   \   00004F   AA82         MOV     R2,DPL
   \   000051   AB83         MOV     R3,DPH
   \   000053   12....       LCALL   ??MQTT_ReadLength?relay
   \   000056   7404         MOV     A,#0x4
   \   000058   12....       LCALL   ?DEALLOC_XSTACK8
   \   00005B   8A..         MOV     ?V0 + 0,R2
   \   00005D   8B..         MOV     ?V0 + 1,R3
   \   00005F   EE           MOV     A,R6
   \   000060   25..         ADD     A,?V0 + 0
   \   000062   F582         MOV     DPL,A
   \   000064   EF           MOV     A,R7
   \   000065   35..         ADDC    A,?V0 + 1
   \   000067   F583         MOV     DPH,A
   \   000069   A3           INC     DPTR
   \   00006A   AA82         MOV     R2,DPL
   \   00006C   AB83         MOV     R3,DPH
    166          		
    167          		if(remain_len < 2 || dataPtr[0] & 0x01)					//retain
   \   00006E   85..82       MOV     DPL,?XSP + 0
   \   000071   85..83       MOV     DPH,?XSP + 1
   \   000074   C082         PUSH    DPL
   \   000076   C083         PUSH    DPH
   \   000078   90....       MOV     DPTR,#__Constant_2
   \   00007B   78..         MOV     R0,#?V0 + 0
   \   00007D   12....       LCALL   ?L_MOV_X
   \   000080   D083         POP     DPH
   \   000082   D082         POP     DPL
   \   000084   78..         MOV     R0,#?V0 + 0
   \   000086   12....       LCALL   ?UL_GT_X
   \   000089   4094         JC      ??MQTT_UnPacketRecv_1
   \   00008B   8E82         MOV     DPL,R6
   \   00008D   8F83         MOV     DPH,R7
   \   00008F   E0           MOVX    A,@DPTR
   \   000090   A2E0         MOV     C,0xE0 /* A   */.0
   \   000092   408B         JC      ??MQTT_UnPacketRecv_1
    168          			return 255;
    169          		
    170          		if(remain_len < ((uint16)msgPtr[0] << 8 | msgPtr[1]) + 2)
   \   000094   85..82       MOV     DPL,?XSP + 0
   \   000097   85..83       MOV     DPH,?XSP + 1
   \   00009A   C082         PUSH    DPL
   \   00009C   C083         PUSH    DPH
   \   00009E   8A82         MOV     DPL,R2
   \   0000A0   8B83         MOV     DPH,R3
   \   0000A2   E0           MOVX    A,@DPTR
   \   0000A3   F9           MOV     R1,A
   \   0000A4   A3           INC     DPTR
   \   0000A5   E0           MOVX    A,@DPTR
   \   0000A6   2402         ADD     A,#0x2
   \   0000A8   F5..         MOV     ?V0 + 0,A
   \   0000AA   E9           MOV     A,R1
   \   0000AB   3400         ADDC    A,#0x0
   \   0000AD   F5..         MOV     ?V0 + 1,A
   \   0000AF   E4           CLR     A
   \   0000B0   F5..         MOV     ?V0 + 2,A
   \   0000B2   F5..         MOV     ?V0 + 3,A
   \   0000B4   D083         POP     DPH
   \   0000B6   D082         POP     DPL
   \   0000B8   78..         MOV     R0,#?V0 + 0
   \   0000BA   12....       LCALL   ?UL_GT_X
   \   0000BD   5003         JNC     $+5
   \   0000BF   02....       LJMP    ??MQTT_UnPacketRecv_1 & 0xFFFF
    171          			return 255;
    172          		
    173          		if(strstr((int8 *)msgPtr + 2, CMD_TOPIC_PREFIX) != NULL)	//Èç¹ûÊÇÃüÁîÏÂ·¢
                 		          ^
Warning[Pe167]: argument of type "int8 *" is incompatible with parameter of
          type "char const *"
   \   0000C2                ; Setup parameters for call to function strstr
   \   0000C2   7C..         MOV     R4,#`?<Constant "$creq">` & 0xff
   \   0000C4   7D..         MOV     R5,#(`?<Constant "$creq">` >> 8) & 0xff
   \   0000C6   EA           MOV     A,R2
   \   0000C7   2402         ADD     A,#0x2
   \   0000C9   0A           INC     R2
   \   0000CA   0A           INC     R2
   \   0000CB   EB           MOV     A,R3
   \   0000CC   3400         ADDC    A,#0x0
   \   0000CE   FB           MOV     R3,A
   \   0000CF   12....       LCALL   ??strstr?relay
   \   0000D2   8B..         MOV     ?V0 + 1,R3
   \   0000D4   EA           MOV     A,R2
   \   0000D5   45..         ORL     A,?V0 + 1
   \   0000D7   6004         JZ      ??MQTT_UnPacketRecv_4
    174          			status = MQTT_PKT_CMD;
   \   0000D9   790F         MOV     R1,#0xf
   \   0000DB   8006         SJMP    ??MQTT_UnPacketRecv_2
    175          		else
    176          			status = MQTT_PKT_PUBLISH;
   \                     ??MQTT_UnPacketRecv_4:
   \   0000DD   7903         MOV     R1,#0x3
   \   0000DF   8002         SJMP    ??MQTT_UnPacketRecv_2
    177          	}
    178          	else
    179          		status = type;
   \                     ??MQTT_UnPacketRecv_3:
   \   0000E1   E8           MOV     A,R0
   \   0000E2   F9           MOV     R1,A
    180          	
    181          	return status;
   \                     ??MQTT_UnPacketRecv_2:
   \   0000E3   7404         MOV     A,#0x4
   \   0000E5   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000E8                REQUIRE ?Subroutine3
   \   0000E8                ; // Fall through to label ?Subroutine3
    182          
    183          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   7F04         MOV     R7,#0x4
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    184          
    185          //==========================================================
    186          //	º¯ÊýÃû³Æ£º	MQTT_PacketConnect
    187          //
    188          //	º¯Êý¹¦ÄÜ£º	Á¬½ÓÏûÏ¢×é°ü
    189          //
    190          //	Èë¿Ú²ÎÊý£º	user£ºÓÃ»§Ãû£º²úÆ·ID
    191          //				password£ºÃÜÂë£º¼øÈ¨ÐÅÏ¢»òapikey
    192          //				devid£ºÉè±¸ID
    193          //				cTime£ºÁ¬½Ó±£³ÖÊ±¼ä
    194          //				clean_session£ºÀëÏßÏûÏ¢Çå³ý±êÖ¾
    195          //				qos£ºÖØ·¢±êÖ¾
    196          //				will_topic£ºÒì³£ÀëÏßtopic
    197          //				will_msg£ºÒì³£ÀëÏßÏûÏ¢
    198          //				will_retain£ºÏûÏ¢ÍÆËÍ±êÖ¾
    199          //				mqttPacket£º°üÖ¸Õë
    200          //
    201          //	·µ»Ø²ÎÊý£º	0-³É¹¦		ÆäËû-Ê§°Ü
    202          //
    203          //	ËµÃ÷£º		
    204          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    205          uint8 MQTT_PacketConnect(const int8 *user, const int8 *password, const int8 *devid,
   \                     MQTT_PacketConnect:
    206          						uint16 cTime, uint1 clean_session, uint1 qos,
    207          						const int8 *will_topic, const int8 *will_msg, int32 will_retain,
    208          						MQTT_PACKET_STRUCTURE *mqttPacket)
    209          {
   \   000000   74E8         MOV     A,#-0x18
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 24
   \   000005                ; Auto size: 5
   \   000005   74FB         MOV     A,#-0x5
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   7402         MOV     A,#0x2
   \   00000C   12....       LCALL   ?XSTACK_DISP0_8
   \   00000F   EA           MOV     A,R2
   \   000010   F0           MOVX    @DPTR,A
   \   000011   A3           INC     DPTR
   \   000012   EB           MOV     A,R3
   \   000013   F0           MOVX    @DPTR,A
   \   000014   85..82       MOV     DPL,?XSP + 0
   \   000017   85..83       MOV     DPH,?XSP + 1
   \   00001A   EC           MOV     A,R4
   \   00001B   F0           MOVX    @DPTR,A
   \   00001C   A3           INC     DPTR
   \   00001D   ED           MOV     A,R5
   \   00001E   F0           MOVX    @DPTR,A
   \   00001F   7404         MOV     A,#0x4
   \   000021   12....       LCALL   ?XSTACK_DISP0_8
   \   000024   E9           MOV     A,R1
   \   000025   F0           MOVX    @DPTR,A
   \   000026   741F         MOV     A,#0x1f
   \   000028   12....       LCALL   ?XSTACK_DISP0_8
   \   00002B   E0           MOVX    A,@DPTR
   \   00002C   F5..         MOV     ?V0 + 10,A
   \   00002E   A3           INC     DPTR
   \   00002F   E0           MOVX    A,@DPTR
   \   000030   F5..         MOV     ?V0 + 11,A
   \   000032   7421         MOV     A,#0x21
   \   000034   12....       LCALL   ?XSTACK_DISP0_8
   \   000037   E0           MOVX    A,@DPTR
   \   000038   F5..         MOV     ?V0 + 9,A
   \   00003A   7426         MOV     A,#0x26
   \   00003C   12....       LCALL   ?XSTACK_DISP0_8
   \   00003F   78..         MOV     R0,#?V0 + 4
   \   000041   12....       LCALL   ?L_MOV_X
   \   000044   742A         MOV     A,#0x2a
   \   000046   12....       LCALL   ?XSTACK_DISP0_8
   \   000049   E0           MOVX    A,@DPTR
   \   00004A   F5..         MOV     ?V0 + 14,A
   \   00004C   A3           INC     DPTR
   \   00004D   E0           MOVX    A,@DPTR
   \   00004E   F5..         MOV     ?V0 + 15,A
    210          	
    211          	uint8 flags = 0;
   \   000050   75..00       MOV     ?V0 + 8,#0x0
    212          	uint8 will_topic_len = 0;
    213          	uint16 total_len = 15;
    214          	int16 len = 0, devid_len = strlen(devid);
                 	                                  ^
Warning[Pe167]: argument of type "signed char const *" is incompatible with
          parameter of type "char const *"
   \   000053                ; Setup parameters for call to function strlen
   \   000053   741D         MOV     A,#0x1d
   \   000055   12....       LCALL   ?XSTACK_DISP0_8
   \   000058   12....       LCALL   ?Subroutine25 & 0xFFFF
   \                     ??CrossCallReturnLabel_38:
   \   00005B   AE..         MOV     R6,?V0 + 0
   \   00005D   AF..         MOV     R7,?V0 + 1
    215          	
    216          	if(!devid)
   \   00005F   741D         MOV     A,#0x1d
   \   000061   12....       LCALL   ?XSTACK_DISP0_8
   \   000064   12....       LCALL   ??Subroutine73_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_129:
   \   000067   7005         JNZ     ??MQTT_PacketConnect_0
    217          		return 1;
   \   000069   7901         MOV     R1,#0x1
   \   00006B   02....       LJMP    ??MQTT_PacketConnect_1 & 0xFFFF
    218          	
    219          	total_len += devid_len + 2;
   \                     ??MQTT_PacketConnect_0:
   \   00006E   EE           MOV     A,R6
   \   00006F   2411         ADD     A,#0x11
   \   000071   F5..         MOV     ?V0 + 2,A
   \   000073   EF           MOV     A,R7
   \   000074   3400         ADDC    A,#0x0
   \   000076   F5..         MOV     ?V0 + 3,A
    220          	
    221          	//¶ÏÏßºó£¬ÊÇ·ñÇåÀíÀëÏßÏûÏ¢£º1-ÇåÀí	0-²»ÇåÀí--------------------------------------------
    222          	if(clean_session)
   \   000078   7404         MOV     A,#0x4
   \   00007A   12....       LCALL   ?XSTACK_DISP0_8
   \   00007D   E0           MOVX    A,@DPTR
   \   00007E   6003         JZ      ??MQTT_PacketConnect_2
    223          	{
    224          		flags |= MQTT_CONNECT_CLEAN_SESSION;
   \   000080   75..02       MOV     ?V0 + 8,#0x2
    225          	}
    226          	
    227          	//Òì³£µôÏßÇé¿öÏÂ£¬·þÎñÆ÷·¢²¼µÄtopic------------------------------------------------------
    228          	if(will_topic)
   \                     ??MQTT_PacketConnect_2:
   \   000083   7422         MOV     A,#0x22
   \   000085   12....       LCALL   ?XSTACK_DISP0_8
   \   000088   12....       LCALL   ??Subroutine73_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_130:
   \   00008B   6030         JZ      ??CrossCallReturnLabel_56
    229          	{
    230          		flags |= MQTT_CONNECT_WILL_FLAG;
   \   00008D   E5..         MOV     A,?V0 + 8
   \   00008F   D2E2         SETB    0xE0 /* A   */.2
   \   000091   F5..         MOV     ?V0 + 8,A
    231          		will_topic_len = strlen(will_topic);
                 		                        ^
Warning[Pe167]: argument of type "signed char const *" is incompatible with
          parameter of type "char const *"
   \   000093                ; Setup parameters for call to function strlen
   \   000093   7422         MOV     A,#0x22
   \   000095   12....       LCALL   ?XSTACK_DISP0_8
   \   000098   12....       LCALL   ?Subroutine26 & 0xFFFF
    232          		total_len += 4 + will_topic_len + strlen(will_msg);
                 		                                         ^
Warning[Pe167]: argument of type "signed char const *" is incompatible with
          parameter of type "char const *"
   \                     ??CrossCallReturnLabel_40:
   \   00009B   EA           MOV     A,R2
   \   00009C   2404         ADD     A,#0x4
   \   00009E   F5..         MOV     ?V0 + 0,A
   \   0000A0   E4           CLR     A
   \   0000A1   3400         ADDC    A,#0x0
   \   0000A3   F5..         MOV     ?V0 + 1,A
   \   0000A5                ; Setup parameters for call to function strlen
   \   0000A5   7424         MOV     A,#0x24
   \   0000A7   12....       LCALL   ?XSTACK_DISP0_8
   \   0000AA   12....       LCALL   ?Subroutine26 & 0xFFFF
    233          	}
   \                     ??CrossCallReturnLabel_41:
   \   0000AD   8A..         MOV     ?V0 + 12,R2
   \   0000AF   8B..         MOV     ?V0 + 13,R3
   \   0000B1   E5..         MOV     A,?V0 + 0
   \   0000B3   25..         ADD     A,?V0 + 12
   \   0000B5   F8           MOV     R0,A
   \   0000B6   E5..         MOV     A,?V0 + 1
   \   0000B8   35..         ADDC    A,?V0 + 13
   \   0000BA   12....       LCALL   ?Subroutine35 & 0xFFFF
    234          	
    235          	//qos¼¶±ð--Ö÷ÒªÓÃÓÚPUBLISH£¨·¢²¼Ì¬£©ÏûÏ¢µÄ£¬±£Ö¤ÏûÏ¢´«µÝµÄ´ÎÊý-----------------------------
    236          	switch((unsigned char)qos)
   \                     ??CrossCallReturnLabel_56:
   \   0000BD   E5..         MOV     A,?V0 + 9
   \   0000BF   600B         JZ      ??MQTT_PacketConnect_3
   \   0000C1   14           DEC     A
   \   0000C2   6005         JZ      ??MQTT_PacketConnect_4
   \   0000C4   14           DEC     A
   \   0000C5   602F         JZ      ??MQTT_PacketConnect_5
   \   0000C7   8032         SJMP    ??MQTT_PacketConnect_6
    237          	{
    238          		case MQTT_QOS_LEVEL0:
    239          			flags |= MQTT_CONNECT_WILL_QOS0;							//×î¶àÒ»´Î
    240          		break;
    241          		
    242          		case MQTT_QOS_LEVEL1:
    243          			flags |= (MQTT_CONNECT_WILL_FLAG | MQTT_CONNECT_WILL_QOS1);	//×îÉÙÒ»´Î
   \                     ??MQTT_PacketConnect_4:
   \   0000C9   43..0C       ORL     ?V0 + 8,#0xc
    244          		break;
    245          		
    246          		case MQTT_QOS_LEVEL2:
    247          			flags |= (MQTT_CONNECT_WILL_FLAG | MQTT_CONNECT_WILL_QOS2);	//Ö»ÓÐÒ»´Î
    248          		break;
    249          		
    250          		default:
    251          		return 2;
    252          	}
    253          	
    254          	//Ö÷ÒªÓÃÓÚPUBLISH(·¢²¼Ì¬)µÄÏûÏ¢£¬±íÊ¾·þÎñÆ÷Òª±£ÁôÕâ´ÎÍÆËÍµÄÐÅÏ¢£¬Èç¹ûÓÐÐÂµÄ¶©ÔÄÕß³öÏÖ£¬¾Í°ÑÕâÏûÏ¢ÍÆËÍ¸øËü¡£Èç¹û²»ÉèÄÇÃ´ÍÆËÍÖÁµ±Ç°¶©ÔÄµÄ¾ÍÊÍ·ÅÁË
    255          	if(will_retain)
   \                     ??MQTT_PacketConnect_3:
   \   0000CC   A9..         MOV     R1,?V0 + 5
   \   0000CE   AA..         MOV     R2,?V0 + 6
   \   0000D0   AB..         MOV     R3,?V0 + 7
   \   0000D2   E5..         MOV     A,?V0 + 4
   \   0000D4   49           ORL     A,R1
   \   0000D5   4A           ORL     A,R2
   \   0000D6   4B           ORL     A,R3
   \   0000D7   6003         JZ      ??MQTT_PacketConnect_7
    256          	{
    257          		flags |= (MQTT_CONNECT_WILL_FLAG | MQTT_CONNECT_WILL_RETAIN);
   \   0000D9   43..24       ORL     ?V0 + 8,#0x24
    258          	}
    259          	
    260          	//ÕËºÅÎª¿Õ ÃÜÂëÎª¿Õ---------------------------------------------------------------------
    261          	if(!user || !password)
   \                     ??MQTT_PacketConnect_7:
   \   0000DC   7402         MOV     A,#0x2
   \   0000DE   12....       LCALL   ?XSTACK_DISP0_8
   \   0000E1   12....       LCALL   ??Subroutine73_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_131:
   \   0000E4   600B         JZ      ??MQTT_PacketConnect_8
   \   0000E6   85..82       MOV     DPL,?XSP + 0
   \   0000E9   85..83       MOV     DPH,?XSP + 1
   \   0000EC   12....       LCALL   ??Subroutine73_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_132:
   \   0000EF   700F         JNZ     ??MQTT_PacketConnect_9
    262          	{
    263          		return 3;
   \                     ??MQTT_PacketConnect_8:
   \   0000F1   7903         MOV     R1,#0x3
   \   0000F3   02....       LJMP    ??MQTT_PacketConnect_1 & 0xFFFF
    264          	}
   \                     ??MQTT_PacketConnect_5:
   \   0000F6   43..14       ORL     ?V0 + 8,#0x14
   \   0000F9   80D1         SJMP    ??MQTT_PacketConnect_3
   \                     ??MQTT_PacketConnect_6:
   \   0000FB   7902         MOV     R1,#0x2
   \   0000FD   02....       LJMP    ??MQTT_PacketConnect_1 & 0xFFFF
    265          	flags |= MQTT_CONNECT_USER_NAME | MQTT_CONNECT_PASSORD;
   \                     ??MQTT_PacketConnect_9:
   \   000100   43..C0       ORL     ?V0 + 8,#0xc0
    266          	
    267          	total_len += strlen(user) + strlen(password) + 4;
                 	                    ^
Warning[Pe167]: argument of type "signed char const *" is incompatible with
          parameter of type "char const *"

  	total_len += strlen(user) + strlen(password) + 4;
  	                                   ^
"I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\MqttKit.c",267  Warning[Pe167]: 
          argument of type "signed char const *" is incompatible with
          parameter of type "char const *"
   \   000103                ; Setup parameters for call to function strlen
   \   000103   7402         MOV     A,#0x2
   \   000105   12....       LCALL   ?XSTACK_DISP0_8
   \   000108   12....       LCALL   ?Subroutine25 & 0xFFFF
   \                     ??CrossCallReturnLabel_39:
   \   00010B                ; Setup parameters for call to function strlen
   \   00010B   85..82       MOV     DPL,?XSP + 0
   \   00010E   85..83       MOV     DPH,?XSP + 1
   \   000111   12....       LCALL   ?Subroutine26 & 0xFFFF
   \                     ??CrossCallReturnLabel_42:
   \   000114   8A..         MOV     ?V0 + 4,R2
   \   000116   8B..         MOV     ?V0 + 5,R3
   \   000118   E5..         MOV     A,?V0 + 0
   \   00011A   25..         ADD     A,?V0 + 4
   \   00011C   F8           MOV     R0,A
   \   00011D   E5..         MOV     A,?V0 + 1
   \   00011F   35..         ADDC    A,?V0 + 5
   \   000121   F9           MOV     R1,A
   \   000122   E8           MOV     A,R0
   \   000123   2404         ADD     A,#0x4
   \   000125   F8           MOV     R0,A
   \   000126   E9           MOV     A,R1
   \   000127   3400         ADDC    A,#0x0
   \   000129   12....       LCALL   ?Subroutine35 & 0xFFFF
    268          	
    269          	//·ÖÅäÄÚ´æ-----------------------------------------------------------------------------
    270          	MQTT_NewBuffer(mqttPacket, total_len);
   \                     ??CrossCallReturnLabel_57:
   \   00012C                ; Setup parameters for call to function MQTT_NewBuffer
   \   00012C   85....       MOV     ?V0 + 4,?V0 + 2
   \   00012F   F5..         MOV     ?V0 + 5,A
   \   000131   E4           CLR     A
   \   000132   F5..         MOV     ?V0 + 6,A
   \   000134   F5..         MOV     ?V0 + 7,A
   \   000136   78..         MOV     R0,#?V0 + 4
   \   000138   12....       LCALL   ?PUSH_XSTACK_I_FOUR
   \   00013B   AA..         MOV     R2,?V0 + 14
   \   00013D   AB..         MOV     R3,?V0 + 15
   \   00013F   12....       LCALL   ??Subroutine84_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_212:
   \   000142   12....       LCALL   ?DEALLOC_XSTACK8
    271          	if(mqttPacket->_data == NULL)
   \   000145   85..82       MOV     DPL,?V0 + 14
   \   000148   85..83       MOV     DPH,?V0 + 15
   \   00014B   12....       LCALL   ??Subroutine73_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_133:
   \   00014E   7005         JNZ     ??MQTT_PacketConnect_10
    272          		return 4;
   \   000150   7904         MOV     R1,#0x4
   \   000152   02....       LJMP    ??MQTT_PacketConnect_1 & 0xFFFF
    273          	
    274          	osal_memset(mqttPacket->_data, 0, total_len);
                 	^
Warning[Pe223]: function "osal_memset" declared implicitly
   \                     ??MQTT_PacketConnect_10:
   \   000155                ; Setup parameters for call to function osal_memset
   \   000155   78..         MOV     R0,#?V0 + 2
   \   000157   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00015A   7C00         MOV     R4,#0x0
   \   00015C   7D00         MOV     R5,#0x0
   \   00015E   12....       LCALL   ?Subroutine60 & 0xFFFF
   \                     ??CrossCallReturnLabel_127:
   \   000161   12....       LCALL   ??osal_memset?relay
   \   000164   7402         MOV     A,#0x2
   \   000166   12....       LCALL   ?DEALLOC_XSTACK8
    275          	
    276          /*************************************¹Ì¶¨Í·²¿***********************************************/
    277          	
    278          	//¹Ì¶¨Í·²¿----------------------Á¬½ÓÇëÇóÀàÐÍ---------------------------------------------
    279          	mqttPacket->_data[mqttPacket->_len++] = MQTT_PKT_CONNECT << 4;
   \   000169   E5..         MOV     A,?V0 + 14
   \   00016B   2402         ADD     A,#0x2
   \   00016D   F5..         MOV     ?V0 + 0,A
   \   00016F   E5..         MOV     A,?V0 + 15
   \   000171   3400         ADDC    A,#0x0
   \   000173   F5..         MOV     ?V0 + 1,A
   \   000175   12....       LCALL   ?Subroutine24 & 0xFFFF
   \                     ??CrossCallReturnLabel_36:
   \   000178   12....       LCALL   ?L_MOV_X
   \   00017B   12....       LCALL   ?Subroutine45 & 0xFFFF
   \                     ??CrossCallReturnLabel_78:
   \   00017E   7410         MOV     A,#0x10
   \   000180   12....       LCALL   ??Subroutine87_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_220:
   \   000183   12....       LCALL   ?L_MOV_X
   \   000186   85..82       MOV     DPL,?V0 + 0
   \   000189   85..83       MOV     DPH,?V0 + 1
   \   00018C   78..         MOV     R0,#?V0 + 4
   \   00018E   12....       LCALL   ?L_ADD_TO_X
    280          	
    281          	//¹Ì¶¨Í·²¿----------------------Ê£Óà³¤¶ÈÖµ-----------------------------------------------
    282          	len = MQTT_DumpLength(total_len - 5, mqttPacket->_data + mqttPacket->_len);
   \   000191                ; Setup parameters for call to function MQTT_DumpLength
   \   000191   85..82       MOV     DPL,?V0 + 0
   \   000194   85..83       MOV     DPH,?V0 + 1
   \   000197   78..         MOV     R0,#?V0 + 4
   \   000199   12....       LCALL   ?L_MOV_X
   \   00019C   EA           MOV     A,R2
   \   00019D   25..         ADD     A,?V0 + 4
   \   00019F   FC           MOV     R4,A
   \   0001A0   EB           MOV     A,R3
   \   0001A1   35..         ADDC    A,?V0 + 5
   \   0001A3   FD           MOV     R5,A
   \   0001A4   E5..         MOV     A,?V0 + 2
   \   0001A6   24FB         ADD     A,#-0x5
   \   0001A8   FA           MOV     R2,A
   \   0001A9   E5..         MOV     A,?V0 + 3
   \   0001AB   34FF         ADDC    A,#-0x1
   \   0001AD   FB           MOV     R3,A
   \   0001AE   12....       LCALL   ??Subroutine75_0 & 0xFFFF
    283          	if(len < 0)
   \                     ??CrossCallReturnLabel_160:
   \   0001B1   500C         JNC     ??MQTT_PacketConnect_11
    284          	{
    285          		MQTT_DeleteBuffer(mqttPacket);
   \   0001B3                ; Setup parameters for call to function MQTT_DeleteBuffer
   \   0001B3   AA..         MOV     R2,?V0 + 14
   \   0001B5   AB..         MOV     R3,?V0 + 15
   \   0001B7   12....       LCALL   ??MQTT_DeleteBuffer?relay
    286          		return 5;
   \   0001BA   7905         MOV     R1,#0x5
   \   0001BC   02....       LJMP    ??MQTT_PacketConnect_1 & 0xFFFF
    287          	}
    288          	else
    289          		mqttPacket->_len += len;
   \                     ??MQTT_PacketConnect_11:
   \   0001BF   E5..         MOV     A,?V0 + 14
   \   0001C1   2402         ADD     A,#0x2
   \   0001C3   E5..         MOV     A,?V0 + 15
   \   0001C5   3400         ADDC    A,#0x0
   \   0001C7   EB           MOV     A,R3
   \   0001C8   12....       LCALL   ?Subroutine32 & 0xFFFF
   \                     ??CrossCallReturnLabel_50:
   \   0001CB   12....       LCALL   ?L_ADD_TO_X
    290          	
    291          /*************************************¿É±äÍ·²¿***********************************************/
    292          	
    293          	//¿É±äÍ·²¿----------------------Ð­ÒéÃû³¤¶È ºÍ Ð­ÒéÃû--------------------------------------
    294          	mqttPacket->_data[mqttPacket->_len++] = 0;
   \   0001CE   12....       LCALL   ?Subroutine24 & 0xFFFF
   \                     ??CrossCallReturnLabel_37:
   \   0001D1   12....       LCALL   ?L_MOV_X
   \   0001D4   12....       LCALL   ?Subroutine45 & 0xFFFF
   \                     ??CrossCallReturnLabel_79:
   \   0001D7   E4           CLR     A
   \   0001D8   12....       LCALL   ??Subroutine87_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_221:
   \   0001DB   12....       LCALL   ?L_MOV_X
   \   0001DE   85..82       MOV     DPL,?V0 + 0
   \   0001E1   85..83       MOV     DPH,?V0 + 1
   \   0001E4   78..         MOV     R0,#?V0 + 4
   \   0001E6   12....       LCALL   ?L_ADD_TO_X
    295          	mqttPacket->_data[mqttPacket->_len++] = 4;
   \   0001E9   85..82       MOV     DPL,?V0 + 0
   \   0001EC   85..83       MOV     DPH,?V0 + 1
   \   0001EF   78..         MOV     R0,#?V0 + 4
   \   0001F1   12....       LCALL   ?L_MOV_X
   \   0001F4   12....       LCALL   ?Subroutine42 & 0xFFFF
   \                     ??CrossCallReturnLabel_72:
   \   0001F7   12....       LCALL   ??Subroutine87_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_222:
   \   0001FA   12....       LCALL   ?L_MOV_X
   \   0001FD   85..82       MOV     DPL,?V0 + 0
   \   000200   85..83       MOV     DPH,?V0 + 1
   \   000203   78..         MOV     R0,#?V0 + 4
   \   000205   12....       LCALL   ?L_ADD_TO_X
    296          	mqttPacket->_data[mqttPacket->_len++] = 'M';
   \   000208   85..82       MOV     DPL,?V0 + 0
   \   00020B   85..83       MOV     DPH,?V0 + 1
   \   00020E   78..         MOV     R0,#?V0 + 4
   \   000210   12....       LCALL   ?L_MOV_X
   \   000213   12....       LCALL   ?Subroutine45 & 0xFFFF
   \                     ??CrossCallReturnLabel_80:
   \   000216   744D         MOV     A,#0x4d
   \   000218   12....       LCALL   ??Subroutine87_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_223:
   \   00021B   12....       LCALL   ?L_MOV_X
   \   00021E   85..82       MOV     DPL,?V0 + 0
   \   000221   85..83       MOV     DPH,?V0 + 1
   \   000224   78..         MOV     R0,#?V0 + 4
   \   000226   12....       LCALL   ?L_ADD_TO_X
    297          	mqttPacket->_data[mqttPacket->_len++] = 'Q';
   \   000229   85..82       MOV     DPL,?V0 + 0
   \   00022C   85..83       MOV     DPH,?V0 + 1
   \   00022F   78..         MOV     R0,#?V0 + 4
   \   000231   12....       LCALL   ?L_MOV_X
   \   000234   12....       LCALL   ?Subroutine45 & 0xFFFF
   \                     ??CrossCallReturnLabel_81:
   \   000237   7451         MOV     A,#0x51
   \   000239   12....       LCALL   ??Subroutine87_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_224:
   \   00023C   12....       LCALL   ?L_MOV_X
   \   00023F   85..82       MOV     DPL,?V0 + 0
   \   000242   85..83       MOV     DPH,?V0 + 1
   \   000245   78..         MOV     R0,#?V0 + 4
   \   000247   12....       LCALL   ?L_ADD_TO_X
    298          	mqttPacket->_data[mqttPacket->_len++] = 'T';
   \   00024A   85..82       MOV     DPL,?V0 + 0
   \   00024D   85..83       MOV     DPH,?V0 + 1
   \   000250   78..         MOV     R0,#?V0 + 4
   \   000252   12....       LCALL   ?L_MOV_X
   \   000255   12....       LCALL   ?Subroutine43 & 0xFFFF
   \                     ??CrossCallReturnLabel_74:
   \   000258   12....       LCALL   ??Subroutine87_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_225:
   \   00025B   12....       LCALL   ?L_MOV_X
   \   00025E   85..82       MOV     DPL,?V0 + 0
   \   000261   85..83       MOV     DPH,?V0 + 1
   \   000264   78..         MOV     R0,#?V0 + 4
   \   000266   12....       LCALL   ?L_ADD_TO_X
    299          	mqttPacket->_data[mqttPacket->_len++] = 'T';
   \   000269   85..82       MOV     DPL,?V0 + 0
   \   00026C   85..83       MOV     DPH,?V0 + 1
   \   00026F   78..         MOV     R0,#?V0 + 4
   \   000271   12....       LCALL   ?L_MOV_X
   \   000274   12....       LCALL   ?Subroutine43 & 0xFFFF
   \                     ??CrossCallReturnLabel_75:
   \   000277   12....       LCALL   ??Subroutine87_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_226:
   \   00027A   12....       LCALL   ?L_MOV_X
   \   00027D   85..82       MOV     DPL,?V0 + 0
   \   000280   85..83       MOV     DPH,?V0 + 1
   \   000283   78..         MOV     R0,#?V0 + 4
   \   000285   12....       LCALL   ?L_ADD_TO_X
    300          	
    301          	//¿É±äÍ·²¿----------------------protocol level 4-----------------------------------------
    302          	mqttPacket->_data[mqttPacket->_len++] = 4;
   \   000288   85..82       MOV     DPL,?V0 + 0
   \   00028B   85..83       MOV     DPH,?V0 + 1
   \   00028E   78..         MOV     R0,#?V0 + 4
   \   000290   12....       LCALL   ?L_MOV_X
   \   000293   12....       LCALL   ?Subroutine42 & 0xFFFF
   \                     ??CrossCallReturnLabel_73:
   \   000296   12....       LCALL   ??Subroutine87_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_227:
   \   000299   12....       LCALL   ?L_MOV_X
   \   00029C   85..82       MOV     DPL,?V0 + 0
   \   00029F   85..83       MOV     DPH,?V0 + 1
   \   0002A2   78..         MOV     R0,#?V0 + 4
   \   0002A4   12....       LCALL   ?L_ADD_TO_X
    303          	
    304          	//¿É±äÍ·²¿----------------------Á¬½Ó±êÖ¾(¸Ãº¯Êý¿ªÍ·´¦ÀíµÄÊý¾Ý)-----------------------------
    305              mqttPacket->_data[mqttPacket->_len++] = flags;
   \   0002A7   85..82       MOV     DPL,?V0 + 0
   \   0002AA   85..83       MOV     DPH,?V0 + 1
   \   0002AD   78..         MOV     R0,#?V0 + 4
   \   0002AF   12....       LCALL   ?L_MOV_X
   \   0002B2   12....       LCALL   ?Subroutine45 & 0xFFFF
   \                     ??CrossCallReturnLabel_82:
   \   0002B5   E5..         MOV     A,?V0 + 8
   \   0002B7   12....       LCALL   ??Subroutine87_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_228:
   \   0002BA   12....       LCALL   ?L_MOV_X
   \   0002BD   85..82       MOV     DPL,?V0 + 0
   \   0002C0   85..83       MOV     DPH,?V0 + 1
   \   0002C3   78..         MOV     R0,#?V0 + 4
   \   0002C5   12....       LCALL   ?L_ADD_TO_X
    306          	
    307          	//¿É±äÍ·²¿----------------------±£³ÖÁ¬½ÓµÄÊ±¼ä(Ãë)----------------------------------------
    308          	mqttPacket->_data[mqttPacket->_len++] = MOSQ_MSB(cTime);
   \   0002C8   85..82       MOV     DPL,?V0 + 0
   \   0002CB   85..83       MOV     DPH,?V0 + 1
   \   0002CE   78..         MOV     R0,#?V0 + 4
   \   0002D0   12....       LCALL   ?L_MOV_X
   \   0002D3   12....       LCALL   ?Subroutine45 & 0xFFFF
   \                     ??CrossCallReturnLabel_83:
   \   0002D6   E5..         MOV     A,?V0 + 11
   \   0002D8   12....       LCALL   ??Subroutine87_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_229:
   \   0002DB   12....       LCALL   ?L_MOV_X
   \   0002DE   85..82       MOV     DPL,?V0 + 0
   \   0002E1   85..83       MOV     DPH,?V0 + 1
   \   0002E4   78..         MOV     R0,#?V0 + 4
   \   0002E6   12....       LCALL   ?L_ADD_TO_X
    309          	mqttPacket->_data[mqttPacket->_len++] = MOSQ_LSB(cTime);
   \   0002E9   85..82       MOV     DPL,?V0 + 0
   \   0002EC   85..83       MOV     DPH,?V0 + 1
   \   0002EF   78..         MOV     R0,#?V0 + 4
   \   0002F1   12....       LCALL   ?L_MOV_X
   \   0002F4   12....       LCALL   ?Subroutine45 & 0xFFFF
   \                     ??CrossCallReturnLabel_84:
   \   0002F7   E5..         MOV     A,?V0 + 10
   \   0002F9   12....       LCALL   ??Subroutine87_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_230:
   \   0002FC   12....       LCALL   ?L_MOV_X
   \   0002FF   85..82       MOV     DPL,?V0 + 0
   \   000302   85..83       MOV     DPH,?V0 + 1
   \   000305   78..         MOV     R0,#?V0 + 4
   \   000307   12....       LCALL   ?L_ADD_TO_X
    310          	 
    311          /*************************************ÏûÏ¢Ìå************************************************/
    312          
    313          	//ÏûÏ¢Ìå----------------------------devid³¤¶È¡¢devid-------------------------------------
    314          	mqttPacket->_data[mqttPacket->_len++] = MOSQ_MSB(devid_len);
   \   00030A   85..82       MOV     DPL,?V0 + 0
   \   00030D   85..83       MOV     DPH,?V0 + 1
   \   000310   78..         MOV     R0,#?V0 + 4
   \   000312   12....       LCALL   ?L_MOV_X
   \   000315   12....       LCALL   ?Subroutine45 & 0xFFFF
   \                     ??CrossCallReturnLabel_85:
   \   000318   EF           MOV     A,R7
   \   000319   12....       LCALL   ??Subroutine87_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_231:
   \   00031C   12....       LCALL   ?L_MOV_X
   \   00031F   85..82       MOV     DPL,?V0 + 0
   \   000322   85..83       MOV     DPH,?V0 + 1
   \   000325   78..         MOV     R0,#?V0 + 4
   \   000327   12....       LCALL   ?L_ADD_TO_X
    315          	mqttPacket->_data[mqttPacket->_len++] = MOSQ_LSB(devid_len);
   \   00032A   85..82       MOV     DPL,?V0 + 0
   \   00032D   85..83       MOV     DPH,?V0 + 1
   \   000330   78..         MOV     R0,#?V0 + 4
   \   000332   12....       LCALL   ?L_MOV_X
   \   000335   12....       LCALL   ?Subroutine45 & 0xFFFF
   \                     ??CrossCallReturnLabel_86:
   \   000338   EE           MOV     A,R6
   \   000339   12....       LCALL   ??Subroutine87_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_232:
   \   00033C   12....       LCALL   ?L_MOV_X
   \   00033F   85..82       MOV     DPL,?V0 + 0
   \   000342   85..83       MOV     DPH,?V0 + 1
   \   000345   78..         MOV     R0,#?V0 + 4
   \   000347   12....       LCALL   ?L_ADD_TO_X
    316          	
    317          	strncat((int8 *)mqttPacket->_data + mqttPacket->_len, devid, devid_len);
                 	        ^
Warning[Pe167]: argument of type "int8 *" is incompatible with parameter of
          type "char *"

  	strncat((int8 *)mqttPacket->_data + mqttPacket->_len, devid, devid_len);
  	                                                      ^
"I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\MqttKit.c",317  Warning[Pe167]: 
          argument of type "signed char const *" is incompatible with
          parameter of type "char const *"
   \   00034A                ; Setup parameters for call to function strncat
   \   00034A   8E..         MOV     ?V0 + 2,R6
   \   00034C   8F..         MOV     ?V0 + 3,R7
   \   00034E   78..         MOV     R0,#?V0 + 2
   \   000350   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000353   741F         MOV     A,#0x1f
   \   000355   12....       LCALL   ?XSTACK_DISP0_8
   \   000358   12....       LCALL   ?Subroutine58 & 0xFFFF
   \                     ??CrossCallReturnLabel_106:
   \   00035B   78..         MOV     R0,#?V0 + 4
   \   00035D   12....       LCALL   ?L_MOV_X
   \   000360   EA           MOV     A,R2
   \   000361   25..         ADD     A,?V0 + 4
   \   000363   FA           MOV     R2,A
   \   000364   EB           MOV     A,R3
   \   000365   35..         ADDC    A,?V0 + 5
   \   000367   12....       LCALL   ??Subroutine74_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_156:
   \   00036A   12....       LCALL   ?DEALLOC_XSTACK8
    318          	mqttPacket->_len += devid_len;
   \   00036D   8E..         MOV     ?V0 + 4,R6
   \   00036F   EF           MOV     A,R7
   \   000370   F5..         MOV     ?V0 + 5,A
   \   000372   12....       LCALL   ?Subroutine32 & 0xFFFF
   \                     ??CrossCallReturnLabel_51:
   \   000375   12....       LCALL   ?L_ADD_TO_X
    319          	
    320          	//ÏûÏ¢Ìå----------------------------will_flag ºÍ will_msg---------------------------------
    321          	if(flags & MQTT_CONNECT_WILL_FLAG)
   \   000378   E5..         MOV     A,?V0 + 8
   \   00037A   A2E2         MOV     C,0xE0 /* A   */.2
   \   00037C   4003         JC      $+5
   \   00037E   02....       LJMP    ??MQTT_PacketConnect_12 & 0xFFFF
    322          	{
    323          		unsigned short mLen = 0;
    324          		
    325          		if(!will_msg)
   \   000381   7424         MOV     A,#0x24
   \   000383   12....       LCALL   ?XSTACK_DISP0_8
   \   000386   12....       LCALL   ??Subroutine73_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_134:
   \   000389   700C         JNZ     ??MQTT_PacketConnect_13
    326          			will_msg = "";
   \   00038B   7424         MOV     A,#0x24
   \   00038D   12....       LCALL   ?XSTACK_DISP0_8
   \   000390   74..         MOV     A,#`?<Constant "">` & 0xff
   \   000392   F0           MOVX    @DPTR,A
   \   000393   A3           INC     DPTR
   \   000394   74..         MOV     A,#(`?<Constant "">` >> 8) & 0xff
   \   000396   F0           MOVX    @DPTR,A
    327          		
    328          		mLen = strlen(will_topic);
                 		              ^
Warning[Pe167]: argument of type "signed char const *" is incompatible with
          parameter of type "char const *"
   \                     ??MQTT_PacketConnect_13:
   \   000397                ; Setup parameters for call to function strlen
   \   000397   7422         MOV     A,#0x22
   \   000399   12....       LCALL   ?XSTACK_DISP0_8
   \   00039C   12....       LCALL   ?Subroutine11 & 0xFFFF
    329          		mqttPacket->_data[mqttPacket->_len++] = MOSQ_MSB(mLen);
   \                     ??CrossCallReturnLabel_9:
   \   00039F   12....       LCALL   ?L_MOV_X
   \   0003A2   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_193:
   \   0003A5   12....       LCALL   ?L_MOV_X
   \   0003A8   85..82       MOV     DPL,?V0 + 0
   \   0003AB   85..83       MOV     DPH,?V0 + 1
   \   0003AE   78..         MOV     R0,#?V0 + 8
   \   0003B0   12....       LCALL   ?L_ADD_TO_X
    330          		mqttPacket->_data[mqttPacket->_len++] = MOSQ_LSB(mLen);
   \   0003B3   85..82       MOV     DPL,?V0 + 0
   \   0003B6   85..83       MOV     DPH,?V0 + 1
   \   0003B9   78..         MOV     R0,#?V0 + 8
   \   0003BB   12....       LCALL   ?L_MOV_X
   \   0003BE   12....       LCALL   ?Subroutine49 & 0xFFFF
   \                     ??CrossCallReturnLabel_89:
   \   0003C1   12....       LCALL   ??Subroutine80_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_184:
   \   0003C4   12....       LCALL   ?L_MOV_X
   \   0003C7   85..82       MOV     DPL,?V0 + 0
   \   0003CA   85..83       MOV     DPH,?V0 + 1
   \   0003CD   78..         MOV     R0,#?V0 + 8
   \   0003CF   12....       LCALL   ?L_ADD_TO_X
    331          		strncat((int8 *)mqttPacket->_data + mqttPacket->_len, will_topic, mLen);
                 		        ^
Warning[Pe167]: argument of type "int8 *" is incompatible with parameter of
          type "char *"

  		strncat((int8 *)mqttPacket->_data + mqttPacket->_len, will_topic, mLen);
  		                                                      ^
"I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\MqttKit.c",331  Warning[Pe167]: 
          argument of type "signed char const *" is incompatible with
          parameter of type "char const *"
   \   0003D2                ; Setup parameters for call to function strncat
   \   0003D2   78..         MOV     R0,#?V0 + 4
   \   0003D4   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0003D7   7424         MOV     A,#0x24
   \   0003D9   12....       LCALL   ?XSTACK_DISP0_8
   \   0003DC   12....       LCALL   ?Subroutine15 & 0xFFFF
   \                     ??CrossCallReturnLabel_15:
   \   0003DF   12....       LCALL   ?L_MOV_X
   \   0003E2   12....       LCALL   ?Subroutine48 & 0xFFFF
   \                     ??CrossCallReturnLabel_149:
   \   0003E5   12....       LCALL   ?DEALLOC_XSTACK8
    332          		mqttPacket->_len += mLen;
   \   0003E8   E4           CLR     A
   \   0003E9   F5..         MOV     ?V0 + 6,A
   \   0003EB   F5..         MOV     ?V0 + 7,A
   \   0003ED   85..82       MOV     DPL,?V0 + 0
   \   0003F0   85..83       MOV     DPH,?V0 + 1
   \   0003F3   78..         MOV     R0,#?V0 + 4
   \   0003F5   12....       LCALL   ?L_ADD_TO_X
    333          		
    334          		mLen = strlen(will_msg);
                 		              ^
Warning[Pe167]: argument of type "signed char const *" is incompatible with
          parameter of type "char const *"
   \   0003F8                ; Setup parameters for call to function strlen
   \   0003F8   7424         MOV     A,#0x24
   \   0003FA   12....       LCALL   ?XSTACK_DISP0_8
   \   0003FD   12....       LCALL   ?Subroutine17 & 0xFFFF
    335          		mqttPacket->_data[mqttPacket->_len++] = MOSQ_MSB(mLen);
   \                     ??CrossCallReturnLabel_19:
   \   000400   12....       LCALL   ?L_MOV_X
   \   000403   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_194:
   \   000406   12....       LCALL   ?L_MOV_X
   \   000409   85..82       MOV     DPL,?V0 + 0
   \   00040C   85..83       MOV     DPH,?V0 + 1
   \   00040F   78..         MOV     R0,#?V0 + 8
   \   000411   12....       LCALL   ?L_ADD_TO_X
    336          		mqttPacket->_data[mqttPacket->_len++] = MOSQ_LSB(mLen);
   \   000414   85..82       MOV     DPL,?V0 + 0
   \   000417   85..83       MOV     DPH,?V0 + 1
   \   00041A   78..         MOV     R0,#?V0 + 8
   \   00041C   12....       LCALL   ?L_MOV_X
   \   00041F   12....       LCALL   ?Subroutine49 & 0xFFFF
   \                     ??CrossCallReturnLabel_90:
   \   000422   12....       LCALL   ??Subroutine80_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_185:
   \   000425   12....       LCALL   ?L_MOV_X
   \   000428   85..82       MOV     DPL,?V0 + 0
   \   00042B   85..83       MOV     DPH,?V0 + 1
   \   00042E   78..         MOV     R0,#?V0 + 8
   \   000430   12....       LCALL   ?L_ADD_TO_X
    337          		strncat((int8 *)mqttPacket->_data + mqttPacket->_len, will_msg, mLen);
                 		        ^
Warning[Pe167]: argument of type "int8 *" is incompatible with parameter of
          type "char *"

  		strncat((int8 *)mqttPacket->_data + mqttPacket->_len, will_msg, mLen);
  		                                                      ^
"I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\MqttKit.c",337  Warning[Pe167]: 
          argument of type "signed char const *" is incompatible with
          parameter of type "char const *"
   \   000433                ; Setup parameters for call to function strncat
   \   000433   78..         MOV     R0,#?V0 + 4
   \   000435   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000438   7426         MOV     A,#0x26
   \   00043A   12....       LCALL   ?XSTACK_DISP0_8
   \   00043D   12....       LCALL   ?Subroutine15 & 0xFFFF
   \                     ??CrossCallReturnLabel_16:
   \   000440   12....       LCALL   ?L_MOV_X
   \   000443   12....       LCALL   ?Subroutine48 & 0xFFFF
   \                     ??CrossCallReturnLabel_150:
   \   000446   12....       LCALL   ?DEALLOC_XSTACK8
    338          		mqttPacket->_len += mLen;
   \   000449   85..82       MOV     DPL,?V0 + 0
   \   00044C   85..83       MOV     DPH,?V0 + 1
   \   00044F   78..         MOV     R0,#?V0 + 4
   \   000451   12....       LCALL   ?L_ADD_TO_X
    339          	}
    340          	
    341          	//ÏûÏ¢Ìå----------------------------use---------------------------------------------------
    342          	if(flags & MQTT_CONNECT_USER_NAME)
    343          	{
    344          		unsigned short user_len = strlen(user);
                 		                                 ^
Warning[Pe167]: argument of type "signed char const *" is incompatible with
          parameter of type "char const *"
   \                     ??MQTT_PacketConnect_12:
   \   000454                ; Setup parameters for call to function strlen
   \   000454   7402         MOV     A,#0x2
   \   000456   12....       LCALL   ?XSTACK_DISP0_8
   \   000459   12....       LCALL   ?Subroutine11 & 0xFFFF
    345          		
    346          		mqttPacket->_data[mqttPacket->_len++] = MOSQ_MSB(user_len);
   \                     ??CrossCallReturnLabel_10:
   \   00045C   12....       LCALL   ?L_MOV_X
   \   00045F   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_195:
   \   000462   12....       LCALL   ?L_MOV_X
   \   000465   85..82       MOV     DPL,?V0 + 0
   \   000468   85..83       MOV     DPH,?V0 + 1
   \   00046B   78..         MOV     R0,#?V0 + 8
   \   00046D   12....       LCALL   ?L_ADD_TO_X
    347          		mqttPacket->_data[mqttPacket->_len++] = MOSQ_LSB(user_len);
   \   000470   85..82       MOV     DPL,?V0 + 0
   \   000473   85..83       MOV     DPH,?V0 + 1
   \   000476   78..         MOV     R0,#?V0 + 8
   \   000478   12....       LCALL   ?L_MOV_X
   \   00047B   12....       LCALL   ?Subroutine49 & 0xFFFF
   \                     ??CrossCallReturnLabel_91:
   \   00047E   12....       LCALL   ??Subroutine80_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_186:
   \   000481   12....       LCALL   ?L_MOV_X
   \   000484   85..82       MOV     DPL,?V0 + 0
   \   000487   85..83       MOV     DPH,?V0 + 1
   \   00048A   78..         MOV     R0,#?V0 + 8
   \   00048C   12....       LCALL   ?L_ADD_TO_X
    348          		strncat((int8 *)mqttPacket->_data + mqttPacket->_len, user, user_len);
                 		        ^
Warning[Pe167]: argument of type "int8 *" is incompatible with parameter of
          type "char *"

  		strncat((int8 *)mqttPacket->_data + mqttPacket->_len, user, user_len);
  		                                                      ^
"I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\MqttKit.c",348  Warning[Pe167]: 
          argument of type "signed char const *" is incompatible with
          parameter of type "char const *"
   \   00048F                ; Setup parameters for call to function strncat
   \   00048F   78..         MOV     R0,#?V0 + 4
   \   000491   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000494   7404         MOV     A,#0x4
   \   000496   12....       LCALL   ?XSTACK_DISP0_8
   \   000499   12....       LCALL   ?Subroutine15 & 0xFFFF
   \                     ??CrossCallReturnLabel_17:
   \   00049C   12....       LCALL   ?L_MOV_X
   \   00049F   12....       LCALL   ?Subroutine48 & 0xFFFF
   \                     ??CrossCallReturnLabel_151:
   \   0004A2   12....       LCALL   ?DEALLOC_XSTACK8
    349          		mqttPacket->_len += user_len;
   \   0004A5   E4           CLR     A
   \   0004A6   F5..         MOV     ?V0 + 6,A
   \   0004A8   F5..         MOV     ?V0 + 7,A
   \   0004AA   85..82       MOV     DPL,?V0 + 0
   \   0004AD   85..83       MOV     DPH,?V0 + 1
   \   0004B0   78..         MOV     R0,#?V0 + 4
   \   0004B2   12....       LCALL   ?L_ADD_TO_X
    350          	}
    351          
    352          	//ÏûÏ¢Ìå----------------------------password----------------------------------------------
    353          	if(flags & MQTT_CONNECT_PASSORD)
    354          	{
    355          		unsigned short psw_len = strlen(password);
                 		                                ^
Warning[Pe167]: argument of type "signed char const *" is incompatible with
          parameter of type "char const *"
   \   0004B5                ; Setup parameters for call to function strlen
   \   0004B5   85..82       MOV     DPL,?XSP + 0
   \   0004B8   85..83       MOV     DPH,?XSP + 1
   \   0004BB   12....       LCALL   ?Subroutine17 & 0xFFFF
    356          		
    357          		mqttPacket->_data[mqttPacket->_len++] = MOSQ_MSB(psw_len);
   \                     ??CrossCallReturnLabel_20:
   \   0004BE   12....       LCALL   ?L_MOV_X
   \   0004C1   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_196:
   \   0004C4   12....       LCALL   ?L_MOV_X
   \   0004C7   85..82       MOV     DPL,?V0 + 0
   \   0004CA   85..83       MOV     DPH,?V0 + 1
   \   0004CD   78..         MOV     R0,#?V0 + 8
   \   0004CF   12....       LCALL   ?L_ADD_TO_X
    358          		mqttPacket->_data[mqttPacket->_len++] = MOSQ_LSB(psw_len);
   \   0004D2   85..82       MOV     DPL,?V0 + 0
   \   0004D5   85..83       MOV     DPH,?V0 + 1
   \   0004D8   78..         MOV     R0,#?V0 + 8
   \   0004DA   12....       LCALL   ?L_MOV_X
   \   0004DD   12....       LCALL   ?Subroutine49 & 0xFFFF
   \                     ??CrossCallReturnLabel_92:
   \   0004E0   12....       LCALL   ??Subroutine80_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_187:
   \   0004E3   12....       LCALL   ?L_MOV_X
   \   0004E6   85..82       MOV     DPL,?V0 + 0
   \   0004E9   85..83       MOV     DPH,?V0 + 1
   \   0004EC   78..         MOV     R0,#?V0 + 8
   \   0004EE   12....       LCALL   ?L_ADD_TO_X
    359          		strncat((int8 *)mqttPacket->_data + mqttPacket->_len, password, psw_len);
                 		        ^
Warning[Pe167]: argument of type "int8 *" is incompatible with parameter of
          type "char *"

  		strncat((int8 *)mqttPacket->_data + mqttPacket->_len, password, psw_len);
  		                                                      ^
"I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\MqttKit.c",359  Warning[Pe167]: 
          argument of type "signed char const *" is incompatible with
          parameter of type "char const *"
   \   0004F1                ; Setup parameters for call to function strncat
   \   0004F1   78..         MOV     R0,#?V0 + 4
   \   0004F3   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0004F6   7402         MOV     A,#0x2
   \   0004F8   12....       LCALL   ?XSTACK_DISP0_8
   \   0004FB   12....       LCALL   ?Subroutine15 & 0xFFFF
   \                     ??CrossCallReturnLabel_18:
   \   0004FE   12....       LCALL   ?L_MOV_X
   \   000501   12....       LCALL   ?Subroutine48 & 0xFFFF
   \                     ??CrossCallReturnLabel_152:
   \   000504   12....       LCALL   ?DEALLOC_XSTACK8
    360          		mqttPacket->_len += psw_len;
   \   000507   85..82       MOV     DPL,?V0 + 0
   \   00050A   85..83       MOV     DPH,?V0 + 1
   \   00050D   78..         MOV     R0,#?V0 + 4
   \   00050F   12....       LCALL   ?L_ADD_TO_X
    361          	}
    362          
    363          	return 0;
   \   000512   7900         MOV     R1,#0x0
   \                     ??MQTT_PacketConnect_1:
   \   000514   7405         MOV     A,#0x5
   \   000516   02....       LJMP    ?Subroutine2 & 0xFFFF
    364          
    365          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine60:
   \   000000   85..82       MOV     DPL,?V0 + 14
   \   000003   85..83       MOV     DPH,?V0 + 15
   \   000006                REQUIRE ??Subroutine72_0
   \   000006                ; // Fall through to label ??Subroutine72_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine72_0:
   \   000000   12....       LCALL   ?Subroutine71 & 0xFFFF
   \                     ??CrossCallReturnLabel_180:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine43:
   \   000000   12....       LCALL   ?Subroutine65 & 0xFFFF
   \                     ??CrossCallReturnLabel_116:
   \   000003   7454         MOV     A,#0x54
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine42:
   \   000000   12....       LCALL   ?Subroutine65 & 0xFFFF
   \                     ??CrossCallReturnLabel_115:
   \   000003   7404         MOV     A,#0x4
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine35:
   \   000000   F9           MOV     R1,A
   \   000001   E5..         MOV     A,?V0 + 2
   \   000003   28           ADD     A,R0
   \   000004   F5..         MOV     ?V0 + 2,A
   \   000006   E5..         MOV     A,?V0 + 3
   \   000008   39           ADDC    A,R1
   \   000009   F5..         MOV     ?V0 + 3,A
   \   00000B   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine32:
   \   000000   12....       LCALL   ?Subroutine64 & 0xFFFF
   \                     ??CrossCallReturnLabel_113:
   \   000003   85..82       MOV     DPL,?V0 + 0
   \   000006   85..83       MOV     DPH,?V0 + 1
   \   000009   78..         MOV     R0,#?V0 + 4
   \   00000B   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine26:
   \   000000   12....       LCALL   ??Subroutine79_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_175:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine25:
   \   000000   12....       LCALL   ??Subroutine79_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_176:
   \   000003   8A..         MOV     ?V0 + 0,R2
   \   000005   8B..         MOV     ?V0 + 1,R3
   \   000007   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine24:
   \   000000   12....       LCALL   ?Subroutine60 & 0xFFFF
   \                     ??CrossCallReturnLabel_128:
   \   000003   85..82       MOV     DPL,?V0 + 0
   \   000006   85..83       MOV     DPH,?V0 + 1
   \   000009   78..         MOV     R0,#?V0 + 4
   \   00000B   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine17:
   \   000000   12....       LCALL   ?Subroutine53 & 0xFFFF
   \                     ??CrossCallReturnLabel_100:
   \   000003   85..82       MOV     DPL,?V0 + 0
   \   000006   85..83       MOV     DPH,?V0 + 1
   \   000009   78..         MOV     R0,#?V0 + 8
   \   00000B   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine15:
   \   000000   12....       LCALL   ?Subroutine58 & 0xFFFF
   \                     ??CrossCallReturnLabel_107:
   \   000003   78..         MOV     R0,#?V0 + 8
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine58:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   FC           MOV     R4,A
   \   000002   A3           INC     DPTR
   \   000003   E0           MOVX    A,@DPTR
   \   000004   FD           MOV     R5,A
   \   000005   85..82       MOV     DPL,?V0 + 0
   \   000008   85..83       MOV     DPH,?V0 + 1
   \   00000B   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine11:
   \   000000   12....       LCALL   ?Subroutine53 & 0xFFFF
   \                     ??CrossCallReturnLabel_101:
   \   000003   E5..         MOV     A,?V0 + 14
   \   000005   2402         ADD     A,#0x2
   \   000007   E5..         MOV     A,?V0 + 15
   \   000009   3400         ADDC    A,#0x0
   \   00000B   85..82       MOV     DPL,?V0 + 0
   \   00000E   F583         MOV     DPH,A
   \   000010   78..         MOV     R0,#?V0 + 8
   \   000012   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine53:
   \   000000   12....       LCALL   ?Subroutine69 & 0xFFFF
   \                     ??CrossCallReturnLabel_177:
   \   000003   8A..         MOV     ?V0 + 4,R2
   \   000005   8B..         MOV     ?V0 + 5,R3
   \   000007   85..82       MOV     DPL,?V0 + 14
   \   00000A   85..83       MOV     DPH,?V0 + 15
   \   00000D   12....       LCALL   ?Subroutine71 & 0xFFFF
   \                     ??CrossCallReturnLabel_179:
   \   000010   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine71:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   FA           MOV     R2,A
   \   000002   A3           INC     DPTR
   \   000003   E0           MOVX    A,@DPTR
   \   000004   FB           MOV     R3,A
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine73_0:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   F8           MOV     R0,A
   \   000002   A3           INC     DPTR
   \   000003   E0           MOVX    A,@DPTR
   \   000004   F9           MOV     R1,A
   \   000005   E8           MOV     A,R0
   \   000006   49           ORL     A,R1
   \   000007   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine64:
   \   000000   33           RLC     A
   \   000001   95E0         SUBB    A,0xE0 /* A   */
   \   000003   F5..         MOV     ?V0 + 6,A
   \   000005   F5..         MOV     ?V0 + 7,A
   \   000007   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine48:
   \   000000   EA           MOV     A,R2
   \   000001   25..         ADD     A,?V0 + 8
   \   000003   FA           MOV     R2,A
   \   000004   EB           MOV     A,R3
   \   000005   35..         ADDC    A,?V0 + 9
   \   000007                REQUIRE ??Subroutine74_0
   \   000007                ; // Fall through to label ??Subroutine74_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine74_0:
   \   000000   FB           MOV     R3,A
   \   000001   12....       LCALL   ??strncat?relay
   \   000004   7402         MOV     A,#0x2
   \   000006   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine75_0:
   \   000000   12....       LCALL   ??MQTT_DumpLength?relay
   \   000003   8A..         MOV     ?V0 + 4,R2
   \   000005   8B..         MOV     ?V0 + 5,R3
   \   000007   C3           CLR     C
   \   000008   EB           MOV     A,R3
   \   000009   9400         SUBB    A,#0x0
   \   00000B   A2D2         MOV     C,0xD0 /* PSW */.2
   \   00000D   65D0         XRL     A,PSW
   \   00000F   33           RLC     A
   \   000010   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine79_0:
   \   000000   12....       LCALL   ?Subroutine69 & 0xFFFF
   \                     ??CrossCallReturnLabel_178:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine69:
   \   000000   12....       LCALL   ?Subroutine71 & 0xFFFF
   \                     ??CrossCallReturnLabel_182:
   \   000003   12....       LCALL   ??strlen?relay
   \   000006   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine6:
   \   000000   12....       LCALL   ?Subroutine66 & 0xFFFF
   \                     ??CrossCallReturnLabel_119:
   \   000003   E5..         MOV     A,?V0 + 5
   \   000005                REQUIRE ??Subroutine80_0
   \   000005                ; // Fall through to label ??Subroutine80_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine70:
   \   000000   EA           MOV     A,R2
   \   000001   25..         ADD     A,?V0 + 4
   \   000003   F582         MOV     DPL,A
   \   000005   EB           MOV     A,R3
   \   000006   35..         ADDC    A,?V0 + 5
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine66:
   \   000000   EA           MOV     A,R2
   \   000001   25..         ADD     A,?V0 + 8
   \   000003   F582         MOV     DPL,A
   \   000005   EB           MOV     A,R3
   \   000006   35..         ADDC    A,?V0 + 9
   \   000008   F583         MOV     DPH,A
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine49:
   \   000000   12....       LCALL   ?Subroutine66 & 0xFFFF
   \                     ??CrossCallReturnLabel_120:
   \   000003   E5..         MOV     A,?V0 + 4
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine84_0:
   \   000000   12....       LCALL   ??MQTT_NewBuffer?relay
   \   000003   7404         MOV     A,#0x4
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine45:
   \   000000   12....       LCALL   ?Subroutine65 & 0xFFFF
   \                     ??CrossCallReturnLabel_118:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine65:
   \   000000   12....       LCALL   ?Subroutine70 & 0xFFFF
   \                     ??CrossCallReturnLabel_124:
   \   000003   F583         MOV     DPH,A
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine87_0:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   90....       MOV     DPTR,#__Constant_1
   \   000004   78..         MOV     R0,#?V0 + 4
   \   000006   22           RET
    366          
    367          //==========================================================
    368          //	º¯ÊýÃû³Æ£º	MQTT_PacketDisConnect
    369          //
    370          //	º¯Êý¹¦ÄÜ£º	¶Ï¿ªÁ¬½ÓÏûÏ¢×é°ü
    371          //
    372          //	Èë¿Ú²ÎÊý£º	mqttPacket£º°üÖ¸Õë
    373          //
    374          //	·µ»Ø²ÎÊý£º	0-³É¹¦		1-Ê§°Ü
    375          //
    376          //	ËµÃ÷£º		
    377          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    378          uint1 MQTT_PacketDisConnect(MQTT_PACKET_STRUCTURE *mqttPacket)
   \                     MQTT_PacketDisConnect:
    379          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    380          
    381          	MQTT_NewBuffer(mqttPacket, 2);
   \   000009                ; Setup parameters for call to function MQTT_NewBuffer
   \   000009   90....       MOV     DPTR,#__Constant_2
   \   00000C   12....       LCALL   ?PUSH_XSTACK8_X_FOUR
   \   00000F   12....       LCALL   ??Subroutine84_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_213:
   \   000012   12....       LCALL   ?DEALLOC_XSTACK8
    382          	if(mqttPacket->_data == NULL)
   \   000015   12....       LCALL   ?Subroutine9 & 0xFFFF
   \                     ??CrossCallReturnLabel_143:
   \   000018   7004         JNZ     ??MQTT_PacketDisConnect_0
    383          		return 1;
   \   00001A   7901         MOV     R1,#0x1
   \   00001C   8034         SJMP    ??MQTT_PacketDisConnect_1
    384          	
    385          /*************************************¹Ì¶¨Í·²¿***********************************************/
    386          	
    387          	//¹Ì¶¨Í·²¿----------------------Í·²¿ÏûÏ¢-------------------------------------------------
    388          	mqttPacket->_data[mqttPacket->_len++] = MQTT_PKT_DISCONNECT << 4;
   \                     ??MQTT_PacketDisConnect_0:
   \   00001E   12....       LCALL   ?Subroutine38 & 0xFFFF
   \                     ??CrossCallReturnLabel_64:
   \   000021   12....       LCALL   ?L_MOV_X
   \   000024   12....       LCALL   ?Subroutine10 & 0xFFFF
   \                     ??CrossCallReturnLabel_3:
   \   000027   74E0         MOV     A,#-0x20
   \   000029   12....       LCALL   ??Subroutine92_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_278:
   \   00002C   12....       LCALL   ?L_MOV_X
   \   00002F   8A82         MOV     DPL,R2
   \   000031   8B83         MOV     DPH,R3
   \   000033   78..         MOV     R0,#?V0 + 0
   \   000035   12....       LCALL   ?L_ADD_TO_X
    389          	
    390          	//¹Ì¶¨Í·²¿----------------------Ê£Óà³¤¶ÈÖµ-----------------------------------------------
    391          	mqttPacket->_data[mqttPacket->_len++] = 0;
   \   000038   8A82         MOV     DPL,R2
   \   00003A   8B83         MOV     DPH,R3
   \   00003C   78..         MOV     R0,#?V0 + 0
   \   00003E   12....       LCALL   ?L_MOV_X
   \   000041   12....       LCALL   ?Subroutine7 & 0xFFFF
   \                     ??CrossCallReturnLabel_284:
   \   000044   12....       LCALL   ?L_MOV_X
   \   000047   8A82         MOV     DPL,R2
   \   000049   8B83         MOV     DPH,R3
   \   00004B   78..         MOV     R0,#?V0 + 0
   \   00004D   12....       LCALL   ?L_ADD_TO_X
    392          	
    393          	return 0;
   \   000050   7900         MOV     R1,#0x0
   \                     ??MQTT_PacketDisConnect_1:
   \   000052   02....       LJMP    ?Subroutine3 & 0xFFFF
    394          
    395          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine9:
   \   000000   8E82         MOV     DPL,R6
   \   000002   8F83         MOV     DPH,R7
   \   000004                REQUIRE ??Subroutine73_0
   \   000004                ; // Fall through to label ??Subroutine73_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine7:
   \   000000   12....       LCALL   ?Subroutine57 & 0xFFFF
   \                     ??CrossCallReturnLabel_104:
   \   000003   E4           CLR     A
   \   000004                REQUIRE ??Subroutine92_0
   \   000004                ; // Fall through to label ??Subroutine92_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine92_0:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   90....       MOV     DPTR,#__Constant_1
   \   000004   78..         MOV     R0,#?V0 + 0
   \   000006   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine38:
   \   000000   12....       LCALL   ?Subroutine63 & 0xFFFF
   \                     ??CrossCallReturnLabel_111:
   \   000003   78..         MOV     R0,#?V0 + 0
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine63:
   \   000000   EE           MOV     A,R6
   \   000001   2402         ADD     A,#0x2
   \   000003   F8           MOV     R0,A
   \   000004   EF           MOV     A,R7
   \   000005   3400         ADDC    A,#0x0
   \   000007   F9           MOV     R1,A
   \   000008   E8           MOV     A,R0
   \   000009   FA           MOV     R2,A
   \   00000A   E9           MOV     A,R1
   \   00000B   FB           MOV     R3,A
   \   00000C   8A82         MOV     DPL,R2
   \   00000E   8B83         MOV     DPH,R3
   \   000010   22           RET
    396          
    397          //==========================================================
    398          //	º¯ÊýÃû³Æ£º	MQTT_UnPacketConnectAck
    399          //
    400          //	º¯Êý¹¦ÄÜ£º	Á¬½ÓÏûÏ¢½â°ü
    401          //
    402          //	Èë¿Ú²ÎÊý£º	rev_data£º½ÓÊÕµÄÊý¾Ý
    403          //
    404          //	·µ»Ø²ÎÊý£º	1¡¢255-Ê§°Ü		ÆäËû-Æ½Ì¨µÄ·µ»ØÂë
    405          //
    406          //	ËµÃ÷£º		
    407          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    408          uint8 MQTT_UnPacketConnectAck(uint8 *rev_data)
   \                     MQTT_UnPacketConnectAck:
    409          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    410          
    411          	if(rev_data[1] != 2)
   \   000004   8A82         MOV     DPL,R2
   \   000006   8B83         MOV     DPH,R3
   \   000008   A3           INC     DPTR
   \   000009   E0           MOVX    A,@DPTR
   \   00000A   6402         XRL     A,#0x2
   \   00000C   6004         JZ      ??MQTT_UnPacketConnectAck_0
    412          		return 1;
   \   00000E   7901         MOV     R1,#0x1
   \   000010   801A         SJMP    ??MQTT_UnPacketConnectAck_1
    413          	
    414          	if(rev_data[2] == 0 || rev_data[2] == 1)
   \                     ??MQTT_UnPacketConnectAck_0:
   \   000012   8A82         MOV     DPL,R2
   \   000014   8B83         MOV     DPH,R3
   \   000016   A3           INC     DPTR
   \   000017   A3           INC     DPTR
   \   000018   E0           MOVX    A,@DPTR
   \   000019   6004         JZ      ??MQTT_UnPacketConnectAck_2
   \   00001B   6401         XRL     A,#0x1
   \   00001D   700B         JNZ     ??MQTT_UnPacketConnectAck_3
    415          		return rev_data[3];
   \                     ??MQTT_UnPacketConnectAck_2:
   \   00001F   8A82         MOV     DPL,R2
   \   000021   8B83         MOV     DPH,R3
   \   000023   A3           INC     DPTR
   \   000024   A3           INC     DPTR
   \   000025   A3           INC     DPTR
   \   000026   E0           MOVX    A,@DPTR
   \   000027   F9           MOV     R1,A
   \   000028   8002         SJMP    ??MQTT_UnPacketConnectAck_1
    416          	else
    417          		return 255;
   \                     ??MQTT_UnPacketConnectAck_3:
   \   00002A   79FF         MOV     R1,#-0x1
   \                     ??MQTT_UnPacketConnectAck_1:
   \   00002C   02....       LJMP    ?Subroutine4 & 0xFFFF
    418          
    419          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET
    420          
    421          //==========================================================
    422          //	º¯ÊýÃû³Æ£º	MQTT_PacketSaveData
    423          //
    424          //	º¯Êý¹¦ÄÜ£º	Êý¾ÝµãÉÏ´«×é°ü
    425          //
    426          //	Èë¿Ú²ÎÊý£º	devid£ºÉè±¸ID(¿ÉÎª¿Õ)
    427          //				send_buf£ºjson»º´æbuf
    428          //				send_len£ºjson×Ü³¤
    429          //				type_bin_head£ºbinÎÄ¼þµÄÏûÏ¢Í·
    430          //				type£ºÀàÐÍ
    431          //
    432          //	·µ»Ø²ÎÊý£º	0-³É¹¦		1-Ê§°Ü
    433          //
    434          //	ËµÃ÷£º		
    435          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    436          uint1 MQTT_PacketSaveData(const int8 *devid, int16 send_len, int8 *type_bin_head, uint8 type, MQTT_PACKET_STRUCTURE *mqttPacket)
   \                     MQTT_PacketSaveData:
    437          {
   \   000000   74F0         MOV     A,#-0x10
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 0
   \   000005   EC           MOV     A,R4
   \   000006   FE           MOV     R6,A
   \   000007   ED           MOV     A,R5
   \   000008   FF           MOV     R7,A
   \   000009   89..         MOV     ?V0 + 2,R1
   \   00000B   7412         MOV     A,#0x12
   \   00000D   12....       LCALL   ?XSTACK_DISP0_8
   \   000010   12....       LCALL   ?Subroutine30 & 0xFFFF
    438          
    439          	if(MQTT_PacketPublish(MQTT_PUBLISH_ID, "$dp", NULL, send_len + 3, MQTT_QOS_LEVEL1, 0, 1, mqttPacket) == 0)
   \                     ??CrossCallReturnLabel_47:
   \   000013                ; Setup parameters for call to function MQTT_PacketPublish
   \   000013   78..         MOV     R0,#?V0 + 0
   \   000015   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000018   90....       MOV     DPTR,#__Constant_1
   \   00001B   12....       LCALL   ?PUSH_XSTACK8_X_FOUR
   \   00001E   90....       MOV     DPTR,#__Constant_0
   \   000021   12....       LCALL   ?PUSH_XSTACK8_X_FOUR
   \   000024   EE           MOV     A,R6
   \   000025   2403         ADD     A,#0x3
   \   000027   F5..         MOV     ?V0 + 4,A
   \   000029   EF           MOV     A,R7
   \   00002A   3400         ADDC    A,#0x0
   \   00002C   F5..         MOV     ?V0 + 5,A
   \   00002E   12....       LCALL   ?Subroutine64 & 0xFFFF
   \                     ??CrossCallReturnLabel_112:
   \   000031   78..         MOV     R0,#?V0 + 4
   \   000033   12....       LCALL   ?PUSH_XSTACK_I_FOUR
   \   000036   E4           CLR     A
   \   000037   F5..         MOV     ?V0 + 4,A
   \   000039   F5..         MOV     ?V0 + 5,A
   \   00003B   78..         MOV     R0,#?V0 + 4
   \   00003D   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000040   7901         MOV     R1,#0x1
   \   000042   7C..         MOV     R4,#`?<Constant "$dp">` & 0xff
   \   000044   7D..         MOV     R5,#(`?<Constant "$dp">` >> 8) & 0xff
   \   000046   7A0A         MOV     R2,#0xa
   \   000048   7B00         MOV     R3,#0x0
   \   00004A   12....       LCALL   ??MQTT_PacketPublish?relay
   \   00004D   7410         MOV     A,#0x10
   \   00004F   12....       LCALL   ?DEALLOC_XSTACK8
   \   000052   E9           MOV     A,R1
   \   000053   705C         JNZ     ??MQTT_PacketSaveData_0
    440          	{
    441          		mqttPacket->_data[mqttPacket->_len++] = type;					//ÀàÐÍ
   \   000055   12....       LCALL   ?Subroutine40 & 0xFFFF
   \                     ??CrossCallReturnLabel_68:
   \   000058   8A82         MOV     DPL,R2
   \   00005A   8B83         MOV     DPH,R3
   \   00005C   78..         MOV     R0,#?V0 + 4
   \   00005E   12....       LCALL   ?L_MOV_X
   \   000061   12....       LCALL   ?Subroutine13 & 0xFFFF
   \                     ??CrossCallReturnLabel_271:
   \   000064   E5..         MOV     A,?V0 + 2
   \   000066   12....       LCALL   ??Subroutine87_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_233:
   \   000069   12....       LCALL   ?L_MOV_X
   \   00006C   8A82         MOV     DPL,R2
   \   00006E   8B83         MOV     DPH,R3
   \   000070   78..         MOV     R0,#?V0 + 4
   \   000072   12....       LCALL   ?L_ADD_TO_X
    442          		
    443          		mqttPacket->_data[mqttPacket->_len++] = MOSQ_MSB(send_len);
   \   000075   8A82         MOV     DPL,R2
   \   000077   8B83         MOV     DPH,R3
   \   000079   78..         MOV     R0,#?V0 + 4
   \   00007B   12....       LCALL   ?L_MOV_X
   \   00007E   12....       LCALL   ?Subroutine13 & 0xFFFF
   \                     ??CrossCallReturnLabel_272:
   \   000081   EF           MOV     A,R7
   \   000082   12....       LCALL   ??Subroutine87_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_234:
   \   000085   12....       LCALL   ?L_MOV_X
   \   000088   8A82         MOV     DPL,R2
   \   00008A   8B83         MOV     DPH,R3
   \   00008C   78..         MOV     R0,#?V0 + 4
   \   00008E   12....       LCALL   ?L_ADD_TO_X
    444          		mqttPacket->_data[mqttPacket->_len++] = MOSQ_LSB(send_len);
   \   000091   8A82         MOV     DPL,R2
   \   000093   8B83         MOV     DPH,R3
   \   000095   78..         MOV     R0,#?V0 + 4
   \   000097   12....       LCALL   ?L_MOV_X
   \   00009A   12....       LCALL   ?Subroutine13 & 0xFFFF
    445          	}
   \                     ??CrossCallReturnLabel_273:
   \   00009D   EE           MOV     A,R6
   \   00009E   12....       LCALL   ??Subroutine87_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_235:
   \   0000A1   12....       LCALL   ?L_MOV_X
   \   0000A4   8A82         MOV     DPL,R2
   \   0000A6   8B83         MOV     DPH,R3
   \   0000A8   78..         MOV     R0,#?V0 + 4
   \   0000AA   12....       LCALL   ?L_ADD_TO_X
    446          	else
    447          		return 1;
    448          	
    449          	return 0;
   \   0000AD   7900         MOV     R1,#0x0
   \   0000AF   8002         SJMP    ??MQTT_PacketSaveData_1
   \                     ??MQTT_PacketSaveData_0:
   \   0000B1   7901         MOV     R1,#0x1
   \                     ??MQTT_PacketSaveData_1:
   \   0000B3   02....       LJMP    ?Subroutine1 & 0xFFFF
    450          
    451          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine30:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   F5..         MOV     ?V0 + 0,A
   \   000003   A3           INC     DPTR
   \   000004   E0           MOVX    A,@DPTR
   \   000005   F5..         MOV     ?V0 + 1,A
   \   000007   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine40:
   \   000000   E5..         MOV     A,?V0 + 0
   \   000002   2402         ADD     A,#0x2
   \   000004   FA           MOV     R2,A
   \   000005   E5..         MOV     A,?V0 + 1
   \   000007   3400         ADDC    A,#0x0
   \   000009   FB           MOV     R3,A
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine13:
   \   000000   85..82       MOV     DPL,?V0 + 0
   \   000003   85..83       MOV     DPH,?V0 + 1
   \   000006                REQUIRE ??Subroutine91_0
   \   000006                ; // Fall through to label ??Subroutine91_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine91_0:
   \   000000   12....       LCALL   ?Subroutine56 & 0xFFFF
   \                     ??CrossCallReturnLabel_275:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine56:
   \   000000   12....       LCALL   ?Subroutine68 & 0xFFFF
   \                     ??CrossCallReturnLabel_277:
   \   000003   F583         MOV     DPH,A
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine68:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   25..         ADD     A,?V0 + 4
   \   000003   F8           MOV     R0,A
   \   000004   A3           INC     DPTR
   \   000005   E0           MOVX    A,@DPTR
   \   000006   35..         ADDC    A,?V0 + 5
   \   000008   8882         MOV     DPL,R0
   \   00000A   22           RET
    452          
    453          //==========================================================
    454          //	º¯ÊýÃû³Æ£º	MQTT_UnPacketCmd
    455          //
    456          //	º¯Êý¹¦ÄÜ£º	ÃüÁîÏÂ·¢½â°ü
    457          //
    458          //	Èë¿Ú²ÎÊý£º	rev_data£º½ÓÊÕµÄÊý¾ÝÖ¸Õë
    459          //				cmdid£ºcmdid-uuid
    460          //				req£ºÃüÁî
    461          //
    462          //	·µ»Ø²ÎÊý£º	0-³É¹¦		ÆäËû-Ê§°ÜÔ­Òò
    463          //
    464          //	ËµÃ÷£º		
    465          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    466          uint8 MQTT_UnPacketCmd(uint8 *rev_data, int8 *cmdid, int8 *req, uint16 *req_len)
   \                     MQTT_UnPacketCmd:
    467          {
   \   000000   74EC         MOV     A,#-0x14
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 20
   \   000005                ; Auto size: 4
   \   000005   74FC         MOV     A,#-0x4
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   8A..         MOV     ?V0 + 6,R2
   \   00000C   8B..         MOV     ?V0 + 7,R3
   \   00000E   8C..         MOV     ?V0 + 2,R4
   \   000010   8D..         MOV     ?V0 + 3,R5
   \   000012   7418         MOV     A,#0x18
   \   000014   12....       LCALL   ?XSTACK_DISP0_8
   \   000017   E0           MOVX    A,@DPTR
   \   000018   F5..         MOV     ?V0 + 4,A
   \   00001A   A3           INC     DPTR
   \   00001B   E0           MOVX    A,@DPTR
   \   00001C   F5..         MOV     ?V0 + 5,A
   \   00001E   741A         MOV     A,#0x1a
   \   000020   12....       LCALL   ?XSTACK_DISP0_8
   \   000023   12....       LCALL   ?Subroutine30 & 0xFFFF
    468          
    469          	int8 *dataPtr = strchr((int8 *)rev_data + 6, '/');	//¼Ó6ÊÇÌø¹ýÍ·ÐÅÏ¢
                 	                       ^
Warning[Pe167]: argument of type "int8 *" is incompatible with parameter of
          type "char const *"

  	int8 *dataPtr = strchr((int8 *)rev_data + 6, '/');	//¼Ó6ÊÇÌø¹ýÍ·ÐÅÏ¢
  	                ^
"I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\MqttKit.c",469  Warning[Pe144]: 
          a value of type "char *" cannot be used to initialize an entity of
          type "int8 *"
   \                     ??CrossCallReturnLabel_48:
   \   000026                ; Setup parameters for call to function strchr
   \   000026   7C2F         MOV     R4,#0x2f
   \   000028   7D00         MOV     R5,#0x0
   \   00002A   EA           MOV     A,R2
   \   00002B   2406         ADD     A,#0x6
   \   00002D   FA           MOV     R2,A
   \   00002E   EB           MOV     A,R3
   \   00002F   3400         ADDC    A,#0x0
   \   000031   FB           MOV     R3,A
   \   000032   12....       LCALL   ??strchr?relay
   \   000035   8A..         MOV     ?V0 + 8,R2
   \   000037   8B..         MOV     ?V0 + 9,R3
   \   000039   AE..         MOV     R6,?V0 + 8
   \   00003B   AF..         MOV     R7,?V0 + 9
    470          	
    471          	uint32 remain_len = 0;
   \   00003D   90....       MOV     DPTR,#__Constant_0
   \   000040   12....       LCALL   ?XLOAD_R2345
   \   000043   85..82       MOV     DPL,?XSP + 0
   \   000046   85..83       MOV     DPH,?XSP + 1
   \   000049   12....       LCALL   ?XSTORE_R2345
    472          	
    473          	if(dataPtr == NULL)									//Î´ÕÒµ½'/'
   \   00004C   EE           MOV     A,R6
   \   00004D   4F           ORL     A,R7
   \   00004E   7005         JNZ     ??MQTT_UnPacketCmd_0
    474          		return 1;
   \   000050   7901         MOV     R1,#0x1
   \   000052   02....       LJMP    ??MQTT_UnPacketCmd_1 & 0xFFFF
    475          	dataPtr++;											//Ìø¹ý'/'
   \                     ??MQTT_UnPacketCmd_0:
   \   000055   8E82         MOV     DPL,R6
   \   000057   8F83         MOV     DPH,R7
   \   000059   A3           INC     DPTR
   \   00005A   AE82         MOV     R6,DPL
   \   00005C   AF83         MOV     R7,DPH
    476          	
    477          	MQTT_ReadLength(rev_data + 1, 4, &remain_len);		//¶ÁÈ¡Ê£Óà×Ö½Ú
   \   00005E                ; Setup parameters for call to function MQTT_ReadLength
   \   00005E   90....       MOV     DPTR,#__Constant_4
   \   000061   12....       LCALL   ?PUSH_XSTACK8_X_FOUR
   \   000064   7404         MOV     A,#0x4
   \   000066   12....       LCALL   ?XSTACK_DISP0_8
   \   000069   AC82         MOV     R4,DPL
   \   00006B   AD83         MOV     R5,DPH
   \   00006D   85..82       MOV     DPL,?V0 + 6
   \   000070   85..83       MOV     DPH,?V0 + 7
   \   000073   A3           INC     DPTR
   \   000074   AA82         MOV     R2,DPL
   \   000076   AB83         MOV     R3,DPH
   \   000078   12....       LCALL   ??MQTT_ReadLength?relay
   \   00007B   7404         MOV     A,#0x4
   \   00007D   12....       LCALL   ?DEALLOC_XSTACK8
    478          	
    479          	//*cmdid = (int8 *)MQTT_MallocBuffer(37);				//cmdid¹Ì¶¨36×Ö½Ú£¬¶à·ÖÅäÒ»¸ö½áÊø·ûµÄÎ»ÖÃ
    480          	if(cmdid == NULL)
   \   000080   E5..         MOV     A,?V0 + 2
   \   000082   45..         ORL     A,?V0 + 3
   \   000084   700C         JNZ     ??MQTT_UnPacketCmd_2
    481            {
    482              debug("UnPacket mem 11\r\n");
   \   000086                ; Setup parameters for call to function debug
   \   000086   7A..         MOV     R2,#`?<Constant "UnPacket mem 11\\r\\n">` & 0xff
   \   000088   7B..         MOV     R3,#(`?<Constant "UnPacket mem 11\\r\\n">` >> 8) & 0xff
   \   00008A   12....       LCALL   ??debug?relay
    483          		return 2;
   \   00008D   7902         MOV     R1,#0x2
   \   00008F   02....       LJMP    ??MQTT_UnPacketCmd_1 & 0xFFFF
    484            }
    485          	memset(cmdid, 0, 37);								//È«²¿ÇåÁã
   \                     ??MQTT_UnPacketCmd_2:
   \   000092                ; Setup parameters for call to function memset
   \   000092   75..25       MOV     ?V0 + 6,#0x25
   \   000095   75..00       MOV     ?V0 + 7,#0x0
   \   000098   78..         MOV     R0,#?V0 + 6
   \   00009A   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00009D   12....       LCALL   ?Subroutine50 & 0xFFFF
   \                     ??CrossCallReturnLabel_200:
   \   0000A0   12....       LCALL   ?DEALLOC_XSTACK8
    486          	memcpy(cmdid, (const int8 *)dataPtr, 36);			//¸´ÖÆcmdid
   \   0000A3                ; Setup parameters for call to function memcpy
   \   0000A3   75..24       MOV     ?V0 + 6,#0x24
   \   0000A6   78..         MOV     R0,#?V0 + 6
   \   0000A8   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000AB   EE           MOV     A,R6
   \   0000AC   FC           MOV     R4,A
   \   0000AD   EF           MOV     A,R7
   \   0000AE   12....       LCALL   ?Subroutine67 & 0xFFFF
   \                     ??CrossCallReturnLabel_255:
   \   0000B1   12....       LCALL   ?DEALLOC_XSTACK8
    487          	dataPtr += 36;
   \   0000B4   EE           MOV     A,R6
   \   0000B5   2424         ADD     A,#0x24
   \   0000B7   FE           MOV     R6,A
   \   0000B8   EF           MOV     A,R7
   \   0000B9   3400         ADDC    A,#0x0
   \   0000BB   FF           MOV     R7,A
    488          	
    489          	*req_len = remain_len - 44;							//ÃüÁî³¤¶È = Ê£Óà³¤¶È(remain_len) - 2 - 5($creq) - 1(\) - cmdid³¤¶È
   \   0000BC   85..82       MOV     DPL,?XSP + 0
   \   0000BF   85..83       MOV     DPH,?XSP + 1
   \   0000C2   78..         MOV     R0,#?V0 + 8
   \   0000C4   12....       LCALL   ?L_MOV_X
   \   0000C7   E5..         MOV     A,?V0 + 8
   \   0000C9   24D4         ADD     A,#-0x2c
   \   0000CB   F8           MOV     R0,A
   \   0000CC   E5..         MOV     A,?V0 + 9
   \   0000CE   34FF         ADDC    A,#-0x1
   \   0000D0   F9           MOV     R1,A
   \   0000D1   85..82       MOV     DPL,?V0 + 0
   \   0000D4   85..83       MOV     DPH,?V0 + 1
   \   0000D7   E8           MOV     A,R0
   \   0000D8   F0           MOVX    @DPTR,A
   \   0000D9   A3           INC     DPTR
   \   0000DA   E9           MOV     A,R1
   \   0000DB   F0           MOVX    @DPTR,A
    490          	if(req == NULL || (*req_len>MAX_REQ_PAYLOAD_LEN))
   \   0000DC   E5..         MOV     A,?V0 + 4
   \   0000DE   45..         ORL     A,?V0 + 5
   \   0000E0   600B         JZ      ??MQTT_UnPacketCmd_3
   \   0000E2   85..82       MOV     DPL,?V0 + 0
   \   0000E5   85..83       MOV     DPH,?V0 + 1
   \   0000E8   12....       LCALL   ??Subroutine89_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_259:
   \   0000EB   400B         JC      ??MQTT_UnPacketCmd_4
    491          	{
    492          		debug("UnPacket mem 22\r\n");
   \                     ??MQTT_UnPacketCmd_3:
   \   0000ED                ; Setup parameters for call to function debug
   \   0000ED   7A..         MOV     R2,#`?<Constant "UnPacket mem 22\\r\\n">` & 0xff
   \   0000EF   7B..         MOV     R3,#(`?<Constant "UnPacket mem 22\\r\\n">` >> 8) & 0xff
   \   0000F1   12....       LCALL   ??debug?relay
    493          		return 3;
   \   0000F4   7903         MOV     R1,#0x3
   \   0000F6   803D         SJMP    ??MQTT_UnPacketCmd_1
    494          	}
    495                    
    496          	memset(req, 0, *req_len + 1);						//ÇåÁã
   \                     ??MQTT_UnPacketCmd_4:
   \   0000F8                ; Setup parameters for call to function memset
   \   0000F8   85..82       MOV     DPL,?V0 + 0
   \   0000FB   85..83       MOV     DPH,?V0 + 1
   \   0000FE   E0           MOVX    A,@DPTR
   \   0000FF   2401         ADD     A,#0x1
   \   000101   F5..         MOV     ?V0 + 2,A
   \   000103   A3           INC     DPTR
   \   000104   E0           MOVX    A,@DPTR
   \   000105   3400         ADDC    A,#0x0
   \   000107   F5..         MOV     ?V0 + 3,A
   \   000109   78..         MOV     R0,#?V0 + 2
   \   00010B   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00010E   7C00         MOV     R4,#0x0
   \   000110   7D00         MOV     R5,#0x0
   \   000112   AA..         MOV     R2,?V0 + 4
   \   000114   AB..         MOV     R3,?V0 + 5
   \   000116   12....       LCALL   ??Subroutine82_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_203:
   \   000119   12....       LCALL   ?DEALLOC_XSTACK8
    497          	memcpy(req, (const int8 *)dataPtr, *req_len);		//¸´ÖÆÃüÁî
   \   00011C                ; Setup parameters for call to function memcpy
   \   00011C   85..82       MOV     DPL,?V0 + 0
   \   00011F   85..83       MOV     DPH,?V0 + 1
   \   000122   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   000125   EE           MOV     A,R6
   \   000126   FC           MOV     R4,A
   \   000127   EF           MOV     A,R7
   \   000128   FD           MOV     R5,A
   \   000129   AA..         MOV     R2,?V0 + 4
   \   00012B   AB..         MOV     R3,?V0 + 5
   \   00012D   12....       LCALL   ??Subroutine88_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_257:
   \   000130   12....       LCALL   ?DEALLOC_XSTACK8
    498          	
    499          	return 0;
   \   000133   7900         MOV     R1,#0x0
   \                     ??MQTT_UnPacketCmd_1:
   \   000135   7404         MOV     A,#0x4
   \   000137   12....       LCALL   ?DEALLOC_XSTACK8
   \   00013A   02....       LJMP    ?Subroutine0 & 0xFFFF
    500          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine50:
   \   000000   7C00         MOV     R4,#0x0
   \   000002   7D00         MOV     R5,#0x0
   \   000004   AA..         MOV     R2,?V0 + 2
   \   000006   AB..         MOV     R3,?V0 + 3
   \   000008                REQUIRE ??Subroutine82_0
   \   000008                ; // Fall through to label ??Subroutine82_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine82_0:
   \   000000   12....       LCALL   ??memset?relay
   \   000003   7402         MOV     A,#0x2
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine67:
   \   000000   FD           MOV     R5,A
   \   000001   AA..         MOV     R2,?V0 + 2
   \   000003   AB..         MOV     R3,?V0 + 3
   \   000005                REQUIRE ??Subroutine88_0
   \   000005                ; // Fall through to label ??Subroutine88_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine88_0:
   \   000000   12....       LCALL   ??memcpy?relay
   \   000003   7402         MOV     A,#0x2
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine89_0:
   \   000000   C3           CLR     C
   \   000001   E0           MOVX    A,@DPTR
   \   000002   9465         SUBB    A,#0x65
   \   000004   A3           INC     DPTR
   \   000005   E0           MOVX    A,@DPTR
   \   000006   9400         SUBB    A,#0x0
   \   000008   22           RET
    501          
    502          //==========================================================
    503          //	º¯ÊýÃû³Æ£º	MQTT_PacketCmdResp
    504          //
    505          //	º¯Êý¹¦ÄÜ£º	ÃüÁî»Ø¸´×é°ü
    506          //
    507          //	Èë¿Ú²ÎÊý£º	cmdid£ºcmdid
    508          //				req£ºÃüÁî
    509          //				mqttPacket£º°üÖ¸Õë
    510          //
    511          //	·µ»Ø²ÎÊý£º	0-³É¹¦		1-Ê§°Ü
    512          //
    513          //	ËµÃ÷£º		
    514          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    515          uint1 MQTT_PacketCmdResp(const int8 *cmdid, const int8 *req, MQTT_PACKET_STRUCTURE *mqttPacket)
   \                     MQTT_PacketCmdResp:
    516          {
   \   000000   74F2         MOV     A,#-0xe
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 14
   \   000005                ; Auto size: 50
   \   000005   74CE         MOV     A,#-0x32
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   8A..         MOV     ?V0 + 2,R2
   \   00000C   8B..         MOV     ?V0 + 3,R3
   \   00000E   8C..         MOV     ?V0 + 4,R4
   \   000010   8D..         MOV     ?V0 + 5,R5
   \   000012   7440         MOV     A,#0x40
   \   000014   12....       LCALL   ?XSTACK_DISP0_8
   \   000017   12....       LCALL   ?Subroutine30 & 0xFFFF
    517          	
    518          	uint16 cmdid_len = strlen(cmdid);
                 	                          ^
Warning[Pe167]: argument of type "signed char const *" is incompatible with
          parameter of type "char const *"
   \                     ??CrossCallReturnLabel_49:
   \   00001A                ; Setup parameters for call to function strlen
   \   00001A   12....       LCALL   ??strlen?relay
    519          	_Bool status = 0;
    520            uint8 payload[50]={0};
   \   00001D   85..82       MOV     DPL,?XSP + 0
   \   000020   85..83       MOV     DPH,?XSP + 1
   \   000023   AC82         MOV     R4,DPL
   \   000025   AD83         MOV     R5,DPH
   \   000027   7583..       MOV     DPH,#(`?<Constant {0}>` >> 8) & 0xff
   \   00002A   7582..       MOV     DPL,#`?<Constant {0}>` & 0xff
   \   00002D   7432         MOV     A,#0x32
   \   00002F   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    521          	
    522            sprintf(payload, "$crsp/%s", cmdid);
                   ^
Warning[Pe223]: function "sprintf" declared implicitly
   \   000032                ; Setup parameters for call to function sprintf
   \   000032   78..         MOV     R0,#?V0 + 2
   \   000034   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000037   7C..         MOV     R4,#`?<Constant "$crsp/%s">` & 0xff
   \   000039   7D..         MOV     R5,#(`?<Constant "$crsp/%s">` >> 8) & 0xff
   \   00003B   7402         MOV     A,#0x2
   \   00003D   12....       LCALL   ?XSTACK_DISP0_8
   \   000040   AA82         MOV     R2,DPL
   \   000042   AB83         MOV     R3,DPH
   \   000044   12....       LCALL   ??sprintf?relay
   \   000047   7402         MOV     A,#0x2
   \   000049   12....       LCALL   ?DEALLOC_XSTACK8
    523          
    524          	if(MQTT_PacketPublish(MQTT_PUBLISH_ID, payload, req, strlen(req), MQTT_QOS_LEVEL0, 0, 1, mqttPacket) == 0)
                 	                                                            ^
Warning[Pe167]: argument of type "signed char const *" is incompatible with
          parameter of type "char const *"

  	if(MQTT_PacketPublish(MQTT_PUBLISH_ID, payload, req, strlen(req), MQTT_QOS_LEVEL0, 0, 1, mqttPacket) == 0)
  	                                       ^
"I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\MqttKit.c",524  Warning[Pe167]: 
          argument of type "uint8 *" is incompatible with parameter of type
          "signed char const *"
   \   00004C                ; Setup parameters for call to function MQTT_PacketPublish
   \   00004C   78..         MOV     R0,#?V0 + 0
   \   00004E   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000051   90....       MOV     DPTR,#__Constant_1
   \   000054   12....       LCALL   ?PUSH_XSTACK8_X_FOUR
   \   000057   90....       MOV     DPTR,#__Constant_0
   \   00005A   12....       LCALL   ?PUSH_XSTACK8_X_FOUR
   \   00005D                ; Setup parameters for call to function strlen
   \   00005D   AA..         MOV     R2,?V0 + 4
   \   00005F   AB..         MOV     R3,?V0 + 5
   \   000061   12....       LCALL   ??strlen?relay
   \   000064   8A..         MOV     ?V0 + 0,R2
   \   000066   8B..         MOV     ?V0 + 1,R3
   \   000068   E4           CLR     A
   \   000069   F5..         MOV     ?V0 + 2,A
   \   00006B   F5..         MOV     ?V0 + 3,A
   \   00006D   78..         MOV     R0,#?V0 + 0
   \   00006F   12....       LCALL   ?PUSH_XSTACK_I_FOUR
   \   000072   78..         MOV     R0,#?V0 + 4
   \   000074   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000077   7900         MOV     R1,#0x0
   \   000079   7410         MOV     A,#0x10
   \   00007B   12....       LCALL   ?XSTACK_DISP0_8
   \   00007E   AC82         MOV     R4,DPL
   \   000080   AD83         MOV     R5,DPH
   \   000082   7A0A         MOV     R2,#0xa
   \   000084   7B00         MOV     R3,#0x0
   \   000086   12....       LCALL   ??MQTT_PacketPublish?relay
   \   000089   7410         MOV     A,#0x10
   \   00008B   12....       LCALL   ?DEALLOC_XSTACK8
   \   00008E   E9           MOV     A,R1
   \   00008F   7004         JNZ     ??MQTT_PacketCmdResp_0
    525          		status = 0;
   \   000091   C2F0         CLR     B.0
   \   000093   8002         SJMP    ??MQTT_PacketCmdResp_1
    526          	else
    527          		status = 1;
   \                     ??MQTT_PacketCmdResp_0:
   \   000095   D2F0         SETB    B.0
    528          		
    529          	return status;
   \                     ??MQTT_PacketCmdResp_1:
   \   000097   A2F0         MOV     C,B.0
   \   000099   E4           CLR     A
   \   00009A   33           RLC     A
   \   00009B   F9           MOV     R1,A
   \   00009C   7432         MOV     A,#0x32
   \   00009E   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000A1   7F06         MOV     R7,#0x6
   \   0000A3   02....       LJMP    ?BANKED_LEAVE_XDATA
    530          
    531          }
    532          
    533          //==========================================================
    534          //	º¯ÊýÃû³Æ£º	MQTT_PacketSubscribe
    535          //
    536          //	º¯Êý¹¦ÄÜ£º	SubscribeÏûÏ¢×é°ü
    537          //
    538          //	Èë¿Ú²ÎÊý£º	pkt_id£ºpkt_id
    539          //				qos£ºÏûÏ¢ÖØ·¢´ÎÊý
    540          //				topics£º¶©ÔÄµÄÏûÏ¢
    541          //				topics_cnt£º¶©ÔÄµÄÏûÏ¢¸öÊý
    542          //				mqttPacket£º°üÖ¸Õë
    543          //
    544          //	·µ»Ø²ÎÊý£º	0-³É¹¦		ÆäËû-Ê§°Ü
    545          //
    546          //	ËµÃ÷£º		
    547          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    548          uint8 MQTT_PacketSubscribe(uint16 pkt_id, enum MqttQosLevel qos, const int8 *topics[], uint8 topics_cnt, MQTT_PACKET_STRUCTURE *mqttPacket)
   \                     MQTT_PacketSubscribe:
    549          {
   \   000000   74E8         MOV     A,#-0x18
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 24
   \   000005                ; Auto size: 1
   \   000005   74FF         MOV     A,#-0x1
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   E9           MOV     A,R1
   \   00000B   85..82       MOV     DPL,?XSP + 0
   \   00000E   85..83       MOV     DPH,?XSP + 1
   \   000011   F0           MOVX    @DPTR,A
   \   000012   8A..         MOV     ?V0 + 0,R2
   \   000014   8B..         MOV     ?V0 + 1,R3
   \   000016   8C..         MOV     ?V0 + 14,R4
   \   000018   8D..         MOV     ?V0 + 15,R5
   \   00001A   7419         MOV     A,#0x19
   \   00001C   12....       LCALL   ?XSTACK_DISP0_8
   \   00001F   E0           MOVX    A,@DPTR
   \   000020   F5..         MOV     ?V0 + 3,A
   \   000022   741A         MOV     A,#0x1a
   \   000024   12....       LCALL   ?XSTACK_DISP0_8
   \   000027   12....       LCALL   ?Subroutine27 & 0xFFFF
    550          	
    551          	uint32 topic_len = 0, remain_len = 0;
   \                     ??CrossCallReturnLabel_43:
   \   00002A   12....       LCALL   ?L_MOV_X
    552          	int16 len = 0;
    553          	uint8 i = 0;
   \   00002D   75..00       MOV     ?V0 + 2,#0x0
    554          	
    555          	if(pkt_id == 0)
   \   000030   EA           MOV     A,R2
   \   000031   45..         ORL     A,?V0 + 1
   \   000033   700D         JNZ     ??MQTT_PacketSubscribe_0
    556          		return 1;
   \   000035   7901         MOV     R1,#0x1
   \   000037   02....       LJMP    ??MQTT_PacketSubscribe_1 & 0xFFFF
    557          	
    558          	//¼ÆËãtopic³¤¶È-------------------------------------------------------------------------
    559          	for(; i < topics_cnt; i++)
    560          	{
    561          		if(topics[i] == NULL)
    562          			return 2;
    563          		
    564          		topic_len += strlen(topics[i]);
                 		                    ^
Warning[Pe167]: argument of type "signed char const *" is incompatible with
          parameter of type "char const *"
   \                     ??MQTT_PacketSubscribe_2:
   \   00003A                ; Setup parameters for call to function strlen
   \   00003A   12....       LCALL   ?Subroutine20 & 0xFFFF
   \                     ??CrossCallReturnLabel_28:
   \   00003D   12....       LCALL   ?L_ADD
   \   000040   05..         INC     ?V0 + 2
   \                     ??MQTT_PacketSubscribe_0:
   \   000042   E5..         MOV     A,?V0 + 2
   \   000044   C3           CLR     C
   \   000045   95..         SUBB    A,?V0 + 3
   \   000047   500D         JNC     ??MQTT_PacketSubscribe_3
   \   000049   12....       LCALL   ?Subroutine36 & 0xFFFF
   \                     ??CrossCallReturnLabel_58:
   \   00004C   12....       LCALL   ??Subroutine73_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_135:
   \   00004F   70E9         JNZ     ??MQTT_PacketSubscribe_2
   \   000051   7902         MOV     R1,#0x2
   \   000053   02....       LJMP    ??MQTT_PacketSubscribe_1 & 0xFFFF
    565          	}
    566          	
    567          	//2 bytes packet id + topic filter(2 bytes topic + topic length + 1 byte reserve)------
    568          	remain_len = 2 + 3 * topics_cnt + topic_len;
   \                     ??MQTT_PacketSubscribe_3:
   \   000056   E5..         MOV     A,?V0 + 3
   \   000058   75F003       MOV     B,#0x3
   \   00005B   A4           MUL     AB
   \   00005C   2402         ADD     A,#0x2
   \   00005E   F5..         MOV     ?V0 + 8,A
   \   000060   E5F0         MOV     A,B
   \   000062   12....       LCALL   ?Subroutine34 & 0xFFFF
   \                     ??CrossCallReturnLabel_54:
   \   000065   12....       LCALL   ?L_ADD
   \   000068   85....       MOV     ?V0 + 4,?V0 + 8
   \   00006B   85....       MOV     ?V0 + 5,?V0 + 9
    569          	
    570          	//·ÖÅäÄÚ´æ------------------------------------------------------------------------------
    571          	MQTT_NewBuffer(mqttPacket, remain_len + 5);
   \   00006E                ; Setup parameters for call to function MQTT_NewBuffer
   \   00006E   90....       MOV     DPTR,#__Constant_5
   \   000071   78..         MOV     R0,#?V0 + 8
   \   000073   12....       LCALL   ?L_ADD_X
   \   000076   78..         MOV     R0,#?V0 + 8
   \   000078   12....       LCALL   ?PUSH_XSTACK_I_FOUR
   \   00007B   AA..         MOV     R2,?V0 + 12
   \   00007D   AB..         MOV     R3,?V0 + 13
   \   00007F   12....       LCALL   ??Subroutine84_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_214:
   \   000082   12....       LCALL   ?DEALLOC_XSTACK8
    572          	if(mqttPacket->_data == NULL)
   \   000085   85..82       MOV     DPL,?V0 + 12
   \   000088   85..83       MOV     DPH,?V0 + 13
   \   00008B   12....       LCALL   ??Subroutine73_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_136:
   \   00008E   7005         JNZ     ??MQTT_PacketSubscribe_4
    573          		return 3;
   \   000090   7903         MOV     R1,#0x3
   \   000092   02....       LJMP    ??MQTT_PacketSubscribe_1 & 0xFFFF
    574          	
    575          /*************************************¹Ì¶¨Í·²¿***********************************************/
    576          	
    577          	//¹Ì¶¨Í·²¿----------------------Í·²¿ÏûÏ¢-------------------------------------------------
    578          	mqttPacket->_data[mqttPacket->_len++] = MQTT_PKT_SUBSCRIBE << 4 | 0x02;
   \                     ??MQTT_PacketSubscribe_4:
   \   000095   12....       LCALL   ?Subroutine41 & 0xFFFF
   \                     ??CrossCallReturnLabel_70:
   \   000098   12....       LCALL   ??Subroutine77_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_169:
   \   00009B   12....       LCALL   ?L_MOV_X
   \   00009E   12....       LCALL   ?Subroutine51 & 0xFFFF
   \                     ??CrossCallReturnLabel_96:
   \   0000A1   7482         MOV     A,#-0x7e
   \   0000A3   12....       LCALL   ??Subroutine80_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_188:
   \   0000A6   12....       LCALL   ?L_MOV_X
   \   0000A9   8E82         MOV     DPL,R6
   \   0000AB   8F83         MOV     DPH,R7
   \   0000AD   78..         MOV     R0,#?V0 + 8
   \   0000AF   12....       LCALL   ?L_ADD_TO_X
    579          	
    580          	//¹Ì¶¨Í·²¿----------------------Ê£Óà³¤¶ÈÖµ-----------------------------------------------
    581          	len = MQTT_DumpLength(remain_len, mqttPacket->_data + mqttPacket->_len);
   \   0000B2                ; Setup parameters for call to function MQTT_DumpLength
   \   0000B2   8E82         MOV     DPL,R6
   \   0000B4   8F83         MOV     DPH,R7
   \   0000B6   78..         MOV     R0,#?V0 + 8
   \   0000B8   12....       LCALL   ?L_MOV_X
   \   0000BB   12....       LCALL   ?Subroutine46 & 0xFFFF
    582          	if(len < 0)
   \                     ??CrossCallReturnLabel_158:
   \   0000BE   500C         JNC     ??MQTT_PacketSubscribe_5
    583          	{
    584          		MQTT_DeleteBuffer(mqttPacket);
   \   0000C0                ; Setup parameters for call to function MQTT_DeleteBuffer
   \   0000C0   AA..         MOV     R2,?V0 + 12
   \   0000C2   AB..         MOV     R3,?V0 + 13
   \   0000C4   12....       LCALL   ??MQTT_DeleteBuffer?relay
    585          		return 4;
   \   0000C7   7904         MOV     R1,#0x4
   \   0000C9   02....       LJMP    ??MQTT_PacketSubscribe_1 & 0xFFFF
    586          	}
    587          	else
    588          		mqttPacket->_len += len;
   \                     ??MQTT_PacketSubscribe_5:
   \   0000CC   12....       LCALL   ?Subroutine33 & 0xFFFF
   \                     ??CrossCallReturnLabel_52:
   \   0000CF   12....       LCALL   ?L_ADD_TO_X
    589          	
    590          /*************************************payload***********************************************/
    591          	
    592          	//payload----------------------pkt_id---------------------------------------------------
    593          	mqttPacket->_data[mqttPacket->_len++] = MOSQ_MSB(pkt_id);
   \   0000D2   12....       LCALL   ?Subroutine29 & 0xFFFF
   \                     ??CrossCallReturnLabel_45:
   \   0000D5   12....       LCALL   ?L_MOV_X
   \   0000D8   12....       LCALL   ?Subroutine70 & 0xFFFF
   \                     ??CrossCallReturnLabel_122:
   \   0000DB   12....       LCALL   ??Subroutine86_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_249:
   \   0000DE   12....       LCALL   ?L_MOV_X
   \   0000E1   8E82         MOV     DPL,R6
   \   0000E3   8F83         MOV     DPH,R7
   \   0000E5   78..         MOV     R0,#?V0 + 4
   \   0000E7   12....       LCALL   ?L_ADD_TO_X
    594          	mqttPacket->_data[mqttPacket->_len++] = MOSQ_LSB(pkt_id);
   \   0000EA   8E82         MOV     DPL,R6
   \   0000EC   8F83         MOV     DPH,R7
   \   0000EE   78..         MOV     R0,#?V0 + 4
   \   0000F0   12....       LCALL   ?L_MOV_X
   \   0000F3   12....       LCALL   ?Subroutine44 & 0xFFFF
   \                     ??CrossCallReturnLabel_76:
   \   0000F6   12....       LCALL   ??Subroutine87_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_236:
   \   0000F9   12....       LCALL   ?L_MOV_X
   \   0000FC   8E82         MOV     DPL,R6
   \   0000FE   8F83         MOV     DPH,R7
   \   000100   78..         MOV     R0,#?V0 + 4
   \   000102   12....       LCALL   ?L_ADD_TO_X
    595          	
    596          	//payload----------------------topic_name-----------------------------------------------
    597          	for(i = 0; i < topics_cnt; i++)
   \   000105   75..00       MOV     ?V0 + 2,#0x0
   \   000108   807E         SJMP    ??MQTT_PacketSubscribe_6
    598          	{
    599          		topic_len = strlen(topics[i]);
                 		                   ^
Warning[Pe167]: argument of type "signed char const *" is incompatible with
          parameter of type "char const *"
   \                     ??MQTT_PacketSubscribe_7:
   \   00010A   12....       LCALL   ?Subroutine14 & 0xFFFF
    600          		mqttPacket->_data[mqttPacket->_len++] = MOSQ_MSB(topic_len);
   \                     ??CrossCallReturnLabel_166:
   \   00010D   12....       LCALL   ?L_MOV_X
   \   000110   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_197:
   \   000113   12....       LCALL   ?L_MOV_X
   \   000116   8E82         MOV     DPL,R6
   \   000118   8F83         MOV     DPH,R7
   \   00011A   78..         MOV     R0,#?V0 + 8
   \   00011C   12....       LCALL   ?L_ADD_TO_X
    601          		mqttPacket->_data[mqttPacket->_len++] = MOSQ_LSB(topic_len);
   \   00011F   8E82         MOV     DPL,R6
   \   000121   8F83         MOV     DPH,R7
   \   000123   78..         MOV     R0,#?V0 + 8
   \   000125   12....       LCALL   ?L_MOV_X
   \   000128   12....       LCALL   ?Subroutine49 & 0xFFFF
   \                     ??CrossCallReturnLabel_93:
   \   00012B   12....       LCALL   ??Subroutine80_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_189:
   \   00012E   12....       LCALL   ?L_MOV_X
   \   000131   8E82         MOV     DPL,R6
   \   000133   8F83         MOV     DPH,R7
   \   000135   78..         MOV     R0,#?V0 + 8
   \   000137   12....       LCALL   ?L_ADD_TO_X
    602          		
    603          		strncat((int8 *)mqttPacket->_data + mqttPacket->_len, topics[i], topic_len);
                 		        ^
Warning[Pe167]: argument of type "int8 *" is incompatible with parameter of
          type "char *"

  		strncat((int8 *)mqttPacket->_data + mqttPacket->_len, topics[i], topic_len);
  		                                                      ^
"I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\MqttKit.c",603  Warning[Pe167]: 
          argument of type "signed char const *" is incompatible with
          parameter of type "char const *"
   \   00013A                ; Setup parameters for call to function strncat
   \   00013A   85....       MOV     ?V0 + 8,?V0 + 4
   \   00013D   85....       MOV     ?V0 + 9,?V0 + 5
   \   000140   78..         MOV     R0,#?V0 + 8
   \   000142   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000145   12....       LCALL   ?Subroutine21 & 0xFFFF
   \                     ??CrossCallReturnLabel_162:
   \   000148   12....       LCALL   ?L_MOV_X
   \   00014B   12....       LCALL   ?Subroutine48 & 0xFFFF
   \                     ??CrossCallReturnLabel_153:
   \   00014E   12....       LCALL   ?DEALLOC_XSTACK8
    604          		mqttPacket->_len += topic_len;
   \   000151   8E82         MOV     DPL,R6
   \   000153   8F83         MOV     DPH,R7
   \   000155   78..         MOV     R0,#?V0 + 4
   \   000157   12....       LCALL   ?L_ADD_TO_X
    605          		
    606          		mqttPacket->_data[mqttPacket->_len++] = qos & 0xFF;
   \   00015A   85..82       MOV     DPL,?XSP + 0
   \   00015D   85..83       MOV     DPH,?XSP + 1
   \   000160   E0           MOVX    A,@DPTR
   \   000161   C0E0         PUSH    A
   \   000163   8E82         MOV     DPL,R6
   \   000165   8F83         MOV     DPH,R7
   \   000167   78..         MOV     R0,#?V0 + 4
   \   000169   12....       LCALL   ?L_MOV_X
   \   00016C   85..82       MOV     DPL,?V0 + 12
   \   00016F   85..83       MOV     DPH,?V0 + 13
   \   000172   12....       LCALL   ??Subroutine91_0 & 0xFFFF
    607          	}
   \                     ??CrossCallReturnLabel_266:
   \   000175   D0E0         POP     A
   \   000177   12....       LCALL   ??Subroutine87_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_237:
   \   00017A   12....       LCALL   ?L_MOV_X
   \   00017D   8E82         MOV     DPL,R6
   \   00017F   8F83         MOV     DPH,R7
   \   000181   78..         MOV     R0,#?V0 + 4
   \   000183   12....       LCALL   ?L_ADD_TO_X
   \   000186   05..         INC     ?V0 + 2
   \                     ??MQTT_PacketSubscribe_6:
   \   000188   E5..         MOV     A,?V0 + 2
   \   00018A   C3           CLR     C
   \   00018B   95..         SUBB    A,?V0 + 3
   \   00018D   5003         JNC     $+5
   \   00018F   02....       LJMP    ??MQTT_PacketSubscribe_7 & 0xFFFF
    608          
    609          	return 0;
   \   000192   7900         MOV     R1,#0x0
   \                     ??MQTT_PacketSubscribe_1:
   \   000194   7401         MOV     A,#0x1
   \   000196   02....       LJMP    ?Subroutine2 & 0xFFFF
    610          
    611          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine46:
   \   000000   EA           MOV     A,R2
   \   000001   25..         ADD     A,?V0 + 8
   \   000003   FC           MOV     R4,A
   \   000004   EB           MOV     A,R3
   \   000005   35..         ADDC    A,?V0 + 9
   \   000007   FD           MOV     R5,A
   \   000008   AA..         MOV     R2,?V0 + 4
   \   00000A   AB..         MOV     R3,?V0 + 5
   \   00000C                REQUIRE ??Subroutine75_0
   \   00000C                ; // Fall through to label ??Subroutine75_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine21:
   \   000000   85..82       MOV     DPL,?V0 + 0
   \   000003   85..83       MOV     DPH,?V0 + 1
   \   000006                REQUIRE ??Subroutine76_0
   \   000006                ; // Fall through to label ??Subroutine76_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine76_0:
   \   000000   12....       LCALL   ?Subroutine61 & 0xFFFF
   \                     ??CrossCallReturnLabel_165:
   \   000003   78..         MOV     R0,#?V0 + 8
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine14:
   \   000000   E5..         MOV     A,?V0 + 2
   \   000002   C3           CLR     C
   \   000003   33           RLC     A
   \   000004   F8           MOV     R0,A
   \   000005   E4           CLR     A
   \   000006   33           RLC     A
   \   000007   F9           MOV     R1,A
   \   000008   E5..         MOV     A,?V0 + 14
   \   00000A   28           ADD     A,R0
   \   00000B   F5..         MOV     ?V0 + 0,A
   \   00000D   E5..         MOV     A,?V0 + 15
   \   00000F   39           ADDC    A,R1
   \   000010   F5..         MOV     ?V0 + 1,A
   \   000012                ; Setup parameters for call to function strlen
   \   000012                ; Setup parameters for call to function strlen
   \   000012   85..82       MOV     DPL,?V0 + 0
   \   000015   12....       LCALL   ?Subroutine54 & 0xFFFF
   \                     ??CrossCallReturnLabel_173:
   \   000018   8A..         MOV     ?V0 + 4,R2
   \   00001A   8B..         MOV     ?V0 + 5,R3
   \   00001C   E4           CLR     A
   \   00001D   F5..         MOV     ?V0 + 6,A
   \   00001F   F5..         MOV     ?V0 + 7,A
   \   000021                REQUIRE ??Subroutine77_0
   \   000021                ; // Fall through to label ??Subroutine77_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine77_0:
   \   000000   85..82       MOV     DPL,?V0 + 12
   \   000003   85..83       MOV     DPH,?V0 + 13
   \   000006                REQUIRE ??Subroutine78_0
   \   000006                ; // Fall through to label ??Subroutine78_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine78_0:
   \   000000   12....       LCALL   ?Subroutine59 & 0xFFFF
   \                     ??CrossCallReturnLabel_172:
   \   000003   78..         MOV     R0,#?V0 + 8
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine54:
   \   000000   F583         MOV     DPH,A
   \   000002                REQUIRE ??Subroutine79_0
   \   000002                ; // Fall through to label ??Subroutine79_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine51:
   \   000000   12....       LCALL   ?Subroutine66 & 0xFFFF
   \                     ??CrossCallReturnLabel_121:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine44:
   \   000000   12....       LCALL   ?Subroutine65 & 0xFFFF
   \                     ??CrossCallReturnLabel_117:
   \   000003   E5..         MOV     A,?V0 + 0
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine41:
   \   000000   E5..         MOV     A,?V0 + 12
   \   000002   2402         ADD     A,#0x2
   \   000004   FE           MOV     R6,A
   \   000005   E5..         MOV     A,?V0 + 13
   \   000007   3400         ADDC    A,#0x0
   \   000009   FF           MOV     R7,A
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine36:
   \   000000   E5..         MOV     A,?V0 + 2
   \   000002   C3           CLR     C
   \   000003   33           RLC     A
   \   000004   F8           MOV     R0,A
   \   000005   E4           CLR     A
   \   000006   33           RLC     A
   \   000007   F9           MOV     R1,A
   \   000008   E5..         MOV     A,?V0 + 14
   \   00000A   28           ADD     A,R0
   \   00000B   F582         MOV     DPL,A
   \   00000D   E5..         MOV     A,?V0 + 15
   \   00000F   39           ADDC    A,R1
   \   000010   F583         MOV     DPH,A
   \   000012   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine34:
   \   000000   3400         ADDC    A,#0x0
   \   000002   F5..         MOV     ?V0 + 9,A
   \   000004   33           RLC     A
   \   000005   95E0         SUBB    A,0xE0 /* A   */
   \   000007   F5..         MOV     ?V0 + 10,A
   \   000009   F5..         MOV     ?V0 + 11,A
   \   00000B   78..         MOV     R0,#?V0 + 8
   \   00000D   79..         MOV     R1,#?V0 + 4
   \   00000F   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine33:
   \   000000   E5..         MOV     A,?V0 + 12
   \   000002   2402         ADD     A,#0x2
   \   000004   E5..         MOV     A,?V0 + 13
   \   000006   3400         ADDC    A,#0x0
   \   000008   EB           MOV     A,R3
   \   000009   12....       LCALL   ?Subroutine64 & 0xFFFF
   \                     ??CrossCallReturnLabel_114:
   \   00000C   8E82         MOV     DPL,R6
   \   00000E   8F83         MOV     DPH,R7
   \   000010   78..         MOV     R0,#?V0 + 4
   \   000012   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine29:
   \   000000   85..82       MOV     DPL,?V0 + 12
   \   000003   85..83       MOV     DPH,?V0 + 13
   \   000006   12....       LCALL   ?Subroutine59 & 0xFFFF
   \                     ??CrossCallReturnLabel_171:
   \   000009   78..         MOV     R0,#?V0 + 4
   \   00000B   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine59:
   \   000000   12....       LCALL   ?Subroutine71 & 0xFFFF
   \                     ??CrossCallReturnLabel_181:
   \   000003   8E82         MOV     DPL,R6
   \   000005   8F83         MOV     DPH,R7
   \   000007   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine27:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   F5..         MOV     ?V0 + 12,A
   \   000003   A3           INC     DPTR
   \   000004   E0           MOVX    A,@DPTR
   \   000005   F5..         MOV     ?V0 + 13,A
   \   000007   90....       MOV     DPTR,#__Constant_0
   \   00000A   78..         MOV     R0,#?V0 + 4
   \   00000C   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine20:
   \   000000   E5..         MOV     A,?V0 + 2
   \   000002   C3           CLR     C
   \   000003   33           RLC     A
   \   000004   F8           MOV     R0,A
   \   000005   E4           CLR     A
   \   000006   33           RLC     A
   \   000007   F9           MOV     R1,A
   \   000008   E5..         MOV     A,?V0 + 14
   \   00000A   28           ADD     A,R0
   \   00000B   F582         MOV     DPL,A
   \   00000D   E5..         MOV     A,?V0 + 15
   \   00000F   39           ADDC    A,R1
   \   000010   12....       LCALL   ?Subroutine54 & 0xFFFF
   \                     ??CrossCallReturnLabel_174:
   \   000013   8A..         MOV     ?V0 + 8,R2
   \   000015   8B..         MOV     ?V0 + 9,R3
   \   000017   E4           CLR     A
   \   000018   F5..         MOV     ?V0 + 10,A
   \   00001A   F5..         MOV     ?V0 + 11,A
   \   00001C   78..         MOV     R0,#?V0 + 4
   \   00001E   79..         MOV     R1,#?V0 + 8
   \   000020   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine61:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   FC           MOV     R4,A
   \   000002   A3           INC     DPTR
   \   000003   E0           MOVX    A,@DPTR
   \   000004   FD           MOV     R5,A
   \   000005   8E82         MOV     DPL,R6
   \   000007   8F83         MOV     DPH,R7
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine86_0:
   \   000000   F583         MOV     DPH,A
   \   000002   E5..         MOV     A,?V0 + 1
   \   000004                REQUIRE ??Subroutine87_0
   \   000004                ; // Fall through to label ??Subroutine87_0
    612          
    613          //==========================================================
    614          //	º¯ÊýÃû³Æ£º	MQTT_UnPacketSubscrebe
    615          //
    616          //	º¯Êý¹¦ÄÜ£º	SubscribeµÄ»Ø¸´ÏûÏ¢½â°ü
    617          //
    618          //	Èë¿Ú²ÎÊý£º	rev_data£º½ÓÊÕµ½µÄÐÅÏ¢
    619          //
    620          //	·µ»Ø²ÎÊý£º	0-³É¹¦		ÆäËû-Ê§°Ü
    621          //
    622          //	ËµÃ÷£º		
    623          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    624          uint8 MQTT_UnPacketSubscribe(uint8 *rev_data)
   \                     MQTT_UnPacketSubscribe:
    625          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    626          	
    627          	uint8 result = 255;
   \   000004   79FF         MOV     R1,#-0x1
    628          
    629          	if(rev_data[2] == MOSQ_MSB(MQTT_SUBSCRIBE_ID) && rev_data[3] == MOSQ_LSB(MQTT_SUBSCRIBE_ID))
   \   000006   8A82         MOV     DPL,R2
   \   000008   8B83         MOV     DPH,R3
   \   00000A   A3           INC     DPTR
   \   00000B   A3           INC     DPTR
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   7024         JNZ     ??MQTT_UnPacketSubscribe_0
   \   00000F   8A82         MOV     DPL,R2
   \   000011   8B83         MOV     DPH,R3
   \   000013   A3           INC     DPTR
   \   000014   A3           INC     DPTR
   \   000015   A3           INC     DPTR
   \   000016   E0           MOVX    A,@DPTR
   \   000017   6414         XRL     A,#0x14
   \   000019   7018         JNZ     ??MQTT_UnPacketSubscribe_0
    630          	{
    631          		switch(rev_data[4])
   \   00001B   8A82         MOV     DPL,R2
   \   00001D   8B83         MOV     DPH,R3
   \   00001F   A3           INC     DPTR
   \   000020   A3           INC     DPTR
   \   000021   A3           INC     DPTR
   \   000022   A3           INC     DPTR
   \   000023   E0           MOVX    A,@DPTR
   \   000024   600C         JZ      ??MQTT_UnPacketSubscribe_1
   \   000026   14           DEC     A
   \   000027   6009         JZ      ??MQTT_UnPacketSubscribe_1
   \   000029   14           DEC     A
   \   00002A   6006         JZ      ??MQTT_UnPacketSubscribe_1
   \   00002C   2482         ADD     A,#-0x7e
   \   00002E   6001         JZ      ??MQTT_UnPacketSubscribe_2
    632          		{
    633          			case 0x00:
    634          			case 0x01:
    635          			case 0x02:
    636          				//MQTT Subscribe OK
    637          				result = 0;
    638          			break;
    639          			
    640          			case 0x80:
    641          				//MQTT Subscribe Failed
    642          				result = 1;
    643          			break;
    644          			
    645          			default:
    646          				//MQTT Subscribe UnKnown Err
    647          				result = 2;
   \   000030   09           INC     R1
   \                     ??MQTT_UnPacketSubscribe_2:
   \   000031   09           INC     R1
   \                     ??MQTT_UnPacketSubscribe_1:
   \   000032   09           INC     R1
    648          			break;
    649          		}
    650          	}
    651          	
    652          	return result;
   \                     ??MQTT_UnPacketSubscribe_0:
   \   000033   02....       LJMP    ?Subroutine4 & 0xFFFF
    653          
    654          }
    655          
    656          //==========================================================
    657          //	º¯ÊýÃû³Æ£º	MQTT_PacketUnSubscribe
    658          //
    659          //	º¯Êý¹¦ÄÜ£º	UnSubscribeÏûÏ¢×é°ü
    660          //
    661          //	Èë¿Ú²ÎÊý£º	pkt_id£ºpkt_id
    662          //				qos£ºÏûÏ¢ÖØ·¢´ÎÊý
    663          //				topics£º¶©ÔÄµÄÏûÏ¢
    664          //				topics_cnt£º¶©ÔÄµÄÏûÏ¢¸öÊý
    665          //				mqttPacket£º°üÖ¸Õë
    666          //
    667          //	·µ»Ø²ÎÊý£º	0-³É¹¦		ÆäËû-Ê§°Ü
    668          //
    669          //	ËµÃ÷£º		
    670          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    671          uint8 MQTT_PacketUnSubscribe(uint16 pkt_id, const int8 *topics[], uint8 topics_cnt, MQTT_PACKET_STRUCTURE *mqttPacket)
   \                     MQTT_PacketUnSubscribe:
    672          {
   \   000000   74E8         MOV     A,#-0x18
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 24
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 0,R2
   \   000007   8B..         MOV     ?V0 + 1,R3
   \   000009   8C..         MOV     ?V0 + 14,R4
   \   00000B   8D..         MOV     ?V0 + 15,R5
   \   00000D   89..         MOV     ?V0 + 3,R1
   \   00000F   7418         MOV     A,#0x18
   \   000011   12....       LCALL   ?XSTACK_DISP0_8
   \   000014   12....       LCALL   ?Subroutine27 & 0xFFFF
    673          	
    674          	uint32 topic_len = 0, remain_len = 0;
   \                     ??CrossCallReturnLabel_44:
   \   000017   12....       LCALL   ?L_MOV_X
    675          	int16 len = 0;
    676          	uint8 i = 0;
   \   00001A   75..00       MOV     ?V0 + 2,#0x0
    677          	
    678          	if(pkt_id == 0)
   \   00001D   EA           MOV     A,R2
   \   00001E   45..         ORL     A,?V0 + 1
   \   000020   700D         JNZ     ??MQTT_PacketUnSubscribe_0
    679          		return 1;
   \   000022   7901         MOV     R1,#0x1
   \   000024   02....       LJMP    ??MQTT_PacketUnSubscribe_1 & 0xFFFF
    680          	
    681          	//¼ÆËãtopic³¤¶È-------------------------------------------------------------------------
    682          	for(; i < topics_cnt; i++)
    683          	{
    684          		if(topics[i] == NULL)
    685          			return 2;
    686          		
    687          		topic_len += strlen(topics[i]);
                 		                    ^
Warning[Pe167]: argument of type "signed char const *" is incompatible with
          parameter of type "char const *"
   \                     ??MQTT_PacketUnSubscribe_2:
   \   000027                ; Setup parameters for call to function strlen
   \   000027   12....       LCALL   ?Subroutine20 & 0xFFFF
   \                     ??CrossCallReturnLabel_29:
   \   00002A   12....       LCALL   ?L_ADD
   \   00002D   05..         INC     ?V0 + 2
   \                     ??MQTT_PacketUnSubscribe_0:
   \   00002F   E5..         MOV     A,?V0 + 2
   \   000031   C3           CLR     C
   \   000032   95..         SUBB    A,?V0 + 3
   \   000034   500D         JNC     ??MQTT_PacketUnSubscribe_3
   \   000036   12....       LCALL   ?Subroutine36 & 0xFFFF
   \                     ??CrossCallReturnLabel_59:
   \   000039   12....       LCALL   ??Subroutine73_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_137:
   \   00003C   70E9         JNZ     ??MQTT_PacketUnSubscribe_2
   \   00003E   7902         MOV     R1,#0x2
   \   000040   02....       LJMP    ??MQTT_PacketUnSubscribe_1 & 0xFFFF
    688          	}
    689          	
    690          	//2 bytes packet id, 2 bytes topic length + topic + 1 byte reserve---------------------
    691          	remain_len = 2 + (topics_cnt << 1) + topic_len;
   \                     ??MQTT_PacketUnSubscribe_3:
   \   000043   E5..         MOV     A,?V0 + 3
   \   000045   C3           CLR     C
   \   000046   33           RLC     A
   \   000047   F8           MOV     R0,A
   \   000048   E4           CLR     A
   \   000049   33           RLC     A
   \   00004A   F9           MOV     R1,A
   \   00004B   E8           MOV     A,R0
   \   00004C   2402         ADD     A,#0x2
   \   00004E   F5..         MOV     ?V0 + 8,A
   \   000050   E9           MOV     A,R1
   \   000051   12....       LCALL   ?Subroutine34 & 0xFFFF
   \                     ??CrossCallReturnLabel_55:
   \   000054   12....       LCALL   ?L_ADD
   \   000057   85....       MOV     ?V0 + 4,?V0 + 8
   \   00005A   85....       MOV     ?V0 + 5,?V0 + 9
    692          	
    693          	//·ÖÅäÄÚ´æ------------------------------------------------------------------------------
    694          	MQTT_NewBuffer(mqttPacket, remain_len + 5);
   \   00005D                ; Setup parameters for call to function MQTT_NewBuffer
   \   00005D   90....       MOV     DPTR,#__Constant_5
   \   000060   78..         MOV     R0,#?V0 + 8
   \   000062   12....       LCALL   ?L_ADD_X
   \   000065   78..         MOV     R0,#?V0 + 8
   \   000067   12....       LCALL   ?PUSH_XSTACK_I_FOUR
   \   00006A   AA..         MOV     R2,?V0 + 12
   \   00006C   AB..         MOV     R3,?V0 + 13
   \   00006E   12....       LCALL   ??Subroutine84_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_215:
   \   000071   12....       LCALL   ?DEALLOC_XSTACK8
    695          	if(mqttPacket->_data == NULL)
   \   000074   85..82       MOV     DPL,?V0 + 12
   \   000077   85..83       MOV     DPH,?V0 + 13
   \   00007A   12....       LCALL   ??Subroutine73_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_138:
   \   00007D   7005         JNZ     ??MQTT_PacketUnSubscribe_4
    696          		return 3;
   \   00007F   7903         MOV     R1,#0x3
   \   000081   02....       LJMP    ??MQTT_PacketUnSubscribe_1 & 0xFFFF
    697          	
    698          /*************************************¹Ì¶¨Í·²¿***********************************************/
    699          	
    700          	//¹Ì¶¨Í·²¿----------------------Í·²¿ÏûÏ¢-------------------------------------------------
    701          	mqttPacket->_data[mqttPacket->_len++] = MQTT_PKT_UNSUBSCRIBE << 4 | 0x02;
   \                     ??MQTT_PacketUnSubscribe_4:
   \   000084   12....       LCALL   ?Subroutine41 & 0xFFFF
   \                     ??CrossCallReturnLabel_71:
   \   000087   12....       LCALL   ??Subroutine77_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_170:
   \   00008A   12....       LCALL   ?L_MOV_X
   \   00008D   12....       LCALL   ?Subroutine51 & 0xFFFF
   \                     ??CrossCallReturnLabel_97:
   \   000090   74A2         MOV     A,#-0x5e
   \   000092   12....       LCALL   ??Subroutine80_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_190:
   \   000095   12....       LCALL   ?L_MOV_X
   \   000098   8E82         MOV     DPL,R6
   \   00009A   8F83         MOV     DPH,R7
   \   00009C   78..         MOV     R0,#?V0 + 8
   \   00009E   12....       LCALL   ?L_ADD_TO_X
    702          	
    703          	//¹Ì¶¨Í·²¿----------------------Ê£Óà³¤¶ÈÖµ-----------------------------------------------
    704          	len = MQTT_DumpLength(remain_len, mqttPacket->_data + mqttPacket->_len);
   \   0000A1                ; Setup parameters for call to function MQTT_DumpLength
   \   0000A1   8E82         MOV     DPL,R6
   \   0000A3   8F83         MOV     DPH,R7
   \   0000A5   78..         MOV     R0,#?V0 + 8
   \   0000A7   12....       LCALL   ?L_MOV_X
   \   0000AA   12....       LCALL   ?Subroutine46 & 0xFFFF
    705          	if(len < 0)
   \                     ??CrossCallReturnLabel_159:
   \   0000AD   500C         JNC     ??MQTT_PacketUnSubscribe_5
    706          	{
    707          		MQTT_DeleteBuffer(mqttPacket);
   \   0000AF                ; Setup parameters for call to function MQTT_DeleteBuffer
   \   0000AF   AA..         MOV     R2,?V0 + 12
   \   0000B1   AB..         MOV     R3,?V0 + 13
   \   0000B3   12....       LCALL   ??MQTT_DeleteBuffer?relay
    708          		return 4;
   \   0000B6   7904         MOV     R1,#0x4
   \   0000B8   02....       LJMP    ??MQTT_PacketUnSubscribe_1 & 0xFFFF
    709          	}
    710          	else
    711          		mqttPacket->_len += len;
   \                     ??MQTT_PacketUnSubscribe_5:
   \   0000BB   12....       LCALL   ?Subroutine33 & 0xFFFF
   \                     ??CrossCallReturnLabel_53:
   \   0000BE   12....       LCALL   ?L_ADD_TO_X
    712          	
    713          /*************************************payload***********************************************/
    714          	
    715          	//payload----------------------pkt_id---------------------------------------------------
    716          	mqttPacket->_data[mqttPacket->_len++] = MOSQ_MSB(pkt_id);
   \   0000C1   12....       LCALL   ?Subroutine29 & 0xFFFF
   \                     ??CrossCallReturnLabel_46:
   \   0000C4   12....       LCALL   ?L_MOV_X
   \   0000C7   12....       LCALL   ?Subroutine70 & 0xFFFF
   \                     ??CrossCallReturnLabel_123:
   \   0000CA   12....       LCALL   ??Subroutine86_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_250:
   \   0000CD   12....       LCALL   ?L_MOV_X
   \   0000D0   8E82         MOV     DPL,R6
   \   0000D2   8F83         MOV     DPH,R7
   \   0000D4   78..         MOV     R0,#?V0 + 4
   \   0000D6   12....       LCALL   ?L_ADD_TO_X
    717          	mqttPacket->_data[mqttPacket->_len++] = MOSQ_LSB(pkt_id);
   \   0000D9   8E82         MOV     DPL,R6
   \   0000DB   8F83         MOV     DPH,R7
   \   0000DD   78..         MOV     R0,#?V0 + 4
   \   0000DF   12....       LCALL   ?L_MOV_X
   \   0000E2   12....       LCALL   ?Subroutine44 & 0xFFFF
   \                     ??CrossCallReturnLabel_77:
   \   0000E5   12....       LCALL   ??Subroutine87_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_238:
   \   0000E8   12....       LCALL   ?L_MOV_X
   \   0000EB   8E82         MOV     DPL,R6
   \   0000ED   8F83         MOV     DPH,R7
   \   0000EF   78..         MOV     R0,#?V0 + 4
   \   0000F1   12....       LCALL   ?L_ADD_TO_X
    718          	
    719          	//payload----------------------topic_name-----------------------------------------------
    720          	for(i = 0; i < topics_cnt; i++)
   \   0000F4   75..00       MOV     ?V0 + 2,#0x0
   \   0000F7   8052         SJMP    ??MQTT_PacketUnSubscribe_6
    721          	{
    722          		topic_len = strlen(topics[i]);
                 		                   ^
Warning[Pe167]: argument of type "signed char const *" is incompatible with
          parameter of type "char const *"
   \                     ??MQTT_PacketUnSubscribe_7:
   \   0000F9   12....       LCALL   ?Subroutine14 & 0xFFFF
    723          		mqttPacket->_data[mqttPacket->_len++] = MOSQ_MSB(topic_len);
   \                     ??CrossCallReturnLabel_167:
   \   0000FC   12....       LCALL   ?L_MOV_X
   \   0000FF   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_198:
   \   000102   12....       LCALL   ?L_MOV_X
   \   000105   8E82         MOV     DPL,R6
   \   000107   8F83         MOV     DPH,R7
   \   000109   78..         MOV     R0,#?V0 + 8
   \   00010B   12....       LCALL   ?L_ADD_TO_X
    724          		mqttPacket->_data[mqttPacket->_len++] = MOSQ_LSB(topic_len);
   \   00010E   8E82         MOV     DPL,R6
   \   000110   8F83         MOV     DPH,R7
   \   000112   78..         MOV     R0,#?V0 + 8
   \   000114   12....       LCALL   ?L_MOV_X
   \   000117   12....       LCALL   ?Subroutine49 & 0xFFFF
   \                     ??CrossCallReturnLabel_94:
   \   00011A   12....       LCALL   ??Subroutine80_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_191:
   \   00011D   12....       LCALL   ?L_MOV_X
   \   000120   8E82         MOV     DPL,R6
   \   000122   8F83         MOV     DPH,R7
   \   000124   78..         MOV     R0,#?V0 + 8
   \   000126   12....       LCALL   ?L_ADD_TO_X
    725          		
    726          		strncat((int8 *)mqttPacket->_data + mqttPacket->_len, topics[i], topic_len);
                 		        ^
Warning[Pe167]: argument of type "int8 *" is incompatible with parameter of
          type "char *"

  		strncat((int8 *)mqttPacket->_data + mqttPacket->_len, topics[i], topic_len);
  		                                                      ^
"I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\MqttKit.c",726  Warning[Pe167]: 
          argument of type "signed char const *" is incompatible with
          parameter of type "char const *"
   \   000129                ; Setup parameters for call to function strncat
   \   000129   85....       MOV     ?V0 + 8,?V0 + 4
   \   00012C   85....       MOV     ?V0 + 9,?V0 + 5
   \   00012F   78..         MOV     R0,#?V0 + 8
   \   000131   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000134   12....       LCALL   ?Subroutine21 & 0xFFFF
   \                     ??CrossCallReturnLabel_163:
   \   000137   12....       LCALL   ?L_MOV_X
   \   00013A   12....       LCALL   ?Subroutine48 & 0xFFFF
   \                     ??CrossCallReturnLabel_154:
   \   00013D   12....       LCALL   ?DEALLOC_XSTACK8
    727          		mqttPacket->_len += topic_len;
   \   000140   8E82         MOV     DPL,R6
   \   000142   8F83         MOV     DPH,R7
   \   000144   78..         MOV     R0,#?V0 + 4
   \   000146   12....       LCALL   ?L_ADD_TO_X
    728          	}
   \   000149   05..         INC     ?V0 + 2
   \                     ??MQTT_PacketUnSubscribe_6:
   \   00014B   E5..         MOV     A,?V0 + 2
   \   00014D   C3           CLR     C
   \   00014E   95..         SUBB    A,?V0 + 3
   \   000150   40A7         JC      ??MQTT_PacketUnSubscribe_7
    729          
    730          	return 0;
   \   000152   7900         MOV     R1,#0x0
   \                     ??MQTT_PacketUnSubscribe_1:
   \   000154   02....       LJMP    ??Subroutine81_0 & 0xFFFF
    731          
    732          }
    733          
    734          //==========================================================
    735          //	º¯ÊýÃû³Æ£º	MQTT_UnPacketUnSubscribe
    736          //
    737          //	º¯Êý¹¦ÄÜ£º	UnSubscribeµÄ»Ø¸´ÏûÏ¢½â°ü
    738          //
    739          //	Èë¿Ú²ÎÊý£º	rev_data£º½ÓÊÕµ½µÄÐÅÏ¢
    740          //
    741          //	·µ»Ø²ÎÊý£º	0-³É¹¦		ÆäËû-Ê§°Ü
    742          //
    743          //	ËµÃ÷£º		
    744          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    745          uint1 MQTT_UnPacketUnSubscribe(uint8 *rev_data)
   \                     MQTT_UnPacketUnSubscribe:
    746          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    747          	
    748          	uint1 result = 1;
   \   000004   7901         MOV     R1,#0x1
    749          
    750          	if(rev_data[2] == MOSQ_MSB(MQTT_UNSUBSCRIBE_ID) && rev_data[3] == MOSQ_LSB(MQTT_UNSUBSCRIBE_ID))
   \   000006   8A82         MOV     DPL,R2
   \   000008   8B83         MOV     DPH,R3
   \   00000A   A3           INC     DPTR
   \   00000B   A3           INC     DPTR
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   700D         JNZ     ??MQTT_UnPacketUnSubscribe_0
   \   00000F   8A82         MOV     DPL,R2
   \   000011   8B83         MOV     DPH,R3
   \   000013   A3           INC     DPTR
   \   000014   A3           INC     DPTR
   \   000015   A3           INC     DPTR
   \   000016   E0           MOVX    A,@DPTR
   \   000017   641E         XRL     A,#0x1e
   \   000019   7001         JNZ     ??MQTT_UnPacketUnSubscribe_0
    751          	{
    752          		result = 0;
   \   00001B   19           DEC     R1
    753          	}
    754          	
    755          	return result;
   \                     ??MQTT_UnPacketUnSubscribe_0:
   \   00001C   02....       LJMP    ?Subroutine4 & 0xFFFF
    756          
    757          }
    758          
    759          //==========================================================
    760          //	º¯ÊýÃû³Æ£º	MQTT_PacketPublish
    761          //
    762          //	º¯Êý¹¦ÄÜ£º	PulishÏûÏ¢×é°ü
    763          //
    764          //	Èë¿Ú²ÎÊý£º	pkt_id£ºpkt_id
    765          //				topic£º·¢²¼µÄtopic
    766          //				payload£ºÏûÏ¢Ìå
    767          //				payload_len£ºÏûÏ¢Ìå³¤¶È
    768          //				qos£ºÖØ·¢´ÎÊý
    769          //				retain£ºÀëÏßÏûÏ¢ÍÆËÍ
    770          //				own£º
    771          //				mqttPacket£º°üÖ¸Õë
    772          //
    773          //	·µ»Ø²ÎÊý£º	0-³É¹¦		ÆäËû-Ê§°Ü
    774          //
    775          //	ËµÃ÷£º		
    776          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    777          uint8 MQTT_PacketPublish(uint16 pkt_id, const int8 *topic,
   \                     MQTT_PacketPublish:
    778          						const int8 *payload, uint32 payload_len,
    779          						enum MqttQosLevel qos, int32 retain, int32 own,
    780          						MQTT_PACKET_STRUCTURE *mqttPacket)
    781          {
   \   000000   74E8         MOV     A,#-0x18
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 24
   \   000005                ; Auto size: 6
   \   000005   74FA         MOV     A,#-0x6
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   7404         MOV     A,#0x4
   \   00000C   12....       LCALL   ?XSTACK_DISP0_8
   \   00000F   EA           MOV     A,R2
   \   000010   F0           MOVX    @DPTR,A
   \   000011   A3           INC     DPTR
   \   000012   EB           MOV     A,R3
   \   000013   F0           MOVX    @DPTR,A
   \   000014   7402         MOV     A,#0x2
   \   000016   12....       LCALL   ?XSTACK_DISP0_8
   \   000019   EC           MOV     A,R4
   \   00001A   F0           MOVX    @DPTR,A
   \   00001B   A3           INC     DPTR
   \   00001C   ED           MOV     A,R5
   \   00001D   F0           MOVX    @DPTR,A
   \   00001E   7401         MOV     A,#0x1
   \   000020   12....       LCALL   ?XSTACK_DISP0_8
   \   000023   E9           MOV     A,R1
   \   000024   F0           MOVX    @DPTR,A
   \   000025   7420         MOV     A,#0x20
   \   000027   12....       LCALL   ?XSTACK_DISP0_8
   \   00002A   78..         MOV     R0,#?V0 + 0
   \   00002C   12....       LCALL   ?L_MOV_X
   \   00002F   7424         MOV     A,#0x24
   \   000031   12....       LCALL   ?XSTACK_DISP0_8
   \   000034   78..         MOV     R0,#?V0 + 8
   \   000036   12....       LCALL   ?L_MOV_X
    782          
    783          	uint32 total_len = 0, topic_len = 0;
    784          	int32 len = 0;
    785          	uint8 flags = 0;
    786          	
    787          	//pkt_id¼ì²é----------------------------------------------------------------------------
    788          	if(pkt_id == 0)
   \   000039   7404         MOV     A,#0x4
   \   00003B   12....       LCALL   ?XSTACK_DISP0_8
   \   00003E   12....       LCALL   ??Subroutine73_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_139:
   \   000041   7005         JNZ     ??MQTT_PacketPublish_0
    789          		return 1;
   \   000043   7901         MOV     R1,#0x1
   \   000045   02....       LJMP    ??MQTT_PacketPublish_1 & 0xFFFF
    790          	
    791          	//$dpÎªÏµÍ³ÉÏ´«Êý¾ÝµãµÄÖ¸Áî--------------------------------------------------------------
    792          	for(topic_len = 0; topic[topic_len] != '\0'; ++topic_len)
   \                     ??MQTT_PacketPublish_0:
   \   000048   90....       MOV     DPTR,#__Constant_0
   \   00004B   78..         MOV     R0,#?V0 + 4
   \   00004D   12....       LCALL   ?L_MOV_X
   \   000050   8008         SJMP    ??MQTT_PacketPublish_2
   \                     ??MQTT_PacketPublish_3:
   \   000052   90....       MOV     DPTR,#__Constant_1
   \   000055   78..         MOV     R0,#?V0 + 4
   \   000057   12....       LCALL   ?L_ADD_X
   \                     ??MQTT_PacketPublish_2:
   \   00005A   A8..         MOV     R0,?V0 + 4
   \   00005C   A9..         MOV     R1,?V0 + 5
   \   00005E   7402         MOV     A,#0x2
   \   000060   12....       LCALL   ?XSTACK_DISP0_8
   \   000063   E0           MOVX    A,@DPTR
   \   000064   28           ADD     A,R0
   \   000065   FA           MOV     R2,A
   \   000066   12....       LCALL   ??Subroutine85_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_217:
   \   000069   601D         JZ      ??MQTT_PacketPublish_4
    793          	{
    794          		if((topic[topic_len] == '#') || (topic[topic_len] == '+'))
   \   00006B   7402         MOV     A,#0x2
   \   00006D   12....       LCALL   ?XSTACK_DISP0_8
   \   000070   12....       LCALL   ?Subroutine28 & 0xFFFF
   \                     ??CrossCallReturnLabel_218:
   \   000073   6423         XRL     A,#0x23
   \   000075   600C         JZ      ??MQTT_PacketPublish_5
   \   000077   7402         MOV     A,#0x2
   \   000079   12....       LCALL   ?XSTACK_DISP0_8
   \   00007C   12....       LCALL   ?Subroutine28 & 0xFFFF
   \                     ??CrossCallReturnLabel_219:
   \   00007F   642B         XRL     A,#0x2b
   \   000081   70CF         JNZ     ??MQTT_PacketPublish_3
    795          			return 2;
   \                     ??MQTT_PacketPublish_5:
   \   000083   7902         MOV     R1,#0x2
   \   000085   02....       LJMP    ??MQTT_PacketPublish_1 & 0xFFFF
    796          	}
    797          	
    798          	//PublishÏûÏ¢---------------------------------------------------------------------------
    799          	flags |= MQTT_PKT_PUBLISH << 4;
   \                     ??MQTT_PacketPublish_4:
   \   000088   85..82       MOV     DPL,?XSP + 0
   \   00008B   85..83       MOV     DPH,?XSP + 1
   \   00008E   7430         MOV     A,#0x30
   \   000090   F0           MOVX    @DPTR,A
    800          	
    801          	//retain±êÖ¾----------------------------------------------------------------------------
    802          	if(retain)
   \   000091   E5..         MOV     A,?V0 + 8
   \   000093   45..         ORL     A,?V0 + 9
   \   000095   45..         ORL     A,?V0 + 10
   \   000097   45..         ORL     A,?V0 + 11
   \   000099   6003         JZ      ??MQTT_PacketPublish_6
    803          		flags |= 0x01;
   \   00009B   7431         MOV     A,#0x31
   \   00009D   F0           MOVX    @DPTR,A
    804          	
    805          	//×Ü³¤¶È--------------------------------------------------------------------------------
    806          	total_len = topic_len + payload_len + 2;
   \                     ??MQTT_PacketPublish_6:
   \   00009E   88..         MOV     ?V0 + 8,R0
   \   0000A0   89..         MOV     ?V0 + 9,R1
   \   0000A2   85....       MOV     ?V0 + 10,?V0 + 6
   \   0000A5   85....       MOV     ?V0 + 11,?V0 + 7
   \   0000A8   78..         MOV     R0,#?V0 + 8
   \   0000AA   79..         MOV     R1,#?V0 + 0
   \   0000AC   12....       LCALL   ?L_ADD
   \   0000AF   90....       MOV     DPTR,#__Constant_2
   \   0000B2   78..         MOV     R0,#?V0 + 8
   \   0000B4   12....       LCALL   ?L_ADD_X
    807          	
    808          	//qos¼¶±ð--Ö÷ÒªÓÃÓÚPUBLISH£¨·¢²¼Ì¬£©ÏûÏ¢µÄ£¬±£Ö¤ÏûÏ¢´«µÝµÄ´ÎÊý-----------------------------
    809          	switch(qos)
   \   0000B7   7401         MOV     A,#0x1
   \   0000B9   12....       LCALL   ?XSTACK_DISP0_8
   \   0000BC   E0           MOVX    A,@DPTR
   \   0000BD   601A         JZ      ??MQTT_PacketPublish_7
   \   0000BF   14           DEC     A
   \   0000C0   6005         JZ      ??MQTT_PacketPublish_8
   \   0000C2   14           DEC     A
   \   0000C3   604E         JZ      ??MQTT_PacketPublish_9
   \   0000C5   8057         SJMP    ??MQTT_PacketPublish_10
    810          	{
    811          		case MQTT_QOS_LEVEL0:
    812          			flags |= MQTT_CONNECT_WILL_QOS0;	//×î¶àÒ»´Î
    813          		break;
    814          		
    815          		case MQTT_QOS_LEVEL1:
    816          			flags |= 0x02;						//×îÉÙÒ»´Î
   \                     ??MQTT_PacketPublish_8:
   \   0000C7   85..82       MOV     DPL,?XSP + 0
   \   0000CA   85..83       MOV     DPH,?XSP + 1
   \   0000CD   E0           MOVX    A,@DPTR
   \   0000CE   D2E1         SETB    0xE0 /* A   */.1
   \                     ??MQTT_PacketPublish_11:
   \   0000D0   F0           MOVX    @DPTR,A
    817          			total_len += 2;
   \   0000D1   90....       MOV     DPTR,#__Constant_2
   \   0000D4   78..         MOV     R0,#?V0 + 8
   \   0000D6   12....       LCALL   ?L_ADD_X
    818          		break;
    819          		
    820          		case MQTT_QOS_LEVEL2:
    821          			flags |= 0x04;						//Ö»ÓÐÒ»´Î
    822          			total_len += 2;
    823          		break;
    824          		
    825          		default:
    826          		return 3;
    827          	}
    828          	
    829          	//·ÖÅäÄÚ´æ------------------------------------------------------------------------------
    830          	MQTT_NewBuffer(mqttPacket, total_len + 3);
   \                     ??MQTT_PacketPublish_7:
   \   0000D9                ; Setup parameters for call to function MQTT_NewBuffer
   \   0000D9   85....       MOV     ?V0 + 12,?V0 + 8
   \   0000DC   85....       MOV     ?V0 + 13,?V0 + 9
   \   0000DF   85....       MOV     ?V0 + 14,?V0 + 10
   \   0000E2   85....       MOV     ?V0 + 15,?V0 + 11
   \   0000E5   90....       MOV     DPTR,#__Constant_3
   \   0000E8   78..         MOV     R0,#?V0 + 12
   \   0000EA   12....       LCALL   ?L_ADD_X
   \   0000ED   78..         MOV     R0,#?V0 + 12
   \   0000EF   12....       LCALL   ?PUSH_XSTACK_I_FOUR
   \   0000F2   7430         MOV     A,#0x30
   \   0000F4   12....       LCALL   ?XSTACK_DISP0_8
   \   0000F7   E0           MOVX    A,@DPTR
   \   0000F8   FA           MOV     R2,A
   \   0000F9   A3           INC     DPTR
   \   0000FA   E0           MOVX    A,@DPTR
   \   0000FB   12....       LCALL   ??Subroutine83_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_211:
   \   0000FE   12....       LCALL   ?DEALLOC_XSTACK8
    831          	if(mqttPacket->_data == NULL)
   \   000101   742C         MOV     A,#0x2c
   \   000103   12....       LCALL   ?XSTACK_DISP0_8
   \   000106   12....       LCALL   ?Subroutine22 & 0xFFFF
   \                     ??CrossCallReturnLabel_30:
   \   000109   12....       LCALL   ??Subroutine73_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_140:
   \   00010C   7015         JNZ     ??MQTT_PacketPublish_12
    832          		return 4;
   \   00010E   7904         MOV     R1,#0x4
   \   000110   02....       LJMP    ??MQTT_PacketPublish_1 & 0xFFFF
   \                     ??MQTT_PacketPublish_9:
   \   000113   85..82       MOV     DPL,?XSP + 0
   \   000116   85..83       MOV     DPH,?XSP + 1
   \   000119   E0           MOVX    A,@DPTR
   \   00011A   D2E2         SETB    0xE0 /* A   */.2
   \   00011C   80B2         SJMP    ??MQTT_PacketPublish_11
   \                     ??MQTT_PacketPublish_10:
   \   00011E   7903         MOV     R1,#0x3
   \   000120   02....       LJMP    ??MQTT_PacketPublish_1 & 0xFFFF
    833          		
    834          	memset(mqttPacket->_data, 0, total_len + 3);
   \                     ??MQTT_PacketPublish_12:
   \   000123                ; Setup parameters for call to function memset
   \   000123   85....       MOV     ?V0 + 12,?V0 + 8
   \   000126   85....       MOV     ?V0 + 13,?V0 + 9
   \   000129   E5..         MOV     A,?V0 + 12
   \   00012B   2403         ADD     A,#0x3
   \   00012D   F5..         MOV     ?V0 + 12,A
   \   00012F   E5..         MOV     A,?V0 + 13
   \   000131   3400         ADDC    A,#0x0
   \   000133   F5..         MOV     ?V0 + 13,A
   \   000135   78..         MOV     R0,#?V0 + 12
   \   000137   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00013A   7C00         MOV     R4,#0x0
   \   00013C   7D00         MOV     R5,#0x0
   \   00013E   742E         MOV     A,#0x2e
   \   000140   12....       LCALL   ?XSTACK_DISP0_8
   \   000143   12....       LCALL   ?Subroutine18 & 0xFFFF
   \                     ??CrossCallReturnLabel_21:
   \   000146   12....       LCALL   ??Subroutine82_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_204:
   \   000149   12....       LCALL   ?DEALLOC_XSTACK8
    835          	
    836          /*************************************¹Ì¶¨Í·²¿***********************************************/
    837          	
    838          	//¹Ì¶¨Í·²¿----------------------Í·²¿ÏûÏ¢-------------------------------------------------
    839          	mqttPacket->_data[mqttPacket->_len++] = flags;
   \   00014C   742C         MOV     A,#0x2c
   \   00014E   12....       LCALL   ?XSTACK_DISP0_8
   \   000151   12....       LCALL   ?Subroutine19 & 0xFFFF
   \                     ??CrossCallReturnLabel_24:
   \   000154   742C         MOV     A,#0x2c
   \   000156   12....       LCALL   ?XSTACK_DISP0_8
   \   000159   12....       LCALL   ?Subroutine18 & 0xFFFF
   \                     ??CrossCallReturnLabel_22:
   \   00015C   85..82       MOV     DPL,?XSP + 0
   \   00015F   85..83       MOV     DPH,?XSP + 1
   \   000162   E0           MOVX    A,@DPTR
   \   000163   C0E0         PUSH    A
   \   000165   8E82         MOV     DPL,R6
   \   000167   8F83         MOV     DPH,R7
   \   000169   78..         MOV     R0,#?V0 + 12
   \   00016B   12....       LCALL   ?L_MOV_X
   \   00016E   EA           MOV     A,R2
   \   00016F   25..         ADD     A,?V0 + 12
   \   000171   F582         MOV     DPL,A
   \   000173   EB           MOV     A,R3
   \   000174   35..         ADDC    A,?V0 + 13
   \   000176   F583         MOV     DPH,A
   \   000178   D0E0         POP     A
   \   00017A   F0           MOVX    @DPTR,A
   \   00017B   90....       MOV     DPTR,#__Constant_1
   \   00017E   78..         MOV     R0,#?V0 + 12
   \   000180   12....       LCALL   ?L_MOV_X
   \   000183   8E82         MOV     DPL,R6
   \   000185   8F83         MOV     DPH,R7
   \   000187   78..         MOV     R0,#?V0 + 12
   \   000189   12....       LCALL   ?L_ADD_TO_X
    840          	
    841          	//¹Ì¶¨Í·²¿----------------------Ê£Óà³¤¶ÈÖµ-----------------------------------------------
    842          	len = MQTT_DumpLength(total_len, mqttPacket->_data + mqttPacket->_len);
   \   00018C                ; Setup parameters for call to function MQTT_DumpLength
   \   00018C   8E82         MOV     DPL,R6
   \   00018E   8F83         MOV     DPH,R7
   \   000190   78..         MOV     R0,#?V0 + 12
   \   000192   12....       LCALL   ?L_MOV_X
   \   000195   EA           MOV     A,R2
   \   000196   25..         ADD     A,?V0 + 12
   \   000198   FC           MOV     R4,A
   \   000199   EB           MOV     A,R3
   \   00019A   35..         ADDC    A,?V0 + 13
   \   00019C   FD           MOV     R5,A
   \   00019D   AA..         MOV     R2,?V0 + 8
   \   00019F   AB..         MOV     R3,?V0 + 9
   \   0001A1   12....       LCALL   ??MQTT_DumpLength?relay
   \   0001A4   8A..         MOV     ?V0 + 8,R2
   \   0001A6   8B..         MOV     ?V0 + 9,R3
   \   0001A8   8C..         MOV     ?V0 + 10,R4
   \   0001AA   8D..         MOV     ?V0 + 11,R5
    843          	if(len < 0)
   \   0001AC   90....       MOV     DPTR,#__Constant_0
   \   0001AF   78..         MOV     R0,#?V0 + 8
   \   0001B1   12....       LCALL   ?SL_GE_X
   \   0001B4   742C         MOV     A,#0x2c
   \   0001B6   400E         JC      ??MQTT_PacketPublish_13
    844          	{
    845          		MQTT_DeleteBuffer(mqttPacket);
   \   0001B8                ; Setup parameters for call to function MQTT_DeleteBuffer
   \   0001B8   12....       LCALL   ?XSTACK_DISP0_8
   \   0001BB   12....       LCALL   ??Subroutine72_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_125:
   \   0001BE   12....       LCALL   ??MQTT_DeleteBuffer?relay
    846          		return 5;
   \   0001C1   7905         MOV     R1,#0x5
   \   0001C3   02....       LJMP    ??MQTT_PacketPublish_1 & 0xFFFF
    847          	}
    848          	else
    849          		mqttPacket->_len += len;
   \                     ??MQTT_PacketPublish_13:
   \   0001C6   12....       LCALL   ?XSTACK_DISP0_8
   \   0001C9   12....       LCALL   ?Subroutine19 & 0xFFFF
   \                     ??CrossCallReturnLabel_25:
   \   0001CC   8E82         MOV     DPL,R6
   \   0001CE   8F83         MOV     DPH,R7
   \   0001D0   78..         MOV     R0,#?V0 + 8
   \   0001D2   12....       LCALL   ?L_ADD_TO_X
    850          	
    851          /*************************************¿É±äÍ·²¿***********************************************/
    852          	
    853          	//¿É±äÍ·²¿----------------------Ð´Èëtopic³¤¶È¡¢topic-------------------------------------
    854          	mqttPacket->_data[mqttPacket->_len++] = MOSQ_MSB(topic_len);
   \   0001D5   742C         MOV     A,#0x2c
   \   0001D7   12....       LCALL   ?XSTACK_DISP0_8
   \   0001DA   12....       LCALL   ?Subroutine22 & 0xFFFF
   \                     ??CrossCallReturnLabel_31:
   \   0001DD   12....       LCALL   ??Subroutine78_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_168:
   \   0001E0   12....       LCALL   ?L_MOV_X
   \   0001E3   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_199:
   \   0001E6   12....       LCALL   ?L_MOV_X
   \   0001E9   8E82         MOV     DPL,R6
   \   0001EB   8F83         MOV     DPH,R7
   \   0001ED   78..         MOV     R0,#?V0 + 8
   \   0001EF   12....       LCALL   ?L_ADD_TO_X
    855          	mqttPacket->_data[mqttPacket->_len++] = MOSQ_LSB(topic_len);
   \   0001F2   8E82         MOV     DPL,R6
   \   0001F4   8F83         MOV     DPH,R7
   \   0001F6   78..         MOV     R0,#?V0 + 8
   \   0001F8   12....       LCALL   ?L_MOV_X
   \   0001FB   12....       LCALL   ?Subroutine49 & 0xFFFF
   \                     ??CrossCallReturnLabel_95:
   \   0001FE   12....       LCALL   ??Subroutine80_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_192:
   \   000201   12....       LCALL   ?L_MOV_X
   \   000204   8E82         MOV     DPL,R6
   \   000206   8F83         MOV     DPH,R7
   \   000208   78..         MOV     R0,#?V0 + 8
   \   00020A   12....       LCALL   ?L_ADD_TO_X
    856          	
    857          	strncat((int8 *)mqttPacket->_data + mqttPacket->_len, topic, topic_len);
                 	        ^
Warning[Pe167]: argument of type "int8 *" is incompatible with parameter of
          type "char *"

  	strncat((int8 *)mqttPacket->_data + mqttPacket->_len, topic, topic_len);
  	                                                      ^
"I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\MqttKit.c",857  Warning[Pe167]: 
          argument of type "signed char const *" is incompatible with
          parameter of type "char const *"
   \   00020D                ; Setup parameters for call to function strncat
   \   00020D   85....       MOV     ?V0 + 8,?V0 + 4
   \   000210   85....       MOV     ?V0 + 9,?V0 + 5
   \   000213   78..         MOV     R0,#?V0 + 8
   \   000215   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000218   7404         MOV     A,#0x4
   \   00021A   12....       LCALL   ?XSTACK_DISP0_8
   \   00021D   12....       LCALL   ??Subroutine76_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_161:
   \   000220   12....       LCALL   ?L_MOV_X
   \   000223   12....       LCALL   ?Subroutine48 & 0xFFFF
   \                     ??CrossCallReturnLabel_155:
   \   000226   12....       LCALL   ?DEALLOC_XSTACK8
    858          	mqttPacket->_len += topic_len;
   \   000229   8E82         MOV     DPL,R6
   \   00022B   8F83         MOV     DPH,R7
   \   00022D   78..         MOV     R0,#?V0 + 4
   \   00022F   12....       LCALL   ?L_ADD_TO_X
    859          	if(qos != MQTT_QOS_LEVEL0)
   \   000232   7401         MOV     A,#0x1
   \   000234   12....       LCALL   ?XSTACK_DISP0_8
   \   000237   E0           MOVX    A,@DPTR
   \   000238   605B         JZ      ??MQTT_PacketPublish_14
    860          	{
    861          		mqttPacket->_data[mqttPacket->_len++] = MOSQ_MSB(pkt_id);
   \   00023A   742C         MOV     A,#0x2c
   \   00023C   12....       LCALL   ?XSTACK_DISP0_8
   \   00023F   12....       LCALL   ?Subroutine18 & 0xFFFF
   \                     ??CrossCallReturnLabel_23:
   \   000242   742C         MOV     A,#0x2c
   \   000244   12....       LCALL   ?XSTACK_DISP0_8
   \   000247   12....       LCALL   ?Subroutine19 & 0xFFFF
   \                     ??CrossCallReturnLabel_26:
   \   00024A   7404         MOV     A,#0x4
   \   00024C   12....       LCALL   ?XSTACK_DISP0_8
   \   00024F   A3           INC     DPTR
   \   000250   E0           MOVX    A,@DPTR
   \   000251   C0E0         PUSH    A
   \   000253   8E82         MOV     DPL,R6
   \   000255   8F83         MOV     DPH,R7
   \   000257   78..         MOV     R0,#?V0 + 4
   \   000259   12....       LCALL   ?L_MOV_X
   \   00025C   12....       LCALL   ?Subroutine45 & 0xFFFF
   \                     ??CrossCallReturnLabel_87:
   \   00025F   D0E0         POP     A
   \   000261   12....       LCALL   ??Subroutine87_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_239:
   \   000264   12....       LCALL   ?L_MOV_X
   \   000267   8E82         MOV     DPL,R6
   \   000269   8F83         MOV     DPH,R7
   \   00026B   78..         MOV     R0,#?V0 + 4
   \   00026D   12....       LCALL   ?L_ADD_TO_X
    862          		mqttPacket->_data[mqttPacket->_len++] = MOSQ_LSB(pkt_id);
   \   000270   7404         MOV     A,#0x4
   \   000272   12....       LCALL   ?XSTACK_DISP0_8
   \   000275   E0           MOVX    A,@DPTR
   \   000276   C0E0         PUSH    A
   \   000278   8E82         MOV     DPL,R6
   \   00027A   8F83         MOV     DPH,R7
   \   00027C   78..         MOV     R0,#?V0 + 4
   \   00027E   12....       LCALL   ?L_MOV_X
   \   000281   12....       LCALL   ?Subroutine45 & 0xFFFF
    863          	}
   \                     ??CrossCallReturnLabel_88:
   \   000284   D0E0         POP     A
   \   000286   12....       LCALL   ??Subroutine87_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_240:
   \   000289   12....       LCALL   ?L_MOV_X
   \   00028C   8E82         MOV     DPL,R6
   \   00028E   8F83         MOV     DPH,R7
   \   000290   78..         MOV     R0,#?V0 + 4
   \   000292   12....       LCALL   ?L_ADD_TO_X
    864          	
    865          	//¿É±äÍ·²¿----------------------Ð´Èëpayload----------------------------------------------
    866          	if(payload != NULL)
   \                     ??MQTT_PacketPublish_14:
   \   000295   741E         MOV     A,#0x1e
   \   000297   12....       LCALL   ?XSTACK_DISP0_8
   \   00029A   12....       LCALL   ??Subroutine73_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_141:
   \   00029D   603F         JZ      ??MQTT_PacketPublish_15
    867          	{
    868          		strncat((int8 *)mqttPacket->_data + mqttPacket->_len, payload, payload_len);
                 		        ^
Warning[Pe167]: argument of type "int8 *" is incompatible with parameter of
          type "char *"

  		strncat((int8 *)mqttPacket->_data + mqttPacket->_len, payload, payload_len);
  		                                                      ^
"I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\MqttKit.c",868  Warning[Pe167]: 
          argument of type "signed char const *" is incompatible with
          parameter of type "char const *"
   \   00029F   742C         MOV     A,#0x2c
   \   0002A1   12....       LCALL   ?XSTACK_DISP0_8
   \   0002A4   12....       LCALL   ?Subroutine19 & 0xFFFF
   \                     ??CrossCallReturnLabel_27:
   \   0002A7                ; Setup parameters for call to function strncat
   \   0002A7   85....       MOV     ?V0 + 4,?V0 + 0
   \   0002AA   85....       MOV     ?V0 + 5,?V0 + 1
   \   0002AD   78..         MOV     R0,#?V0 + 4
   \   0002AF   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0002B2   7420         MOV     A,#0x20
   \   0002B4   12....       LCALL   ?XSTACK_DISP0_8
   \   0002B7   12....       LCALL   ?Subroutine61 & 0xFFFF
   \                     ??CrossCallReturnLabel_164:
   \   0002BA   78..         MOV     R0,#?V0 + 4
   \   0002BC   12....       LCALL   ?L_MOV_X
   \   0002BF   742E         MOV     A,#0x2e
   \   0002C1   12....       LCALL   ?XSTACK_DISP0_8
   \   0002C4   12....       LCALL   ?Subroutine22 & 0xFFFF
   \                     ??CrossCallReturnLabel_32:
   \   0002C7   E0           MOVX    A,@DPTR
   \   0002C8   25..         ADD     A,?V0 + 4
   \   0002CA   FA           MOV     R2,A
   \   0002CB   A3           INC     DPTR
   \   0002CC   E0           MOVX    A,@DPTR
   \   0002CD   35..         ADDC    A,?V0 + 5
   \   0002CF   12....       LCALL   ??Subroutine74_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_157:
   \   0002D2   12....       LCALL   ?DEALLOC_XSTACK8
    869          		mqttPacket->_len += payload_len;
   \   0002D5   8E82         MOV     DPL,R6
   \   0002D7   8F83         MOV     DPH,R7
   \   0002D9   78..         MOV     R0,#?V0 + 0
   \   0002DB   12....       LCALL   ?L_ADD_TO_X
    870          	}
    871          	
    872          	return 0;
   \                     ??MQTT_PacketPublish_15:
   \   0002DE   7900         MOV     R1,#0x0
   \                     ??MQTT_PacketPublish_1:
   \   0002E0   7406         MOV     A,#0x6
   \   0002E2                REQUIRE ?Subroutine2
   \   0002E2                ; // Fall through to label ?Subroutine2
    873          
    874          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine83_0:
   \   000000   FB           MOV     R3,A
   \   000001                REQUIRE ??Subroutine84_0
   \   000001                ; // Fall through to label ??Subroutine84_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine28:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   28           ADD     A,R0
   \   000002                REQUIRE ??Subroutine85_0
   \   000002                ; // Fall through to label ??Subroutine85_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine85_0:
   \   000000   A3           INC     DPTR
   \   000001   E0           MOVX    A,@DPTR
   \   000002   39           ADDC    A,R1
   \   000003   8A82         MOV     DPL,R2
   \   000005   F583         MOV     DPH,A
   \   000007   E0           MOVX    A,@DPTR
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine19:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   2402         ADD     A,#0x2
   \   000003   FE           MOV     R6,A
   \   000004   A3           INC     DPTR
   \   000005   E0           MOVX    A,@DPTR
   \   000006   3400         ADDC    A,#0x0
   \   000008   FF           MOV     R7,A
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine18:
   \   000000   12....       LCALL   ?Subroutine62 & 0xFFFF
   \                     ??CrossCallReturnLabel_108:
   \   000003   12....       LCALL   ??Subroutine72_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_126:
   \   000006   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine22:
   \   000000   12....       LCALL   ?Subroutine62 & 0xFFFF
   \                     ??CrossCallReturnLabel_109:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine62:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   F8           MOV     R0,A
   \   000002   A3           INC     DPTR
   \   000003   E0           MOVX    A,@DPTR
   \   000004   F583         MOV     DPH,A
   \   000006   8882         MOV     DPL,R0
   \   000008   22           RET
    875          
    876          //==========================================================
    877          //	º¯ÊýÃû³Æ£º	MQTT_UnPacketPublish
    878          //
    879          //	º¯Êý¹¦ÄÜ£º	PublishÏûÏ¢½â°ü
    880          //
    881          //	Èë¿Ú²ÎÊý£º	flags£ºMQTTÏà¹Ø±êÖ¾ÐÅÏ¢
    882          //				pkt£ºÖ¸Ïò¿É±äÍ·²¿
    883          //				size£º¹Ì¶¨Í·²¿ÖÐµÄÊ£Óà³¤¶ÈÐÅÏ¢
    884          //
    885          //	·µ»Ø²ÎÊý£º	0-³É¹¦		ÆäËû-Ê§°ÜÔ­Òò
    886          //
    887          //	ËµÃ÷£º		
    888          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    889          uint8 MQTT_UnPacketPublish(uint8 *rev_data, int8 *topic, uint16 *topic_len, int8 *payload, uint16 *payload_len, uint8 *qos, uint16 *pkt_id)
   \                     MQTT_UnPacketPublish:
    890          {
   \   000000   74E8         MOV     A,#-0x18
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 24
   \   000005                ; Auto size: 4
   \   000005   74FC         MOV     A,#-0x4
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   8A..         MOV     ?V0 + 0,R2
   \   00000C   8B..         MOV     ?V0 + 1,R3
   \   00000E   8C..         MOV     ?V0 + 2,R4
   \   000010   8D..         MOV     ?V0 + 3,R5
   \   000012   741C         MOV     A,#0x1c
   \   000014   12....       LCALL   ?XSTACK_DISP0_8
   \   000017   E0           MOVX    A,@DPTR
   \   000018   FE           MOV     R6,A
   \   000019   A3           INC     DPTR
   \   00001A   E0           MOVX    A,@DPTR
   \   00001B   FF           MOV     R7,A
   \   00001C   741E         MOV     A,#0x1e
   \   00001E   12....       LCALL   ?XSTACK_DISP0_8
   \   000021   E0           MOVX    A,@DPTR
   \   000022   F5..         MOV     ?V0 + 12,A
   \   000024   A3           INC     DPTR
   \   000025   E0           MOVX    A,@DPTR
   \   000026   F5..         MOV     ?V0 + 13,A
   \   000028   7420         MOV     A,#0x20
   \   00002A   12....       LCALL   ?XSTACK_DISP0_8
   \   00002D   E0           MOVX    A,@DPTR
   \   00002E   F5..         MOV     ?V0 + 10,A
   \   000030   A3           INC     DPTR
   \   000031   E0           MOVX    A,@DPTR
   \   000032   F5..         MOV     ?V0 + 11,A
   \   000034   7422         MOV     A,#0x22
   \   000036   12....       LCALL   ?XSTACK_DISP0_8
   \   000039   E0           MOVX    A,@DPTR
   \   00003A   F5..         MOV     ?V0 + 14,A
   \   00003C   A3           INC     DPTR
   \   00003D   E0           MOVX    A,@DPTR
   \   00003E   F5..         MOV     ?V0 + 15,A
    891          	
    892          	const int8 flags = rev_data[0] & 0x0F;
   \   000040   8A82         MOV     DPL,R2
   \   000042   8B83         MOV     DPH,R3
   \   000044   E0           MOVX    A,@DPTR
   \   000045   540F         ANL     A,#0xf
   \   000047   F5..         MOV     ?V0 + 8,A
    893          	uint8 *msgPtr;
    894          	uint32 remain_len = 0;
   \   000049   90....       MOV     DPTR,#__Constant_0
   \   00004C   12....       LCALL   ?XLOAD_R2345
   \   00004F   85..82       MOV     DPL,?XSP + 0
   \   000052   85..83       MOV     DPH,?XSP + 1
   \   000055   12....       LCALL   ?XSTORE_R2345
    895          
    896          	const int8 dup = flags & 0x08;
   \   000058   7408         MOV     A,#0x8
   \   00005A   55..         ANL     A,?V0 + 8
   \   00005C   F5..         MOV     ?V0 + 9,A
    897          
    898          	*qos = (flags & 0x06) >> 1;
   \   00005E   E5..         MOV     A,?V0 + 8
   \   000060   C3           CLR     C
   \   000061   13           RRC     A
   \   000062   5403         ANL     A,#0x3
   \   000064   85..82       MOV     DPL,?V0 + 14
   \   000067   85..83       MOV     DPH,?V0 + 15
   \   00006A   F0           MOVX    @DPTR,A
    899          	
    900          	msgPtr = rev_data + MQTT_ReadLength(rev_data + 1, 4, &remain_len) + 1;
   \   00006B                ; Setup parameters for call to function MQTT_ReadLength
   \   00006B   90....       MOV     DPTR,#__Constant_4
   \   00006E   12....       LCALL   ?PUSH_XSTACK8_X_FOUR
   \   000071   7404         MOV     A,#0x4
   \   000073   12....       LCALL   ?XSTACK_DISP0_8
   \   000076   AC82         MOV     R4,DPL
   \   000078   AD83         MOV     R5,DPH
   \   00007A   85..82       MOV     DPL,?V0 + 0
   \   00007D   85..83       MOV     DPH,?V0 + 1
   \   000080   A3           INC     DPTR
   \   000081   AA82         MOV     R2,DPL
   \   000083   AB83         MOV     R3,DPH
   \   000085   12....       LCALL   ??MQTT_ReadLength?relay
   \   000088   7404         MOV     A,#0x4
   \   00008A   12....       LCALL   ?DEALLOC_XSTACK8
   \   00008D   8A..         MOV     ?V0 + 4,R2
   \   00008F   8B..         MOV     ?V0 + 5,R3
   \   000091   E5..         MOV     A,?V0 + 0
   \   000093   25..         ADD     A,?V0 + 4
   \   000095   F582         MOV     DPL,A
   \   000097   E5..         MOV     A,?V0 + 1
   \   000099   35..         ADDC    A,?V0 + 5
   \   00009B   F583         MOV     DPH,A
   \   00009D   A3           INC     DPTR
   \   00009E   8582..       MOV     ?V0 + 0,DPL
   \   0000A1   8583..       MOV     ?V0 + 1,DPH
    901          	
    902          	if(remain_len < 2 || flags & 0x01)							//retain
   \   0000A4   85..82       MOV     DPL,?XSP + 0
   \   0000A7   85..83       MOV     DPH,?XSP + 1
   \   0000AA   C082         PUSH    DPL
   \   0000AC   C083         PUSH    DPH
   \   0000AE   90....       MOV     DPTR,#__Constant_2
   \   0000B1   78..         MOV     R0,#?V0 + 4
   \   0000B3   12....       LCALL   ?L_MOV_X
   \   0000B6   D083         POP     DPH
   \   0000B8   D082         POP     DPL
   \   0000BA   78..         MOV     R0,#?V0 + 4
   \   0000BC   12....       LCALL   ?UL_GT_X
   \   0000BF   4006         JC      ??MQTT_UnPacketPublish_0
   \   0000C1   E5..         MOV     A,?V0 + 8
   \   0000C3   A2E0         MOV     C,0xE0 /* A   */.0
   \   0000C5   5005         JNC     ??MQTT_UnPacketPublish_1
    903          		return 255;
   \                     ??MQTT_UnPacketPublish_0:
   \   0000C7   79FF         MOV     R1,#-0x1
   \   0000C9   02....       LJMP    ??MQTT_UnPacketPublish_2 & 0xFFFF
    904          	
    905          	*topic_len = (uint16)msgPtr[0] << 8 | msgPtr[1];
   \                     ??MQTT_UnPacketPublish_1:
   \   0000CC   85..82       MOV     DPL,?V0 + 0
   \   0000CF   85..83       MOV     DPH,?V0 + 1
   \   0000D2   E0           MOVX    A,@DPTR
   \   0000D3   F9           MOV     R1,A
   \   0000D4   A3           INC     DPTR
   \   0000D5   E0           MOVX    A,@DPTR
   \   0000D6   F8           MOV     R0,A
   \   0000D7   8E82         MOV     DPL,R6
   \   0000D9   8F83         MOV     DPH,R7
   \   0000DB   F0           MOVX    @DPTR,A
   \   0000DC   A3           INC     DPTR
   \   0000DD   E9           MOV     A,R1
   \   0000DE   F0           MOVX    @DPTR,A
    906          	if(remain_len < *topic_len + 2)
   \   0000DF   85..82       MOV     DPL,?XSP + 0
   \   0000E2   85..83       MOV     DPH,?XSP + 1
   \   0000E5   E8           MOV     A,R0
   \   0000E6   2402         ADD     A,#0x2
   \   0000E8   F5..         MOV     ?V0 + 4,A
   \   0000EA   E9           MOV     A,R1
   \   0000EB   3400         ADDC    A,#0x0
   \   0000ED   F5..         MOV     ?V0 + 5,A
   \   0000EF   E4           CLR     A
   \   0000F0   F5..         MOV     ?V0 + 6,A
   \   0000F2   F5..         MOV     ?V0 + 7,A
   \   0000F4   78..         MOV     R0,#?V0 + 4
   \   0000F6   12....       LCALL   ?UL_GT_X
   \   0000F9   40CC         JC      ??MQTT_UnPacketPublish_0
    907          		return 255;
    908          	
    909          	if(strstr((int8 *)msgPtr + 2, CMD_TOPIC_PREFIX) != NULL)	//Èç¹ûÊÇÃüÁîÏÂ·¢
                 	          ^
Warning[Pe167]: argument of type "int8 *" is incompatible with parameter of
          type "char const *"
   \   0000FB                ; Setup parameters for call to function strstr
   \   0000FB   7C..         MOV     R4,#`?<Constant "$creq">` & 0xff
   \   0000FD   7D..         MOV     R5,#(`?<Constant "$creq">` >> 8) & 0xff
   \   0000FF   12....       LCALL   ?Subroutine40 & 0xFFFF
   \                     ??CrossCallReturnLabel_69:
   \   000102   12....       LCALL   ??strstr?relay
   \   000105   8B..         MOV     ?V0 + 5,R3
   \   000107   EA           MOV     A,R2
   \   000108   45..         ORL     A,?V0 + 5
   \   00010A   6005         JZ      ??MQTT_UnPacketPublish_3
    910          		return MQTT_PKT_CMD;
   \   00010C   790F         MOV     R1,#0xf
   \   00010E   02....       LJMP    ??MQTT_UnPacketPublish_2 & 0xFFFF
    911          	
    912          	switch(*qos)
   \                     ??MQTT_UnPacketPublish_3:
   \   000111   85..82       MOV     DPL,?V0 + 14
   \   000114   85..83       MOV     DPH,?V0 + 15
   \   000117   E0           MOVX    A,@DPTR
   \   000118   600E         JZ      ??MQTT_UnPacketPublish_4
   \   00011A   14           DEC     A
   \   00011B   7003         JNZ     $+5
   \   00011D   02....       LJMP    ??MQTT_UnPacketPublish_5 & 0xFFFF
   \   000120   14           DEC     A
   \   000121   7003         JNZ     $+5
   \   000123   02....       LJMP    ??MQTT_UnPacketPublish_5 & 0xFFFF
   \   000126   809F         SJMP    ??MQTT_UnPacketPublish_0
    913          	{
    914          		case MQTT_QOS_LEVEL0:									// qos0 have no packet identifier
    915          			
    916          			if(0 != dup)
   \                     ??MQTT_UnPacketPublish_4:
   \   000128   E5..         MOV     A,?V0 + 9
   \   00012A   709B         JNZ     ??MQTT_UnPacketPublish_0
    917          				return 255;
    918          
    919          			if((topic == NULL) || (*topic_len)>MAX_CMDID_TOPIC_LEN)
   \   00012C   E5..         MOV     A,?V0 + 2
   \   00012E   45..         ORL     A,?V0 + 3
   \   000130   600E         JZ      ??MQTT_UnPacketPublish_6
   \   000132   8E82         MOV     DPL,R6
   \   000134   8F83         MOV     DPH,R7
   \   000136   C3           CLR     C
   \   000137   E0           MOVX    A,@DPTR
   \   000138   9433         SUBB    A,#0x33
   \   00013A   A3           INC     DPTR
   \   00013B   E0           MOVX    A,@DPTR
   \   00013C   9400         SUBB    A,#0x0
   \   00013E   400A         JC      ??MQTT_UnPacketPublish_7
    920                {
    921                  debug("UnPacketPublish 11.\r\n");
   \                     ??MQTT_UnPacketPublish_6:
   \   000140                ; Setup parameters for call to function debug
   \   000140   7A..         MOV     R2,#`?<Constant "UnPacketPublish 11.\\r\\n">` & 0xff
   \   000142   7B..         MOV     R3,#(`?<Constant "UnPacketPublish 11.\\r\\n">` >> 8) & 0xff
   \                     ??MQTT_UnPacketPublish_8:
   \   000144   12....       LCALL   ??debug?relay
   \   000147   02....       LJMP    ??MQTT_UnPacketPublish_0 & 0xFFFF
    922          			  return 255;
    923                }
    924          			memset(topic, 0, *topic_len + 1);
   \                     ??MQTT_UnPacketPublish_7:
   \   00014A                ; Setup parameters for call to function memset
   \   00014A   8E82         MOV     DPL,R6
   \   00014C   8F83         MOV     DPH,R7
   \   00014E   12....       LCALL   ??Subroutine90_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_262:
   \   000151   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000154   12....       LCALL   ?Subroutine50 & 0xFFFF
   \                     ??CrossCallReturnLabel_201:
   \   000157   12....       LCALL   ?DEALLOC_XSTACK8
    925          			memcpy(topic, (int8 *)msgPtr + 2, *topic_len);		//¸´ÖÆÊý¾Ý
   \   00015A                ; Setup parameters for call to function memcpy
   \   00015A   8E82         MOV     DPL,R6
   \   00015C   8F83         MOV     DPH,R7
   \   00015E   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   000161   12....       LCALL   ?Subroutine39 & 0xFFFF
   \                     ??CrossCallReturnLabel_66:
   \   000164   12....       LCALL   ?DEALLOC_XSTACK8
    926          			
    927          			*payload_len = remain_len - 2 - *topic_len;			//Îªpayload·ÖÅäÄÚ´æ
   \   000167   85..82       MOV     DPL,?XSP + 0
   \   00016A   85..83       MOV     DPH,?XSP + 1
   \   00016D   78..         MOV     R0,#?V0 + 4
   \   00016F   12....       LCALL   ?L_MOV_X
   \   000172   E5..         MOV     A,?V0 + 4
   \   000174   24FE         ADD     A,#-0x2
   \   000176   12....       LCALL   ?Subroutine8 & 0xFFFF
    928          			if((payload == NULL) || (*payload_len)>MAX_REQ_PAYLOAD_LEN)//Èç¹ûÊ§°Ü
   \                     ??CrossCallReturnLabel_0:
   \   000179   6005         JZ      ??MQTT_UnPacketPublish_9
   \   00017B   12....       LCALL   ?Subroutine31 & 0xFFFF
   \                     ??CrossCallReturnLabel_260:
   \   00017E   4006         JC      ??MQTT_UnPacketPublish_10
    929          			{
    930                  debug("UnPacketPublish 22.\r\n");
   \                     ??MQTT_UnPacketPublish_9:
   \   000180                ; Setup parameters for call to function debug
   \   000180   7A..         MOV     R2,#`?<Constant "UnPacketPublish 22.\\r\\n">` & 0xff
   \   000182   7B..         MOV     R3,#(`?<Constant "UnPacketPublish 22.\\r\\n">` >> 8) & 0xff
   \   000184   80BE         SJMP    ??MQTT_UnPacketPublish_8
    931          				return 255;
    932          			}
    933          			
    934          			memset(payload, 0, *payload_len + 1);
   \                     ??MQTT_UnPacketPublish_10:
   \   000186                ; Setup parameters for call to function memset
   \   000186   12....       LCALL   ?Subroutine16 & 0xFFFF
   \                     ??CrossCallReturnLabel_264:
   \   000189   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00018C   7C00         MOV     R4,#0x0
   \   00018E   7D00         MOV     R5,#0x0
   \   000190   AA..         MOV     R2,?V0 + 12
   \   000192   AB..         MOV     R3,?V0 + 13
   \   000194   12....       LCALL   ??Subroutine82_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_205:
   \   000197   12....       LCALL   ?DEALLOC_XSTACK8
    935          			memcpy(payload, (int8 *)msgPtr + 2 + *topic_len, *payload_len);
   \   00019A                ; Setup parameters for call to function memcpy
   \   00019A   85..82       MOV     DPL,?V0 + 10
   \   00019D   85..83       MOV     DPH,?V0 + 11
   \   0001A0   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   0001A3   12....       LCALL   ?Subroutine23 & 0xFFFF
   \                     ??CrossCallReturnLabel_34:
   \   0001A6   2402         ADD     A,#0x2
   \   0001A8   02....       LJMP    ??MQTT_UnPacketPublish_11 & 0xFFFF
    936          			
    937          		break;
    938          
    939          		case MQTT_QOS_LEVEL1:
    940          		case MQTT_QOS_LEVEL2:
    941          			
    942          			if(*topic_len + 2 > remain_len)
   \                     ??MQTT_UnPacketPublish_5:
   \   0001AB   85..82       MOV     DPL,?XSP + 0
   \   0001AE   85..83       MOV     DPH,?XSP + 1
   \   0001B1   C082         PUSH    DPL
   \   0001B3   C083         PUSH    DPH
   \   0001B5   8E82         MOV     DPL,R6
   \   0001B7   8F83         MOV     DPH,R7
   \   0001B9   E0           MOVX    A,@DPTR
   \   0001BA   2402         ADD     A,#0x2
   \   0001BC   F5..         MOV     ?V0 + 4,A
   \   0001BE   A3           INC     DPTR
   \   0001BF   E0           MOVX    A,@DPTR
   \   0001C0   3400         ADDC    A,#0x0
   \   0001C2   F5..         MOV     ?V0 + 5,A
   \   0001C4   D083         POP     DPH
   \   0001C6   D082         POP     DPL
   \   0001C8   78..         MOV     R0,#?V0 + 4
   \   0001CA   12....       LCALL   ?UL_GT_X
   \   0001CD   5003         JNC     $+5
   \   0001CF   02....       LJMP    ??MQTT_UnPacketPublish_0 & 0xFFFF
   \   0001D2   12....       LCALL   ?Subroutine55 & 0xFFFF
   \                     ??CrossCallReturnLabel_102:
   \   0001D5   8882         MOV     DPL,R0
   \   0001D7   8983         MOV     DPH,R1
   \   0001D9   A3           INC     DPTR
   \   0001DA   A3           INC     DPTR
   \   0001DB   E0           MOVX    A,@DPTR
   \   0001DC   FB           MOV     R3,A
   \   0001DD   8882         MOV     DPL,R0
   \   0001DF   8983         MOV     DPH,R1
   \   0001E1   A3           INC     DPTR
   \   0001E2   A3           INC     DPTR
   \   0001E3   A3           INC     DPTR
   \   0001E4   E0           MOVX    A,@DPTR
   \   0001E5   FA           MOV     R2,A
   \   0001E6   7424         MOV     A,#0x24
   \   0001E8   12....       LCALL   ?XSTACK_DISP0_8
   \   0001EB   12....       LCALL   ?Subroutine22 & 0xFFFF
   \                     ??CrossCallReturnLabel_33:
   \   0001EE   EA           MOV     A,R2
   \   0001EF   F0           MOVX    @DPTR,A
   \   0001F0   A3           INC     DPTR
   \   0001F1   EB           MOV     A,R3
   \   0001F2   F0           MOVX    @DPTR,A
    943          				return 255;
    944          			
    945          			*pkt_id = (uint16)msgPtr[*topic_len + 2] << 8 | msgPtr[*topic_len + 3];
    946          			if(pkt_id == 0)
   \   0001F3   7424         MOV     A,#0x24
   \   0001F5   12....       LCALL   ?XSTACK_DISP0_8
   \   0001F8   12....       LCALL   ??Subroutine73_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_142:
   \   0001FB   7003         JNZ     $+5
   \   0001FD   02....       LJMP    ??MQTT_UnPacketPublish_0 & 0xFFFF
    947          				return 255;
    948          			
    949          			//*topic = MQTT_MallocBuffer(*topic_len + 1);			//Îªtopic·ÖÅäÄÚ´æ
    950          			if((topic == NULL) && (*topic_len)>MAX_CMDID_TOPIC_LEN)
   \   000200   E5..         MOV     A,?V0 + 2
   \   000202   45..         ORL     A,?V0 + 3
   \   000204   7015         JNZ     ??MQTT_UnPacketPublish_12
   \   000206   8E82         MOV     DPL,R6
   \   000208   8F83         MOV     DPH,R7
   \   00020A   C3           CLR     C
   \   00020B   E0           MOVX    A,@DPTR
   \   00020C   9433         SUBB    A,#0x33
   \   00020E   A3           INC     DPTR
   \   00020F   E0           MOVX    A,@DPTR
   \   000210   9400         SUBB    A,#0x0
   \   000212   4007         JC      ??MQTT_UnPacketPublish_12
    951                {     
    952                  debug("UnPacketPublish 33.\r\n");
   \   000214                ; Setup parameters for call to function debug
   \   000214   7A..         MOV     R2,#`?<Constant "UnPacketPublish 33.\\r\\n">` & 0xff
   \   000216   7B..         MOV     R3,#(`?<Constant "UnPacketPublish 33.\\r\\n">` >> 8) & 0xff
   \   000218   02....       LJMP    ??MQTT_UnPacketPublish_8 & 0xFFFF
    953          				return 255;
    954                }
    955                
    956          			memset(topic, 0, *topic_len + 1);
   \                     ??MQTT_UnPacketPublish_12:
   \   00021B                ; Setup parameters for call to function memset
   \   00021B   8E82         MOV     DPL,R6
   \   00021D   8F83         MOV     DPH,R7
   \   00021F   12....       LCALL   ??Subroutine90_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_263:
   \   000222   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000225   12....       LCALL   ?Subroutine50 & 0xFFFF
   \                     ??CrossCallReturnLabel_202:
   \   000228   12....       LCALL   ?DEALLOC_XSTACK8
    957          			memcpy(topic, (int8 *)msgPtr + 2, *topic_len);		//¸´ÖÆÊý¾Ý
   \   00022B                ; Setup parameters for call to function memcpy
   \   00022B   8E82         MOV     DPL,R6
   \   00022D   8F83         MOV     DPH,R7
   \   00022F   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   000232   12....       LCALL   ?Subroutine39 & 0xFFFF
   \                     ??CrossCallReturnLabel_67:
   \   000235   12....       LCALL   ?DEALLOC_XSTACK8
    958          			
    959          			*payload_len = remain_len - 4 - *topic_len;
   \   000238   85..82       MOV     DPL,?XSP + 0
   \   00023B   85..83       MOV     DPH,?XSP + 1
   \   00023E   78..         MOV     R0,#?V0 + 4
   \   000240   12....       LCALL   ?L_MOV_X
   \   000243   E5..         MOV     A,?V0 + 4
   \   000245   24FC         ADD     A,#-0x4
   \   000247   12....       LCALL   ?Subroutine8 & 0xFFFF
    960          			if((payload == NULL) || (*payload_len>MAX_REQ_PAYLOAD_LEN))								//Èç¹ûÊ§°Ü
   \                     ??CrossCallReturnLabel_1:
   \   00024A   6005         JZ      ??MQTT_UnPacketPublish_13
   \   00024C   12....       LCALL   ?Subroutine31 & 0xFFFF
   \                     ??CrossCallReturnLabel_261:
   \   00024F   4007         JC      ??MQTT_UnPacketPublish_14
    961          			{
    962                  debug("UnPacketPublish 44.\r\n");
   \                     ??MQTT_UnPacketPublish_13:
   \   000251                ; Setup parameters for call to function debug
   \   000251   7A..         MOV     R2,#`?<Constant "UnPacketPublish 44.\\r\\n">` & 0xff
   \   000253   7B..         MOV     R3,#(`?<Constant "UnPacketPublish 44.\\r\\n">` >> 8) & 0xff
   \   000255   02....       LJMP    ??MQTT_UnPacketPublish_8 & 0xFFFF
    963          				return 255;
    964          			}
    965          			
    966          			memset(payload, 0, *payload_len + 1);
   \                     ??MQTT_UnPacketPublish_14:
   \   000258                ; Setup parameters for call to function memset
   \   000258   12....       LCALL   ?Subroutine16 & 0xFFFF
   \                     ??CrossCallReturnLabel_265:
   \   00025B   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00025E   7C00         MOV     R4,#0x0
   \   000260   7D00         MOV     R5,#0x0
   \   000262   AA..         MOV     R2,?V0 + 12
   \   000264   AB..         MOV     R3,?V0 + 13
   \   000266   12....       LCALL   ??Subroutine82_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_206:
   \   000269   12....       LCALL   ?DEALLOC_XSTACK8
    967          			memcpy(payload, (int8 *)msgPtr + 4 + *topic_len, *payload_len);
   \   00026C                ; Setup parameters for call to function memcpy
   \   00026C   85..82       MOV     DPL,?V0 + 10
   \   00026F   85..83       MOV     DPH,?V0 + 11
   \   000272   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   000275   12....       LCALL   ?Subroutine23 & 0xFFFF
   \                     ??CrossCallReturnLabel_35:
   \   000278   2404         ADD     A,#0x4
   \                     ??MQTT_UnPacketPublish_11:
   \   00027A   FC           MOV     R4,A
   \   00027B   E9           MOV     A,R1
   \   00027C   3400         ADDC    A,#0x0
   \   00027E   FD           MOV     R5,A
   \   00027F   AA..         MOV     R2,?V0 + 12
   \   000281   AB..         MOV     R3,?V0 + 13
   \   000283   12....       LCALL   ??Subroutine88_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_258:
   \   000286   12....       LCALL   ?DEALLOC_XSTACK8
    968          			
    969          		break;
    970          
    971          		default:
    972          			return 255;
    973          	}
    974          	
    975          	if(strchr((int8 *)topic, '+') || strchr((int8 *)topic, '#'))
                 	          ^
Warning[Pe167]: argument of type "int8 *" is incompatible with parameter of
          type "char const *"

  	if(strchr((int8 *)topic, '+') || strchr((int8 *)topic, '#'))
  	                                        ^
"I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\MqttKit.c",975  Warning[Pe167]: 
          argument of type "int8 *" is incompatible with parameter of type
          "char const *"
   \   000289                ; Setup parameters for call to function strchr
   \   000289   7C2B         MOV     R4,#0x2b
   \   00028B   12....       LCALL   ?Subroutine52 & 0xFFFF
   \                     ??CrossCallReturnLabel_98:
   \   00028E   6003         JZ      $+5
   \   000290   02....       LJMP    ??MQTT_UnPacketPublish_0 & 0xFFFF
   \   000293                ; Setup parameters for call to function strchr
   \   000293   7C23         MOV     R4,#0x23
   \   000295   12....       LCALL   ?Subroutine52 & 0xFFFF
   \                     ??CrossCallReturnLabel_99:
   \   000298   6003         JZ      $+5
   \   00029A   02....       LJMP    ??MQTT_UnPacketPublish_0 & 0xFFFF
    976          		return 255;
    977          
    978          	return 0;
   \   00029D   7900         MOV     R1,#0x0
   \                     ??MQTT_UnPacketPublish_2:
   \   00029F   7404         MOV     A,#0x4
   \   0002A1   02....       LJMP    ?Subroutine2 & 0xFFFF
    979          
    980          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine52:
   \   000000   7D00         MOV     R5,#0x0
   \   000002   AA..         MOV     R2,?V0 + 2
   \   000004   AB..         MOV     R3,?V0 + 3
   \   000006   12....       LCALL   ??strchr?relay
   \   000009   8B..         MOV     ?V0 + 1,R3
   \   00000B   EA           MOV     A,R2
   \   00000C   45..         ORL     A,?V0 + 1
   \   00000E   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine39:
   \   000000   E5..         MOV     A,?V0 + 0
   \   000002   2402         ADD     A,#0x2
   \   000004   FC           MOV     R4,A
   \   000005   E5..         MOV     A,?V0 + 1
   \   000007   3400         ADDC    A,#0x0
   \   000009   12....       LCALL   ?Subroutine67 & 0xFFFF
   \                     ??CrossCallReturnLabel_256:
   \   00000C   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine31:
   \   000000   85..82       MOV     DPL,?V0 + 10
   \   000003   85..83       MOV     DPH,?V0 + 11
   \   000006                REQUIRE ??Subroutine89_0
   \   000006                ; // Fall through to label ??Subroutine89_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine23:
   \   000000   12....       LCALL   ?Subroutine55 & 0xFFFF
   \                     ??CrossCallReturnLabel_103:
   \   000003   E8           MOV     A,R0
   \   000004   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine55:
   \   000000   8E82         MOV     DPL,R6
   \   000002   8F83         MOV     DPH,R7
   \   000004   E0           MOVX    A,@DPTR
   \   000005   F8           MOV     R0,A
   \   000006   A3           INC     DPTR
   \   000007   E0           MOVX    A,@DPTR
   \   000008   F9           MOV     R1,A
   \   000009   E5..         MOV     A,?V0 + 0
   \   00000B   28           ADD     A,R0
   \   00000C   F8           MOV     R0,A
   \   00000D   E5..         MOV     A,?V0 + 1
   \   00000F   39           ADDC    A,R1
   \   000010   F9           MOV     R1,A
   \   000011   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine16:
   \   000000   85..82       MOV     DPL,?V0 + 10
   \   000003   85..83       MOV     DPH,?V0 + 11
   \   000006                REQUIRE ??Subroutine90_0
   \   000006                ; // Fall through to label ??Subroutine90_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine90_0:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   2401         ADD     A,#0x1
   \   000003   F5..         MOV     ?V0 + 4,A
   \   000005   A3           INC     DPTR
   \   000006   E0           MOVX    A,@DPTR
   \   000007   3400         ADDC    A,#0x0
   \   000009   F5..         MOV     ?V0 + 5,A
   \   00000B   78..         MOV     R0,#?V0 + 4
   \   00000D   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine8:
   \   000000   FA           MOV     R2,A
   \   000001   E5..         MOV     A,?V0 + 5
   \   000003   34FF         ADDC    A,#-0x1
   \   000005   FB           MOV     R3,A
   \   000006   8E82         MOV     DPL,R6
   \   000008   8F83         MOV     DPH,R7
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   F8           MOV     R0,A
   \   00000C   A3           INC     DPTR
   \   00000D   E0           MOVX    A,@DPTR
   \   00000E   F9           MOV     R1,A
   \   00000F   EA           MOV     A,R2
   \   000010   C3           CLR     C
   \   000011   98           SUBB    A,R0
   \   000012   F8           MOV     R0,A
   \   000013   EB           MOV     A,R3
   \   000014   99           SUBB    A,R1
   \   000015   F9           MOV     R1,A
   \   000016   85..82       MOV     DPL,?V0 + 10
   \   000019   85..83       MOV     DPH,?V0 + 11
   \   00001C   E8           MOV     A,R0
   \   00001D   F0           MOVX    @DPTR,A
   \   00001E   A3           INC     DPTR
   \   00001F   E9           MOV     A,R1
   \   000020   F0           MOVX    @DPTR,A
   \   000021   E5..         MOV     A,?V0 + 12
   \   000023   45..         ORL     A,?V0 + 13
   \   000025   22           RET
    981          
    982          //==========================================================
    983          //	º¯ÊýÃû³Æ£º	MQTT_PacketPublishAck
    984          //
    985          //	º¯Êý¹¦ÄÜ£º	Publish AckÏûÏ¢×é°ü
    986          //
    987          //	Èë¿Ú²ÎÊý£º	pkt_id£ºpacket id
    988          //				mqttPacket£º°üÖ¸Õë
    989          //
    990          //	·µ»Ø²ÎÊý£º	0-³É¹¦		1-Ê§°ÜÔ­Òò
    991          //
    992          //	ËµÃ÷£º		µ±ÊÕµ½µÄPublishÏûÏ¢µÄQoSµÈ¼¶Îª1Ê±£¬ÐèÒªAck»Ø¸´
    993          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine47:
   \   000000   EE           MOV     A,R6
   \   000001   FA           MOV     R2,A
   \   000002   EF           MOV     A,R7
   \   000003                REQUIRE ??Subroutine83_0
   \   000003                ; // Fall through to label ??Subroutine83_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine5:
   \   000000   8E82         MOV     DPL,R6
   \   000002   8F83         MOV     DPH,R7
   \   000004   12....       LCALL   ?Subroutine68 & 0xFFFF
   \                     ??CrossCallReturnLabel_276:
   \   000007                REQUIRE ??Subroutine86_0
   \   000007                ; // Fall through to label ??Subroutine86_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    994          uint1 MQTT_PacketPublishAck(uint16 pkt_id, MQTT_PACKET_STRUCTURE *mqttPacket)
   \                     MQTT_PacketPublishAck:
    995          {
   \   000000   74F0         MOV     A,#-0x10
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 0,R2
   \   000007   8B..         MOV     ?V0 + 1,R3
   \   000009   EC           MOV     A,R4
   \   00000A   FE           MOV     R6,A
   \   00000B   ED           MOV     A,R5
   \   00000C   FF           MOV     R7,A
    996          
    997          	MQTT_NewBuffer(mqttPacket, 4);
   \   00000D                ; Setup parameters for call to function MQTT_NewBuffer
   \   00000D   90....       MOV     DPTR,#__Constant_4
   \   000010   12....       LCALL   ?PUSH_XSTACK8_X_FOUR
   \   000013   12....       LCALL   ?Subroutine47 & 0xFFFF
   \                     ??CrossCallReturnLabel_207:
   \   000016   12....       LCALL   ?DEALLOC_XSTACK8
    998          	if(mqttPacket->_data == NULL)
   \   000019   12....       LCALL   ?Subroutine9 & 0xFFFF
   \                     ??CrossCallReturnLabel_144:
   \   00001C   7004         JNZ     ??MQTT_PacketPublishAck_0
    999          		return 1;
   \   00001E   7901         MOV     R1,#0x1
   \   000020   8072         SJMP    ??MQTT_PacketPublishAck_1
   1000          	
   1001          /*************************************¹Ì¶¨Í·²¿***********************************************/
   1002          	
   1003          	//¹Ì¶¨Í·²¿----------------------Í·²¿ÏûÏ¢-------------------------------------------------
   1004          	mqttPacket->_data[mqttPacket->_len++] = MQTT_PKT_PUBACK << 4;
   \                     ??MQTT_PacketPublishAck_0:
   \   000022   12....       LCALL   ?Subroutine37 & 0xFFFF
   \                     ??CrossCallReturnLabel_60:
   \   000025   12....       LCALL   ?L_MOV_X
   \   000028   8E82         MOV     DPL,R6
   \   00002A   8F83         MOV     DPH,R7
   \   00002C   12....       LCALL   ??Subroutine91_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_267:
   \   00002F   7440         MOV     A,#0x40
   \   000031   12....       LCALL   ??Subroutine87_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_241:
   \   000034   12....       LCALL   ?L_MOV_X
   \   000037   8A82         MOV     DPL,R2
   \   000039   8B83         MOV     DPH,R3
   \   00003B   78..         MOV     R0,#?V0 + 4
   \   00003D   12....       LCALL   ?L_ADD_TO_X
   1005          	
   1006          	//¹Ì¶¨Í·²¿----------------------Ê£Óà³¤¶È-------------------------------------------------
   1007          	mqttPacket->_data[mqttPacket->_len++] = 2;
   \   000040   8A82         MOV     DPL,R2
   \   000042   8B83         MOV     DPH,R3
   \   000044   78..         MOV     R0,#?V0 + 4
   \   000046   12....       LCALL   ?L_MOV_X
   \   000049   12....       LCALL   ?Subroutine12 & 0xFFFF
   \                     ??CrossCallReturnLabel_11:
   \   00004C   12....       LCALL   ??Subroutine87_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_242:
   \   00004F   12....       LCALL   ?L_MOV_X
   \   000052   8A82         MOV     DPL,R2
   \   000054   8B83         MOV     DPH,R3
   \   000056   78..         MOV     R0,#?V0 + 4
   \   000058   12....       LCALL   ?L_ADD_TO_X
   1008          	
   1009          /*************************************¿É±äÍ·²¿***********************************************/
   1010          	
   1011          	//¿É±äÍ·²¿----------------------pkt_id³¤¶È-----------------------------------------------
   1012          	mqttPacket->_data[mqttPacket->_len++] = pkt_id >> 8;
   \   00005B   8A82         MOV     DPL,R2
   \   00005D   8B83         MOV     DPH,R3
   \   00005F   78..         MOV     R0,#?V0 + 4
   \   000061   12....       LCALL   ?L_MOV_X
   \   000064   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_251:
   \   000067   12....       LCALL   ?L_MOV_X
   \   00006A   8A82         MOV     DPL,R2
   \   00006C   8B83         MOV     DPH,R3
   \   00006E   78..         MOV     R0,#?V0 + 4
   \   000070   12....       LCALL   ?L_ADD_TO_X
   1013          	mqttPacket->_data[mqttPacket->_len++] = pkt_id & 0xff;
   \   000073   C0..         PUSH    ?V0 + 0
   \   000075   8A82         MOV     DPL,R2
   \   000077   8B83         MOV     DPH,R3
   \   000079   78..         MOV     R0,#?V0 + 0
   \   00007B   12....       LCALL   ?L_MOV_X
   \   00007E   12....       LCALL   ?Subroutine10 & 0xFFFF
   \                     ??CrossCallReturnLabel_4:
   \   000081   D0E0         POP     A
   \   000083   12....       LCALL   ??Subroutine92_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_279:
   \   000086   12....       LCALL   ?L_MOV_X
   \   000089   8A82         MOV     DPL,R2
   \   00008B   8B83         MOV     DPH,R3
   \   00008D   78..         MOV     R0,#?V0 + 0
   \   00008F   12....       LCALL   ?L_ADD_TO_X
   1014          	
   1015          	return 0;
   \   000092   7900         MOV     R1,#0x0
   \                     ??MQTT_PacketPublishAck_1:
   \   000094   02....       LJMP    ?Subroutine1 & 0xFFFF
   1016          
   1017          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine37:
   \   000000   12....       LCALL   ?Subroutine63 & 0xFFFF
   \                     ??CrossCallReturnLabel_110:
   \   000003   78..         MOV     R0,#?V0 + 4
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine12:
   \   000000   8E82         MOV     DPL,R6
   \   000002   8F83         MOV     DPH,R7
   \   000004   12....       LCALL   ?Subroutine56 & 0xFFFF
   \                     ??CrossCallReturnLabel_274:
   \   000007   7402         MOV     A,#0x2
   \   000009   22           RET
   1018          
   1019          //==========================================================
   1020          //	º¯ÊýÃû³Æ£º	MQTT_UnPacketPublishAck
   1021          //
   1022          //	º¯Êý¹¦ÄÜ£º	Publish AckÏûÏ¢½â°ü
   1023          //
   1024          //	Èë¿Ú²ÎÊý£º	rev_data£ºÊÕµ½µÄÊý¾Ý
   1025          //
   1026          //	·µ»Ø²ÎÊý£º	0-³É¹¦		1-Ê§°ÜÔ­Òò
   1027          //
   1028          //	ËµÃ÷£º		
   1029          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1030          uint1 MQTT_UnPacketPublishAck(uint8 *rev_data)
   \                     MQTT_UnPacketPublishAck:
   1031          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   1032          
   1033          	if(rev_data[1] != 2)
   \   000004   8A82         MOV     DPL,R2
   \   000006   8B83         MOV     DPH,R3
   \   000008   A3           INC     DPTR
   \   000009   E0           MOVX    A,@DPTR
   \   00000A   6402         XRL     A,#0x2
   \   00000C   6004         JZ      ??MQTT_UnPacketPublishAck_0
   1034          		return 1;
   \                     ??MQTT_UnPacketPublishAck_1:
   \   00000E   7901         MOV     R1,#0x1
   \   000010   8017         SJMP    ??MQTT_UnPacketPublishAck_2
   1035          
   1036          	if(rev_data[2] == MOSQ_MSB(MQTT_PUBLISH_ID) && rev_data[3] == MOSQ_LSB(MQTT_PUBLISH_ID))
   \                     ??MQTT_UnPacketPublishAck_0:
   \   000012   8A82         MOV     DPL,R2
   \   000014   8B83         MOV     DPH,R3
   \   000016   A3           INC     DPTR
   \   000017   A3           INC     DPTR
   \   000018   E0           MOVX    A,@DPTR
   \   000019   70F3         JNZ     ??MQTT_UnPacketPublishAck_1
   \   00001B   8A82         MOV     DPL,R2
   \   00001D   8B83         MOV     DPH,R3
   \   00001F   A3           INC     DPTR
   \   000020   A3           INC     DPTR
   \   000021   A3           INC     DPTR
   \   000022   E0           MOVX    A,@DPTR
   \   000023   640A         XRL     A,#0xa
   \   000025   70E7         JNZ     ??MQTT_UnPacketPublishAck_1
   1037          		return 0;
   \   000027   7900         MOV     R1,#0x0
   \                     ??MQTT_UnPacketPublishAck_2:
   \   000029                REQUIRE ?Subroutine4
   \   000029                ; // Fall through to label ?Subroutine4
   1038          	else
   1039          		return 1;
   1040          
   1041          }
   1042          
   1043          //==========================================================
   1044          //	º¯ÊýÃû³Æ£º	MQTT_PacketPublishRec
   1045          //
   1046          //	º¯Êý¹¦ÄÜ£º	Publish RecÏûÏ¢×é°ü
   1047          //
   1048          //	Èë¿Ú²ÎÊý£º	pkt_id£ºpacket id
   1049          //				mqttPacket£º°üÖ¸Õë
   1050          //
   1051          //	·µ»Ø²ÎÊý£º	0-³É¹¦		1-Ê§°ÜÔ­Òò
   1052          //
   1053          //	ËµÃ÷£º		µ±ÊÕµ½µÄPublishÏûÏ¢µÄQoSµÈ¼¶Îª2Ê±£¬ÏÈÊÕµ½rec
   1054          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1055          uint1 MQTT_PacketPublishRec(uint16 pkt_id, MQTT_PACKET_STRUCTURE *mqttPacket)
   \                     MQTT_PacketPublishRec:
   1056          {
   \   000000   74F0         MOV     A,#-0x10
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 0,R2
   \   000007   8B..         MOV     ?V0 + 1,R3
   \   000009   EC           MOV     A,R4
   \   00000A   FE           MOV     R6,A
   \   00000B   ED           MOV     A,R5
   \   00000C   FF           MOV     R7,A
   1057          
   1058          	MQTT_NewBuffer(mqttPacket, 4);
   \   00000D                ; Setup parameters for call to function MQTT_NewBuffer
   \   00000D   90....       MOV     DPTR,#__Constant_4
   \   000010   12....       LCALL   ?PUSH_XSTACK8_X_FOUR
   \   000013   12....       LCALL   ?Subroutine47 & 0xFFFF
   \                     ??CrossCallReturnLabel_208:
   \   000016   12....       LCALL   ?DEALLOC_XSTACK8
   1059          	if(mqttPacket->_data == NULL)
   \   000019   12....       LCALL   ?Subroutine9 & 0xFFFF
   \                     ??CrossCallReturnLabel_145:
   \   00001C   7004         JNZ     ??MQTT_PacketPublishRec_0
   1060          		return 1;
   \   00001E   7901         MOV     R1,#0x1
   \   000020   8072         SJMP    ??MQTT_PacketPublishRec_1
   1061          	
   1062          /*************************************¹Ì¶¨Í·²¿***********************************************/
   1063          	
   1064          	//¹Ì¶¨Í·²¿----------------------Í·²¿ÏûÏ¢-------------------------------------------------
   1065          	mqttPacket->_data[mqttPacket->_len++] = MQTT_PKT_PUBREC << 4;
   \                     ??MQTT_PacketPublishRec_0:
   \   000022   12....       LCALL   ?Subroutine37 & 0xFFFF
   \                     ??CrossCallReturnLabel_61:
   \   000025   12....       LCALL   ?L_MOV_X
   \   000028   8E82         MOV     DPL,R6
   \   00002A   8F83         MOV     DPH,R7
   \   00002C   12....       LCALL   ??Subroutine91_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_268:
   \   00002F   7450         MOV     A,#0x50
   \   000031   12....       LCALL   ??Subroutine87_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_243:
   \   000034   12....       LCALL   ?L_MOV_X
   \   000037   8A82         MOV     DPL,R2
   \   000039   8B83         MOV     DPH,R3
   \   00003B   78..         MOV     R0,#?V0 + 4
   \   00003D   12....       LCALL   ?L_ADD_TO_X
   1066          	
   1067          	//¹Ì¶¨Í·²¿----------------------Ê£Óà³¤¶È-------------------------------------------------
   1068          	mqttPacket->_data[mqttPacket->_len++] = 2;
   \   000040   8A82         MOV     DPL,R2
   \   000042   8B83         MOV     DPH,R3
   \   000044   78..         MOV     R0,#?V0 + 4
   \   000046   12....       LCALL   ?L_MOV_X
   \   000049   12....       LCALL   ?Subroutine12 & 0xFFFF
   \                     ??CrossCallReturnLabel_12:
   \   00004C   12....       LCALL   ??Subroutine87_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_244:
   \   00004F   12....       LCALL   ?L_MOV_X
   \   000052   8A82         MOV     DPL,R2
   \   000054   8B83         MOV     DPH,R3
   \   000056   78..         MOV     R0,#?V0 + 4
   \   000058   12....       LCALL   ?L_ADD_TO_X
   1069          	
   1070          /*************************************¿É±äÍ·²¿***********************************************/
   1071          	
   1072          	//¿É±äÍ·²¿----------------------pkt_id³¤¶È-----------------------------------------------
   1073          	mqttPacket->_data[mqttPacket->_len++] = pkt_id >> 8;
   \   00005B   8A82         MOV     DPL,R2
   \   00005D   8B83         MOV     DPH,R3
   \   00005F   78..         MOV     R0,#?V0 + 4
   \   000061   12....       LCALL   ?L_MOV_X
   \   000064   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_252:
   \   000067   12....       LCALL   ?L_MOV_X
   \   00006A   8A82         MOV     DPL,R2
   \   00006C   8B83         MOV     DPH,R3
   \   00006E   78..         MOV     R0,#?V0 + 4
   \   000070   12....       LCALL   ?L_ADD_TO_X
   1074          	mqttPacket->_data[mqttPacket->_len++] = pkt_id & 0xff;
   \   000073   C0..         PUSH    ?V0 + 0
   \   000075   8A82         MOV     DPL,R2
   \   000077   8B83         MOV     DPH,R3
   \   000079   78..         MOV     R0,#?V0 + 0
   \   00007B   12....       LCALL   ?L_MOV_X
   \   00007E   12....       LCALL   ?Subroutine10 & 0xFFFF
   \                     ??CrossCallReturnLabel_5:
   \   000081   D0E0         POP     A
   \   000083   12....       LCALL   ??Subroutine92_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_280:
   \   000086   12....       LCALL   ?L_MOV_X
   \   000089   8A82         MOV     DPL,R2
   \   00008B   8B83         MOV     DPH,R3
   \   00008D   78..         MOV     R0,#?V0 + 0
   \   00008F   12....       LCALL   ?L_ADD_TO_X
   1075          	
   1076          	return 0;
   \   000092   7900         MOV     R1,#0x0
   \                     ??MQTT_PacketPublishRec_1:
   \   000094                REQUIRE ?Subroutine1
   \   000094                ; // Fall through to label ?Subroutine1
   1077          
   1078          }
   1079          
   1080          //==========================================================
   1081          //	º¯ÊýÃû³Æ£º	MQTT_UnPacketPublishRec
   1082          //
   1083          //	º¯Êý¹¦ÄÜ£º	Publish RecÏûÏ¢½â°ü
   1084          //
   1085          //	Èë¿Ú²ÎÊý£º	rev_data£º½ÓÊÕµ½µÄÊý¾Ý
   1086          //
   1087          //	·µ»Ø²ÎÊý£º	0-³É¹¦		1-Ê§°Ü
   1088          //
   1089          //	ËµÃ÷£º		
   1090          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1091          uint1 MQTT_UnPacketPublishRec(uint8 *rev_data)
   \                     MQTT_UnPacketPublishRec:
   1092          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   1093          
   1094          	if(rev_data[1] != 2)
   \   000004   8A82         MOV     DPL,R2
   \   000006   8B83         MOV     DPH,R3
   \   000008   A3           INC     DPTR
   \   000009   E0           MOVX    A,@DPTR
   \   00000A   6402         XRL     A,#0x2
   \   00000C   6004         JZ      ??MQTT_UnPacketPublishRec_0
   1095          		return 1;
   \                     ??MQTT_UnPacketPublishRec_1:
   \   00000E   7901         MOV     R1,#0x1
   \   000010   8017         SJMP    ??MQTT_UnPacketPublishRec_2
   1096          
   1097          	if(rev_data[2] == MOSQ_MSB(MQTT_PUBLISH_ID) && rev_data[3] == MOSQ_LSB(MQTT_PUBLISH_ID))
   \                     ??MQTT_UnPacketPublishRec_0:
   \   000012   8A82         MOV     DPL,R2
   \   000014   8B83         MOV     DPH,R3
   \   000016   A3           INC     DPTR
   \   000017   A3           INC     DPTR
   \   000018   E0           MOVX    A,@DPTR
   \   000019   70F3         JNZ     ??MQTT_UnPacketPublishRec_1
   \   00001B   8A82         MOV     DPL,R2
   \   00001D   8B83         MOV     DPH,R3
   \   00001F   A3           INC     DPTR
   \   000020   A3           INC     DPTR
   \   000021   A3           INC     DPTR
   \   000022   E0           MOVX    A,@DPTR
   \   000023   640A         XRL     A,#0xa
   \   000025   70E7         JNZ     ??MQTT_UnPacketPublishRec_1
   1098          		return 0;
   \   000027   7900         MOV     R1,#0x0
   \                     ??MQTT_UnPacketPublishRec_2:
   \   000029   02....       LJMP    ?Subroutine4 & 0xFFFF
   1099          	else
   1100          		return 1;
   1101          
   1102          }
   1103          
   1104          //==========================================================
   1105          //	º¯ÊýÃû³Æ£º	MQTT_PacketPublishRel
   1106          //
   1107          //	º¯Êý¹¦ÄÜ£º	Publish RelÏûÏ¢×é°ü
   1108          //
   1109          //	Èë¿Ú²ÎÊý£º	pkt_id£ºpacket id
   1110          //				mqttPacket£º°üÖ¸Õë
   1111          //
   1112          //	·µ»Ø²ÎÊý£º	0-³É¹¦		1-Ê§°ÜÔ­Òò
   1113          //
   1114          //	ËµÃ÷£º		µ±ÊÕµ½µÄPublishÏûÏ¢µÄQoSµÈ¼¶Îª2Ê±£¬ÏÈÊÕµ½rec£¬ÔÙ»Ø¸´rel
   1115          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1116          uint1 MQTT_PacketPublishRel(uint16 pkt_id, MQTT_PACKET_STRUCTURE *mqttPacket)
   \                     MQTT_PacketPublishRel:
   1117          {
   \   000000   74F0         MOV     A,#-0x10
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 0,R2
   \   000007   8B..         MOV     ?V0 + 1,R3
   \   000009   EC           MOV     A,R4
   \   00000A   FE           MOV     R6,A
   \   00000B   ED           MOV     A,R5
   \   00000C   FF           MOV     R7,A
   1118          
   1119          	MQTT_NewBuffer(mqttPacket, 4);
   \   00000D                ; Setup parameters for call to function MQTT_NewBuffer
   \   00000D   90....       MOV     DPTR,#__Constant_4
   \   000010   12....       LCALL   ?PUSH_XSTACK8_X_FOUR
   \   000013   12....       LCALL   ?Subroutine47 & 0xFFFF
   \                     ??CrossCallReturnLabel_209:
   \   000016   12....       LCALL   ?DEALLOC_XSTACK8
   1120          	if(mqttPacket->_data == NULL)
   \   000019   12....       LCALL   ?Subroutine9 & 0xFFFF
   \                     ??CrossCallReturnLabel_146:
   \   00001C   7004         JNZ     ??MQTT_PacketPublishRel_0
   1121          		return 1;
   \   00001E   7901         MOV     R1,#0x1
   \   000020   8072         SJMP    ??MQTT_PacketPublishRel_1
   1122          	
   1123          /*************************************¹Ì¶¨Í·²¿***********************************************/
   1124          	
   1125          	//¹Ì¶¨Í·²¿----------------------Í·²¿ÏûÏ¢-------------------------------------------------
   1126          	mqttPacket->_data[mqttPacket->_len++] = MQTT_PKT_PUBREL << 4 | 0x02;
   \                     ??MQTT_PacketPublishRel_0:
   \   000022   12....       LCALL   ?Subroutine37 & 0xFFFF
   \                     ??CrossCallReturnLabel_62:
   \   000025   12....       LCALL   ?L_MOV_X
   \   000028   8E82         MOV     DPL,R6
   \   00002A   8F83         MOV     DPH,R7
   \   00002C   12....       LCALL   ??Subroutine91_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_269:
   \   00002F   7462         MOV     A,#0x62
   \   000031   12....       LCALL   ??Subroutine87_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_245:
   \   000034   12....       LCALL   ?L_MOV_X
   \   000037   8A82         MOV     DPL,R2
   \   000039   8B83         MOV     DPH,R3
   \   00003B   78..         MOV     R0,#?V0 + 4
   \   00003D   12....       LCALL   ?L_ADD_TO_X
   1127          	
   1128          	//¹Ì¶¨Í·²¿----------------------Ê£Óà³¤¶È-------------------------------------------------
   1129          	mqttPacket->_data[mqttPacket->_len++] = 2;
   \   000040   8A82         MOV     DPL,R2
   \   000042   8B83         MOV     DPH,R3
   \   000044   78..         MOV     R0,#?V0 + 4
   \   000046   12....       LCALL   ?L_MOV_X
   \   000049   12....       LCALL   ?Subroutine12 & 0xFFFF
   \                     ??CrossCallReturnLabel_13:
   \   00004C   12....       LCALL   ??Subroutine87_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_246:
   \   00004F   12....       LCALL   ?L_MOV_X
   \   000052   8A82         MOV     DPL,R2
   \   000054   8B83         MOV     DPH,R3
   \   000056   78..         MOV     R0,#?V0 + 4
   \   000058   12....       LCALL   ?L_ADD_TO_X
   1130          	
   1131          /*************************************¿É±äÍ·²¿***********************************************/
   1132          	
   1133          	//¿É±äÍ·²¿----------------------pkt_id³¤¶È-----------------------------------------------
   1134          	mqttPacket->_data[mqttPacket->_len++] = pkt_id >> 8;
   \   00005B   8A82         MOV     DPL,R2
   \   00005D   8B83         MOV     DPH,R3
   \   00005F   78..         MOV     R0,#?V0 + 4
   \   000061   12....       LCALL   ?L_MOV_X
   \   000064   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_253:
   \   000067   12....       LCALL   ?L_MOV_X
   \   00006A   8A82         MOV     DPL,R2
   \   00006C   8B83         MOV     DPH,R3
   \   00006E   78..         MOV     R0,#?V0 + 4
   \   000070   12....       LCALL   ?L_ADD_TO_X
   1135          	mqttPacket->_data[mqttPacket->_len++] = pkt_id & 0xff;
   \   000073   C0..         PUSH    ?V0 + 0
   \   000075   8A82         MOV     DPL,R2
   \   000077   8B83         MOV     DPH,R3
   \   000079   78..         MOV     R0,#?V0 + 0
   \   00007B   12....       LCALL   ?L_MOV_X
   \   00007E   12....       LCALL   ?Subroutine10 & 0xFFFF
   \                     ??CrossCallReturnLabel_6:
   \   000081   D0E0         POP     A
   \   000083   12....       LCALL   ??Subroutine92_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_281:
   \   000086   12....       LCALL   ?L_MOV_X
   \   000089   8A82         MOV     DPL,R2
   \   00008B   8B83         MOV     DPH,R3
   \   00008D   78..         MOV     R0,#?V0 + 0
   \   00008F   12....       LCALL   ?L_ADD_TO_X
   1136          	
   1137          	return 0;
   \   000092   7900         MOV     R1,#0x0
   \                     ??MQTT_PacketPublishRel_1:
   \   000094   02....       LJMP    ?Subroutine1 & 0xFFFF
   1138          
   1139          }
   1140          
   1141          //==========================================================
   1142          //	º¯ÊýÃû³Æ£º	MQTT_UnPacketPublishRel
   1143          //
   1144          //	º¯Êý¹¦ÄÜ£º	Publish RelÏûÏ¢½â°ü
   1145          //
   1146          //	Èë¿Ú²ÎÊý£º	rev_data£º½ÓÊÕµ½µÄÊý¾Ý
   1147          //
   1148          //	·µ»Ø²ÎÊý£º	0-³É¹¦		1-Ê§°Ü
   1149          //
   1150          //	ËµÃ÷£º		
   1151          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1152          uint1 MQTT_UnPacketPublishRel(uint8 *rev_data, uint16 pkt_id)
   \                     MQTT_UnPacketPublishRel:
   1153          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   1154          
   1155          	if(rev_data[1] != 2)
   \   000004   8A82         MOV     DPL,R2
   \   000006   8B83         MOV     DPH,R3
   \   000008   A3           INC     DPTR
   \   000009   E0           MOVX    A,@DPTR
   \   00000A   6402         XRL     A,#0x2
   \   00000C   6004         JZ      ??MQTT_UnPacketPublishRel_0
   1156          		return 1;
   \                     ??MQTT_UnPacketPublishRel_1:
   \   00000E   7901         MOV     R1,#0x1
   \   000010   801D         SJMP    ??MQTT_UnPacketPublishRel_2
   1157          
   1158          	if(rev_data[2] == MOSQ_MSB(pkt_id) && rev_data[3] == MOSQ_LSB(pkt_id))
   \                     ??MQTT_UnPacketPublishRel_0:
   \   000012   8A82         MOV     DPL,R2
   \   000014   8B83         MOV     DPH,R3
   \   000016   A3           INC     DPTR
   \   000017   A3           INC     DPTR
   \   000018   E0           MOVX    A,@DPTR
   \   000019   C0E0         PUSH    A
   \   00001B   ED           MOV     A,R5
   \   00001C   F8           MOV     R0,A
   \   00001D   D0E0         POP     A
   \   00001F   68           XRL     A,R0
   \   000020   70EC         JNZ     ??MQTT_UnPacketPublishRel_1
   \   000022   8A82         MOV     DPL,R2
   \   000024   8B83         MOV     DPH,R3
   \   000026   A3           INC     DPTR
   \   000027   A3           INC     DPTR
   \   000028   A3           INC     DPTR
   \   000029   E0           MOVX    A,@DPTR
   \   00002A   6C           XRL     A,R4
   \   00002B   70E1         JNZ     ??MQTT_UnPacketPublishRel_1
   1159          		return 0;
   \   00002D   7900         MOV     R1,#0x0
   \                     ??MQTT_UnPacketPublishRel_2:
   \   00002F   02....       LJMP    ?Subroutine4 & 0xFFFF
   1160          	else
   1161          		return 1;
   1162          
   1163          }
   1164          
   1165          //==========================================================
   1166          //	º¯ÊýÃû³Æ£º	MQTT_PacketPublishComp
   1167          //
   1168          //	º¯Êý¹¦ÄÜ£º	Publish CompÏûÏ¢×é°ü
   1169          //
   1170          //	Èë¿Ú²ÎÊý£º	pkt_id£ºpacket id
   1171          //				mqttPacket£º°üÖ¸Õë
   1172          //
   1173          //	·µ»Ø²ÎÊý£º	0-³É¹¦		1-Ê§°ÜÔ­Òò
   1174          //
   1175          //	ËµÃ÷£º		µ±ÊÕµ½µÄPublishÏûÏ¢µÄQoSµÈ¼¶Îª2Ê±£¬ÏÈÊÕµ½rec£¬ÔÙ»Ø¸´rel
   1176          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1177          uint1 MQTT_PacketPublishComp(uint16 pkt_id, MQTT_PACKET_STRUCTURE *mqttPacket)
   \                     MQTT_PacketPublishComp:
   1178          {
   \   000000   74F0         MOV     A,#-0x10
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 0,R2
   \   000007   8B..         MOV     ?V0 + 1,R3
   \   000009   EC           MOV     A,R4
   \   00000A   FE           MOV     R6,A
   \   00000B   ED           MOV     A,R5
   \   00000C   FF           MOV     R7,A
   1179          
   1180          	MQTT_NewBuffer(mqttPacket, 4);
   \   00000D                ; Setup parameters for call to function MQTT_NewBuffer
   \   00000D   90....       MOV     DPTR,#__Constant_4
   \   000010   12....       LCALL   ?PUSH_XSTACK8_X_FOUR
   \   000013   12....       LCALL   ?Subroutine47 & 0xFFFF
   \                     ??CrossCallReturnLabel_210:
   \   000016   12....       LCALL   ?DEALLOC_XSTACK8
   1181          	if(mqttPacket->_data == NULL)
   \   000019   12....       LCALL   ?Subroutine9 & 0xFFFF
   \                     ??CrossCallReturnLabel_147:
   \   00001C   7004         JNZ     ??MQTT_PacketPublishComp_0
   1182          		return 1;
   \   00001E   7901         MOV     R1,#0x1
   \   000020   8072         SJMP    ??MQTT_PacketPublishComp_1
   1183          	
   1184          /*************************************¹Ì¶¨Í·²¿***********************************************/
   1185          	
   1186          	//¹Ì¶¨Í·²¿----------------------Í·²¿ÏûÏ¢-------------------------------------------------
   1187          	mqttPacket->_data[mqttPacket->_len++] = MQTT_PKT_PUBCOMP << 4;
   \                     ??MQTT_PacketPublishComp_0:
   \   000022   12....       LCALL   ?Subroutine37 & 0xFFFF
   \                     ??CrossCallReturnLabel_63:
   \   000025   12....       LCALL   ?L_MOV_X
   \   000028   8E82         MOV     DPL,R6
   \   00002A   8F83         MOV     DPH,R7
   \   00002C   12....       LCALL   ??Subroutine91_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_270:
   \   00002F   7470         MOV     A,#0x70
   \   000031   12....       LCALL   ??Subroutine87_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_247:
   \   000034   12....       LCALL   ?L_MOV_X
   \   000037   8A82         MOV     DPL,R2
   \   000039   8B83         MOV     DPH,R3
   \   00003B   78..         MOV     R0,#?V0 + 4
   \   00003D   12....       LCALL   ?L_ADD_TO_X
   1188          	
   1189          	//¹Ì¶¨Í·²¿----------------------Ê£Óà³¤¶È-------------------------------------------------
   1190          	mqttPacket->_data[mqttPacket->_len++] = 2;
   \   000040   8A82         MOV     DPL,R2
   \   000042   8B83         MOV     DPH,R3
   \   000044   78..         MOV     R0,#?V0 + 4
   \   000046   12....       LCALL   ?L_MOV_X
   \   000049   12....       LCALL   ?Subroutine12 & 0xFFFF
   \                     ??CrossCallReturnLabel_14:
   \   00004C   12....       LCALL   ??Subroutine87_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_248:
   \   00004F   12....       LCALL   ?L_MOV_X
   \   000052   8A82         MOV     DPL,R2
   \   000054   8B83         MOV     DPH,R3
   \   000056   78..         MOV     R0,#?V0 + 4
   \   000058   12....       LCALL   ?L_ADD_TO_X
   1191          	
   1192          /*************************************¿É±äÍ·²¿***********************************************/
   1193          	
   1194          	//¿É±äÍ·²¿----------------------pkt_id³¤¶È-----------------------------------------------
   1195          	mqttPacket->_data[mqttPacket->_len++] = pkt_id >> 8;
   \   00005B   8A82         MOV     DPL,R2
   \   00005D   8B83         MOV     DPH,R3
   \   00005F   78..         MOV     R0,#?V0 + 4
   \   000061   12....       LCALL   ?L_MOV_X
   \   000064   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_254:
   \   000067   12....       LCALL   ?L_MOV_X
   \   00006A   8A82         MOV     DPL,R2
   \   00006C   8B83         MOV     DPH,R3
   \   00006E   78..         MOV     R0,#?V0 + 4
   \   000070   12....       LCALL   ?L_ADD_TO_X
   1196          	mqttPacket->_data[mqttPacket->_len++] = pkt_id & 0xff;
   \   000073   C0..         PUSH    ?V0 + 0
   \   000075   8A82         MOV     DPL,R2
   \   000077   8B83         MOV     DPH,R3
   \   000079   78..         MOV     R0,#?V0 + 0
   \   00007B   12....       LCALL   ?L_MOV_X
   \   00007E   12....       LCALL   ?Subroutine10 & 0xFFFF
   \                     ??CrossCallReturnLabel_7:
   \   000081   D0E0         POP     A
   \   000083   12....       LCALL   ??Subroutine92_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_282:
   \   000086   12....       LCALL   ?L_MOV_X
   \   000089   8A82         MOV     DPL,R2
   \   00008B   8B83         MOV     DPH,R3
   \   00008D   78..         MOV     R0,#?V0 + 0
   \   00008F   12....       LCALL   ?L_ADD_TO_X
   1197          	
   1198          	return 0;
   \   000092   7900         MOV     R1,#0x0
   \                     ??MQTT_PacketPublishComp_1:
   \   000094   02....       LJMP    ?Subroutine1 & 0xFFFF
   1199          
   1200          }
   1201          
   1202          //==========================================================
   1203          //	º¯ÊýÃû³Æ£º	MQTT_UnPacketPublishComp
   1204          //
   1205          //	º¯Êý¹¦ÄÜ£º	Publish CompÏûÏ¢½â°ü
   1206          //
   1207          //	Èë¿Ú²ÎÊý£º	rev_data£º½ÓÊÕµ½µÄÊý¾Ý
   1208          //
   1209          //	·µ»Ø²ÎÊý£º	0-³É¹¦		1-Ê§°Ü
   1210          //
   1211          //	ËµÃ÷£º		
   1212          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1213          uint1 MQTT_UnPacketPublishComp(uint8 *rev_data)
   \                     MQTT_UnPacketPublishComp:
   1214          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   1215          
   1216          	if(rev_data[1] != 2)
   \   000004   8A82         MOV     DPL,R2
   \   000006   8B83         MOV     DPH,R3
   \   000008   A3           INC     DPTR
   \   000009   E0           MOVX    A,@DPTR
   \   00000A   6402         XRL     A,#0x2
   \   00000C   6004         JZ      ??MQTT_UnPacketPublishComp_0
   1217          		return 1;
   \                     ??MQTT_UnPacketPublishComp_1:
   \   00000E   7901         MOV     R1,#0x1
   \   000010   8017         SJMP    ??MQTT_UnPacketPublishComp_2
   1218          
   1219          	if(rev_data[2] == MOSQ_MSB(MQTT_PUBLISH_ID) && rev_data[3] == MOSQ_LSB(MQTT_PUBLISH_ID))
   \                     ??MQTT_UnPacketPublishComp_0:
   \   000012   8A82         MOV     DPL,R2
   \   000014   8B83         MOV     DPH,R3
   \   000016   A3           INC     DPTR
   \   000017   A3           INC     DPTR
   \   000018   E0           MOVX    A,@DPTR
   \   000019   70F3         JNZ     ??MQTT_UnPacketPublishComp_1
   \   00001B   8A82         MOV     DPL,R2
   \   00001D   8B83         MOV     DPH,R3
   \   00001F   A3           INC     DPTR
   \   000020   A3           INC     DPTR
   \   000021   A3           INC     DPTR
   \   000022   E0           MOVX    A,@DPTR
   \   000023   640A         XRL     A,#0xa
   \   000025   70E7         JNZ     ??MQTT_UnPacketPublishComp_1
   1220          		return 0;
   \   000027   7900         MOV     R1,#0x0
   \                     ??MQTT_UnPacketPublishComp_2:
   \   000029   02....       LJMP    ?Subroutine4 & 0xFFFF
   1221          	else
   1222          		return 1;
   1223          
   1224          }
   1225          
   1226          //==========================================================
   1227          //	º¯ÊýÃû³Æ£º	MQTT_PacketPing
   1228          //
   1229          //	º¯Êý¹¦ÄÜ£º	ÐÄÌøÇëÇó×é°ü
   1230          //
   1231          //	Èë¿Ú²ÎÊý£º	mqttPacket£º°üÖ¸Õë
   1232          //
   1233          //	·µ»Ø²ÎÊý£º	0-³É¹¦		1-Ê§°Ü
   1234          //
   1235          //	ËµÃ÷£º		
   1236          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1237          uint1 MQTT_PacketPing(MQTT_PACKET_STRUCTURE *mqttPacket)
   \                     MQTT_PacketPing:
   1238          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   1239          
   1240          	MQTT_NewBuffer(mqttPacket, 2);
   \   000009                ; Setup parameters for call to function MQTT_NewBuffer
   \   000009   90....       MOV     DPTR,#__Constant_2
   \   00000C   12....       LCALL   ?PUSH_XSTACK8_X_FOUR
   \   00000F   12....       LCALL   ??Subroutine84_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_216:
   \   000012   12....       LCALL   ?DEALLOC_XSTACK8
   1241          	if(mqttPacket->_data == NULL)
   \   000015   12....       LCALL   ?Subroutine9 & 0xFFFF
   \                     ??CrossCallReturnLabel_148:
   \   000018   7004         JNZ     ??MQTT_PacketPing_0
   1242          		return 1;
   \   00001A   7901         MOV     R1,#0x1
   \   00001C   8034         SJMP    ??MQTT_PacketPing_1
   1243          	
   1244          /*************************************¹Ì¶¨Í·²¿***********************************************/
   1245          	
   1246          	//¹Ì¶¨Í·²¿----------------------Í·²¿ÏûÏ¢-------------------------------------------------
   1247          	mqttPacket->_data[mqttPacket->_len++] = MQTT_PKT_PINGREQ << 4;
   \                     ??MQTT_PacketPing_0:
   \   00001E   12....       LCALL   ?Subroutine38 & 0xFFFF
   \                     ??CrossCallReturnLabel_65:
   \   000021   12....       LCALL   ?L_MOV_X
   \   000024   12....       LCALL   ?Subroutine10 & 0xFFFF
   \                     ??CrossCallReturnLabel_8:
   \   000027   74C0         MOV     A,#-0x40
   \   000029   12....       LCALL   ??Subroutine92_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_283:
   \   00002C   12....       LCALL   ?L_MOV_X
   \   00002F   8A82         MOV     DPL,R2
   \   000031   8B83         MOV     DPH,R3
   \   000033   78..         MOV     R0,#?V0 + 0
   \   000035   12....       LCALL   ?L_ADD_TO_X
   1248          	
   1249          	//¹Ì¶¨Í·²¿----------------------Ê£Óà³¤¶È-------------------------------------------------
   1250          	mqttPacket->_data[mqttPacket->_len++] = 0;
   \   000038   8A82         MOV     DPL,R2
   \   00003A   8B83         MOV     DPH,R3
   \   00003C   78..         MOV     R0,#?V0 + 0
   \   00003E   12....       LCALL   ?L_MOV_X
   \   000041   12....       LCALL   ?Subroutine7 & 0xFFFF
   \                     ??CrossCallReturnLabel_285:
   \   000044   12....       LCALL   ?L_MOV_X
   \   000047   8A82         MOV     DPL,R2
   \   000049   8B83         MOV     DPH,R3
   \   00004B   78..         MOV     R0,#?V0 + 0
   \   00004D   12....       LCALL   ?L_ADD_TO_X
   1251          	
   1252          	return 0;
   \   000050   7900         MOV     R1,#0x0
   \                     ??MQTT_PacketPing_1:
   \   000052   02....       LJMP    ?Subroutine3 & 0xFFFF
   1253          
   1254          }

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MQTT_NewBuffer?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MQTT_NewBuffer

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MQTT_DeleteBuffer?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MQTT_DeleteBuffer

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MQTT_DumpLength?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MQTT_DumpLength

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MQTT_ReadLength?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MQTT_ReadLength

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MQTT_UnPacketRecv?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MQTT_UnPacketRecv

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MQTT_PacketConnect?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MQTT_PacketConnect

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MQTT_PacketDisConnect?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MQTT_PacketDisConnect

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MQTT_UnPacketConnectAck?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MQTT_UnPacketConnectAck

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MQTT_PacketSaveData?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MQTT_PacketSaveData

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MQTT_UnPacketCmd?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MQTT_UnPacketCmd

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MQTT_PacketCmdResp?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MQTT_PacketCmdResp

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MQTT_PacketSubscribe?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MQTT_PacketSubscribe

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MQTT_UnPacketSubscribe?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MQTT_UnPacketSubscribe

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MQTT_PacketUnSubscribe?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MQTT_PacketUnSubscribe

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MQTT_UnPacketUnSubscribe?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MQTT_UnPacketUnSubscribe

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MQTT_PacketPublish?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MQTT_PacketPublish

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MQTT_UnPacketPublish?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MQTT_UnPacketPublish

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MQTT_PacketPublishAck?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MQTT_PacketPublishAck

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MQTT_UnPacketPublishAck?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MQTT_UnPacketPublishAck

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MQTT_PacketPublishRec?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MQTT_PacketPublishRec

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MQTT_UnPacketPublishRec?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MQTT_UnPacketPublishRec

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MQTT_PacketPublishRel?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MQTT_PacketPublishRel

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MQTT_UnPacketPublishRel?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MQTT_UnPacketPublishRel

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MQTT_PacketPublishComp?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MQTT_PacketPublishComp

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MQTT_UnPacketPublishComp?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MQTT_UnPacketPublishComp

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MQTT_PacketPing?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MQTT_PacketPing

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "$creq">`:
   \   000000   24637265     DB "$creq"
   \            7100    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "">`:
   \   000000   00           DB ""

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "$dp">`:
   \   000000   24647000     DB "$dp"

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "UnPacket mem 11\\r\\n">`:
   \   000000   556E5061     DB "UnPacket mem 11\015\012"
   \            636B6574
   \            206D656D
   \            2031310D
   \            0A00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "UnPacket mem 22\\r\\n">`:
   \   000000   556E5061     DB "UnPacket mem 22\015\012"
   \            636B6574
   \            206D656D
   \            2032320D
   \            0A00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>`:
   \   000000   00           DB 0
   \   000001   00000000     DB 0, 0, 0, 0, 0, 0, 0, 0
   \            00000000
   \   000009   00000000     DB 0, 0, 0, 0, 0, 0, 0, 0
   \            00000000
   \   000011   00000000     DB 0, 0, 0, 0, 0, 0, 0, 0
   \            00000000
   \   000019   00000000     DB 0, 0, 0, 0, 0, 0, 0, 0
   \            00000000
   \   000021   00000000     DB 0, 0, 0, 0, 0, 0, 0, 0
   \            00000000
   \   000029   00000000     DB 0, 0, 0, 0, 0, 0, 0, 0
   \            00000000
   \   000031   00           DB 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "$crsp/%s">`:
   \   000000   24637273     DB "$crsp/%s"
   \            702F2573
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "UnPacketPublish 11.\\r\\n">`:
   \   000000   556E5061     DB "UnPacketPublish 11.\015\012"
   \            636B6574
   \            5075626C
   \            69736820
   \            31312E0D
   \            0A00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "UnPacketPublish 22.\\r\\n">`:
   \   000000   556E5061     DB "UnPacketPublish 22.\015\012"
   \            636B6574
   \            5075626C
   \            69736820
   \            32322E0D
   \            0A00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "UnPacketPublish 33.\\r\\n">`:
   \   000000   556E5061     DB "UnPacketPublish 33.\015\012"
   \            636B6574
   \            5075626C
   \            69736820
   \            33332E0D
   \            0A00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "UnPacketPublish 44.\\r\\n">`:
   \   000000   556E5061     DB "UnPacketPublish 44.\015\012"
   \            636B6574
   \            5075626C
   \            69736820
   \            34342E0D
   \            0A00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_0:
   \   000000   00000000     DD 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_1:
   \   000000   01000000     DD 1

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_5:
   \   000000   05000000     DD 5

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_200000:
   \   000000   00002000     DD 2097152

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_4:
   \   000000   04000000     DD 4

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_2:
   \   000000   02000000     DD 2

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_3:
   \   000000   03000000     DD 3

   Maximum stack usage in bytes:

     Function                 ISTACK PSTACK XSTACK
     --------                 ------ ------ ------
     MQTT_DeleteBuffer            0      0     39
     MQTT_DumpLength              1      0     46
     MQTT_NewBuffer               0      0     54
     MQTT_PacketCmdResp           2      0     82
       -> strlen                  0      0    128
       -> sprintf                 0      0    132
       -> strlen                  0      0    148
       -> MQTT_PacketPublish      0      0    160
     MQTT_PacketConnect           1      0     48
       -> strlen                  0      0     58
       -> strlen                  0      0     58
       -> strlen                  0      0     58
       -> strlen                  0      0     58
       -> strlen                  0      0     58
       -> MQTT_NewBuffer          0      0     66
       -> osal_memset             0      0     62
       -> MQTT_DumpLength         0      0     58
       -> MQTT_DeleteBuffer       0      0     58
       -> strncat                 0      0     62
       -> strlen                  0      0     58
       -> strncat                 0      0     62
       -> strlen                  0      0     58
       -> strncat                 0      0     62
       -> strlen                  0      0     58
       -> strncat                 0      0     62
       -> strlen                  0      0     58
       -> strncat                 0      0     62
     MQTT_PacketDisConnect        0      0     16
       -> MQTT_NewBuffer          0      0     32
     MQTT_PacketPing              0      0     16
       -> MQTT_NewBuffer          0      0     32
     MQTT_PacketPublish           1      0    114
       -> MQTT_NewBuffer          0      0     68
       -> memset                  0      0     64
       -> MQTT_DumpLength         0      0     60
       -> MQTT_DeleteBuffer       0      0     60
       -> strncat                 0      0     64
       -> strncat                 0      0     64
     MQTT_PacketPublishAck        1      0     20
       -> MQTT_NewBuffer          0      0     40
     MQTT_PacketPublishComp       1      0     20
       -> MQTT_NewBuffer          0      0     40
     MQTT_PacketPublishRec        1      0     20
       -> MQTT_NewBuffer          0      0     40
     MQTT_PacketPublishRel        1      0     20
       -> MQTT_NewBuffer          0      0     40
     MQTT_PacketSaveData          1      0     36
       -> MQTT_PacketPublish      0      0     64
     MQTT_PacketSubscribe         1      0     32
       -> strlen                  0      0     50
       -> MQTT_NewBuffer          0      0     58
       -> MQTT_DumpLength         0      0     50
       -> MQTT_DeleteBuffer       0      0     50
       -> strlen                  0      0     50
       -> strncat                 0      0     54
     MQTT_PacketUnSubscribe       1      0     30
       -> strlen                  0      0     48
       -> MQTT_NewBuffer          0      0     56
       -> MQTT_DumpLength         0      0     48
       -> MQTT_DeleteBuffer       0      0     48
       -> strlen                  0      0     48
       -> strncat                 0      0     52
     MQTT_ReadLength              0      0     58
     MQTT_UnPacketCmd             0      0     32
       -> strchr                  0      0     48
       -> MQTT_ReadLength         0      0     56
       -> debug                   0      0     48
       -> memset                  0      0     52
       -> memcpy                  0      0     52
       -> debug                   0      0     48
       -> memset                  0      0     52
       -> memcpy                  0      0     52
     MQTT_UnPacketConnectAck      2      0      0
     MQTT_UnPacketPublish         2      0     42
       -> MQTT_ReadLength         0      0     64
       -> strstr                  0      0     56
       -> debug                   0      0     56
       -> memset                  0      0     60
       -> memcpy                  0      0     60
       -> debug                   0      0     56
       -> memset                  0      0     60
       -> memcpy                  0      0     60
       -> debug                   0      0     56
       -> memset                  0      0     60
       -> memcpy                  0      0     60
       -> debug                   0      0     56
       -> memset                  0      0     60
       -> memcpy                  0      0     60
       -> strchr                  0      0     56
       -> strchr                  0      0     56
     MQTT_UnPacketPublishAck      2      0      0
     MQTT_UnPacketPublishComp     2      0      0
     MQTT_UnPacketPublishRec      2      0      0
     MQTT_UnPacketPublishRel      3      0      0
     MQTT_UnPacketRecv            2      0     20
       -> MQTT_ReadLength         0      0     40
       -> strstr                  0      0     32
     MQTT_UnPacketSubscribe       2      0      0
     MQTT_UnPacketUnSubscribe     2      0      0


   Segment part sizes:

     Function/Label                        Bytes
     --------------                        -----
     MQTT_NewBuffer                         119
     ?Subroutine0                             5
     ??Subroutine80_0                         7
     ?Subroutine10                            4
     ?Subroutine57                           17
     MQTT_DeleteBuffer                       72
     MQTT_DumpLength                         88
     ?Subroutine1                             5
     MQTT_ReadLength                        200
     ?Subroutine2                             3
     ??Subroutine81_0                         5
     MQTT_UnPacketRecv                      232
     ?Subroutine3                             5
     MQTT_PacketConnect                    1305
     ?Subroutine60                            6
     ??Subroutine72_0                         4
     ?Subroutine43                            6
     ?Subroutine42                            6
     ?Subroutine35                           12
     ?Subroutine32                           12
     ?Subroutine26                            4
     ?Subroutine25                            8
     ?Subroutine24                           12
     ?Subroutine17                           12
     ?Subroutine15                            6
     ?Subroutine58                           12
     ?Subroutine11                           19
     ?Subroutine53                           17
     ?Subroutine71                            6
     ??Subroutine73_0                         8
     ?Subroutine64                            8
     ?Subroutine48                            7
     ??Subroutine74_0                         7
     ??Subroutine75_0                        17
     ??Subroutine79_0                         4
     ?Subroutine69                            7
     ?Subroutine6                             5
     ?Subroutine70                            9
     ?Subroutine66                           11
     ?Subroutine49                            6
     ??Subroutine84_0                         6
     ?Subroutine45                            4
     ?Subroutine65                            6
     ??Subroutine87_0                         7
     MQTT_PacketDisConnect                   85
     ?Subroutine9                             4
     ?Subroutine7                             4
     ??Subroutine92_0                         7
     ?Subroutine38                            6
     ?Subroutine63                           17
     MQTT_UnPacketConnectAck                 47
     ?Subroutine4                             7
     MQTT_PacketSaveData                    182
     ?Subroutine30                            8
     ?Subroutine40                           11
     ?Subroutine13                            6
     ??Subroutine91_0                         4
     ?Subroutine56                            6
     ?Subroutine68                           11
     MQTT_UnPacketCmd                       317
     ?Subroutine50                            8
     ??Subroutine82_0                         6
     ?Subroutine67                            5
     ??Subroutine88_0                         6
     ??Subroutine89_0                         9
     MQTT_PacketCmdResp                     166
     MQTT_PacketSubscribe                   409
     ?Subroutine46                           12
     ?Subroutine21                            6
     ??Subroutine76_0                         6
     ?Subroutine14                           33
     ??Subroutine77_0                         6
     ??Subroutine78_0                         6
     ?Subroutine54                            2
     ?Subroutine51                            4
     ?Subroutine44                            6
     ?Subroutine41                           11
     ?Subroutine36                           19
     ?Subroutine34                           16
     ?Subroutine33                           19
     ?Subroutine29                           12
     ?Subroutine59                            8
     ?Subroutine27                           13
     ?Subroutine20                           33
     ?Subroutine61                           10
     ??Subroutine86_0                         4
     MQTT_UnPacketSubscribe                  54
     MQTT_PacketUnSubscribe                 343
     MQTT_UnPacketUnSubscribe                31
     MQTT_PacketPublish                     738
     ??Subroutine83_0                         1
     ?Subroutine28                            2
     ??Subroutine85_0                         9
     ?Subroutine19                           10
     ?Subroutine18                            7
     ?Subroutine22                            4
     ?Subroutine62                            9
     MQTT_UnPacketPublish                   676
     ?Subroutine52                           15
     ?Subroutine39                           13
     ?Subroutine31                            6
     ?Subroutine23                            5
     ?Subroutine55                           18
     ?Subroutine16                            6
     ??Subroutine90_0                        14
     ?Subroutine8                            38
     ?Subroutine47                            3
     ?Subroutine5                             7
     MQTT_PacketPublishAck                  151
     ?Subroutine37                            6
     ?Subroutine12                           10
     MQTT_UnPacketPublishAck                 41
     MQTT_PacketPublishRec                  148
     MQTT_UnPacketPublishRec                 44
     MQTT_PacketPublishRel                  151
     MQTT_UnPacketPublishRel                 50
     MQTT_PacketPublishComp                 151
     MQTT_UnPacketPublishComp                44
     MQTT_PacketPing                         85
     ??MQTT_NewBuffer?relay                   6
     ??MQTT_DeleteBuffer?relay                6
     ??MQTT_DumpLength?relay                  6
     ??MQTT_ReadLength?relay                  6
     ??MQTT_UnPacketRecv?relay                6
     ??MQTT_PacketConnect?relay               6
     ??MQTT_PacketDisConnect?relay            6
     ??MQTT_UnPacketConnectAck?relay          6
     ??MQTT_PacketSaveData?relay              6
     ??MQTT_UnPacketCmd?relay                 6
     ??MQTT_PacketCmdResp?relay               6
     ??MQTT_PacketSubscribe?relay             6
     ??MQTT_UnPacketSubscribe?relay           6
     ??MQTT_PacketUnSubscribe?relay           6
     ??MQTT_UnPacketUnSubscribe?relay         6
     ??MQTT_PacketPublish?relay               6
     ??MQTT_UnPacketPublish?relay             6
     ??MQTT_PacketPublishAck?relay            6
     ??MQTT_UnPacketPublishAck?relay          6
     ??MQTT_PacketPublishRec?relay            6
     ??MQTT_UnPacketPublishRec?relay          6
     ??MQTT_PacketPublishRel?relay            6
     ??MQTT_UnPacketPublishRel?relay          6
     ??MQTT_PacketPublishComp?relay           6
     ??MQTT_UnPacketPublishComp?relay         6
     ??MQTT_PacketPing?relay                  6
     ?<Constant "$creq">                      6
     ?<Constant "">                           1
     ?<Constant "$dp">                        4
     ?<Constant "UnPacket mem 11\r\n">       18
     ?<Constant "UnPacket mem 22\r\n">       18
     ?<Constant {0}>                         50
     ?<Constant "$crsp/%s">                   9
     ?<Constant "UnPacketPublish 11.\r\n">   22
     ?<Constant "UnPacketPublish 22.\r\n">   22
     ?<Constant "UnPacketPublish 33.\r\n">   22
     ?<Constant "UnPacketPublish 44.\r\n">   22
     __Constant_0                             4
     __Constant_1                             4
     __Constant_5                             4
     __Constant_200000                        4
     __Constant_4                             4
     __Constant_2                             4
     __Constant_3                             4

 
 6 768 bytes in segment BANKED_CODE
   156 bytes in segment BANK_RELAYS
   222 bytes in segment XDATA_ROM_C
 
 6 924 bytes of CODE  memory
   194 bytes of CONST memory (+ 28 bytes shared)

Errors: none
Warnings: 42
