///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.3.10338/W32 for 8051        27/May/2020  18:08:58 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢ /
//                          »·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé /
//                          )\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp /
//                          \Source\mqtt.c                                    /
//    Command line       =  -f "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼° /
//                          ¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTT /
//                          Ð­Òé)\ZStack-2.5.1a\Projects\zstack\Samples\Sampl /
//                          eApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wRouter.c /
//                          fg" (-DCPU32MHZ -DROOT=__near_func                /
//                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                  /
//                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8        /
//                          -DMAC_CFG_RX_MAX=5 -DRTR_NWK) -f                  /
//                          "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª· /
//                          ¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Ò /
//                          é)\ZStack-2.5.1a\Projects\zstack\Samples\SampleAp /
//                          p\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg" /
//                           (-DZIGBEEPRO -DSECURE=0 -DZG_SECURE_DYNAMIC=0    /
//                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800         /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFF1                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DLINK_STATUS_JITTER_MASK=0x007F                  /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const    /
//                          __code" -DGENERIC=__generic                       /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×Ê /
//                          ÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ /
//                          ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\ /
//                          zstack\Samples\SampleApp\Source\mqtt.c" -D        /
//                          ZTOOL_P1 -D xMT_TASK -D xMT_SYS_FUNC -D           /
//                          xMT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG -lC           /
//                          "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª· /
//                          ¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Ò /
//                          é)\ZStack-2.5.1a\Projects\zstack\Samples\SampleAp /
//                          p\CC2530DB\RouterEB\List\" -lA                    /
//                          "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª· /
//                          ¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Ò /
//                          é)\ZStack-2.5.1a\Projects\zstack\Samples\SampleAp /
//                          p\CC2530DB\RouterEB\List\" --diag_suppress        /
//                          Pe001,Pa010 -o "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\ /
//                          Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ /
//                          ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\S /
//                          amples\SampleApp\CC2530DB\RouterEB\Obj\" -e       /
//                          --no_code_motion --debug --core=plain             /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I                           /
//                          "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª· /
//                          ¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Ò /
//                          é)\ZStack-2.5.1a\Projects\zstack\Samples\SampleAp /
//                          p\CC2530DB\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3 /
//                          \Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.° /
//                          ¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\ /
//                          Samples\SampleApp\CC2530DB\..\Source\" -I         /
//                          "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª· /
//                          ¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Ò /
//                          é)\ZStack-2.5.1a\Projects\zstack\Samples\SampleAp /
//                          p\CC2530DB\..\..\..\ZMain\TI2530DB\" -I           /
//                          "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª· /
//                          ¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Ò /
//                          é)\ZStack-2.5.1a\Projects\zstack\Samples\SampleAp /
//                          p\CC2530DB\..\..\..\..\..\Components\hal\include\ /
//                          " -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ /
//                          ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQ /
//                          TTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Samples\Sam /
//                          pleApp\CC2530DB\..\..\..\..\..\Components\hal\tar /
//                          get\CC2530EB\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4 /
//                          .3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7 /
//                          .°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstac /
//                          k\Samples\SampleApp\CC2530DB\..\..\..\..\..\Compo /
//                          nents\mac\include\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×Ê /
//                          ÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ /
//                          ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\ /
//                          zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\ /
//                          Components\mac\high_level\" -I                    /
//                          "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª· /
//                          ¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Ò /
//                          é)\ZStack-2.5.1a\Projects\zstack\Samples\SampleAp /
//                          p\CC2530DB\..\..\..\..\..\Components\mac\low_leve /
//                          l\srf04\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§ /
//                          Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢Àï /
//                          ÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Sam /
//                          ples\SampleApp\CC2530DB\..\..\..\..\..\Components /
//                          \mac\low_level\srf04\single_chip\" -I             /
//                          "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª· /
//                          ¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Ò /
//                          é)\ZStack-2.5.1a\Projects\zstack\Samples\SampleAp /
//                          p\CC2530DB\..\..\..\..\..\Components\mt\" -I      /
//                          "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª· /
//                          ¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Ò /
//                          é)\ZStack-2.5.1a\Projects\zstack\Samples\SampleAp /
//                          p\CC2530DB\..\..\..\..\..\Components\osal\include /
//                          \" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒ /
//                          Ô¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(M /
//                          QTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Samples\Sa /
//                          mpleApp\CC2530DB\..\..\..\..\..\Components\servic /
//                          es\saddr\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ /
//                          §Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢À /
//                          ïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Sa /
//                          mples\SampleApp\CC2530DB\..\..\..\..\..\Component /
//                          s\services\sdata\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁ /
//                          Ï-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\Ê /
//                          µÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\z /
//                          stack\Samples\SampleApp\CC2530DB\..\..\..\..\..\C /
//                          omponents\stack\af\" -I                           /
//                          "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª· /
//                          ¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Ò /
//                          é)\ZStack-2.5.1a\Projects\zstack\Samples\SampleAp /
//                          p\CC2530DB\..\..\..\..\..\Components\stack\nwk\"  /
//                          -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼° /
//                          ¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTT /
//                          Ð­Òé)\ZStack-2.5.1a\Projects\zstack\Samples\Sampl /
//                          eApp\CC2530DB\..\..\..\..\..\Components\stack\sap /
//                          i\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³Ì /
//                          ÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT( /
//                          MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Samples\S /
//                          ampleApp\CC2530DB\..\..\..\..\..\Components\stack /
//                          \sec\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°À /
//                          ý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆI /
//                          OT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Sample /
//                          s\SampleApp\CC2530DB\..\..\..\..\..\Components\st /
//                          ack\sys\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§ /
//                          Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢Àï /
//                          ÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Sam /
//                          ples\SampleApp\CC2530DB\..\..\..\..\..\Components /
//                          \stack\zdo\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3 /
//                          \Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.° /
//                          ¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\ /
//                          Samples\SampleApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\zmac\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ /
//                          §Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢À /
//                          ïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Sa /
//                          mples\SampleApp\CC2530DB\..\..\..\..\..\Component /
//                          s\zmac\f8w\" -Ohz                                 /
//    List file          =  I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢ /
//                          »·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé /
//                          )\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp /
//                          \CC2530DB\RouterEB\List\mqtt.s51                  /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME mqtt

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?L_MOV_X
        EXTERN ?MOVE_LONG8_XDATA_XDATA
        EXTERN ?PUSH_XSTACK8_X_FOUR
        EXTERN ?PUSH_XSTACK8_X_TWO
        EXTERN ?PUSH_XSTACK_I_FOUR
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?V0
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN __INIT_XDATA_Z

        PUBLIC ??OneNet_DevLink?relay
        FUNCTION ??OneNet_DevLink?relay,0203H
        PUBLIC ??OneNet_RevPro?relay
        FUNCTION ??OneNet_RevPro?relay,0203H
        PUBLIC ??mqtt_publish_topic?relay
        FUNCTION ??mqtt_publish_topic?relay,0203H
        PUBLIC ??mqtt_subscribe_topic?relay
        FUNCTION ??mqtt_subscribe_topic?relay,0203H
        PUBLIC ??onenet_mqtt_send_heart?relay
        FUNCTION ??onenet_mqtt_send_heart?relay,0203H
        PUBLIC OneNet_DevLink
        FUNCTION OneNet_DevLink,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 40, STACK
        PUBLIC OneNet_RevPro
        FUNCTION OneNet_RevPro,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 38, STACK
        PUBWEAK __Constant_0
        PUBWEAK __Constant_1
        PUBLIC cmdid_topic
        PUBLIC mqttUsername
        PUBLIC mqtt_publish_topic
        FUNCTION mqtt_publish_topic,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 43, STACK
        PUBLIC mqtt_subscribe_topic
        FUNCTION mqtt_subscribe_topic,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 27, STACK
        PUBLIC onenet_mqtt_send_heart
        FUNCTION onenet_mqtt_send_heart,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC packet_buff
        PUBLIC req_payload
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-2
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B SameValue
        CFI A SameValue
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 SameValue
        CFI R1 SameValue
        CFI R2 SameValue
        CFI R3 SameValue
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT SameValue
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon1
        
sprintf             SYMBOL "sprintf"
debug               SYMBOL "debug"
MQTT_PacketConnect  SYMBOL "MQTT_PacketConnect"
ESP8266_SendData    SYMBOL "ESP8266_SendData"
MQTT_DeleteBuffer   SYMBOL "MQTT_DeleteBuffer"
MQTT_UnPacketRecv   SYMBOL "MQTT_UnPacketRecv"
MQTT_UnPacketCmd    SYMBOL "MQTT_UnPacketCmd"
mqtt_rx             SYMBOL "mqtt_rx"
MQTT_PacketCmdResp  SYMBOL "MQTT_PacketCmdResp"
MQTT_UnPacketPublishAck SYMBOL "MQTT_UnPacketPublishAck"
MQTT_UnPacketPublish SYMBOL "MQTT_UnPacketPublish"
MQTT_PacketPublishAck SYMBOL "MQTT_PacketPublishAck"
MQTT_PacketPublishRec SYMBOL "MQTT_PacketPublishRec"
MQTT_UnPacketPublishRec SYMBOL "MQTT_UnPacketPublishRec"
MQTT_PacketPublishRel SYMBOL "MQTT_PacketPublishRel"
MQTT_UnPacketPublishRel SYMBOL "MQTT_UnPacketPublishRel"
MQTT_PacketPublishComp SYMBOL "MQTT_PacketPublishComp"
MQTT_UnPacketPublishComp SYMBOL "MQTT_UnPacketPublishComp"
MQTT_UnPacketSubscribe SYMBOL "MQTT_UnPacketSubscribe"
MQTT_UnPacketUnSubscribe SYMBOL "MQTT_UnPacketUnSubscribe"
MQTT_PacketPing     SYMBOL "MQTT_PacketPing"
strlen              SYMBOL "strlen"
MQTT_PacketPublish  SYMBOL "MQTT_PacketPublish"
MQTT_PacketSubscribe SYMBOL "MQTT_PacketSubscribe"
??ESP8266_SendData?relay SYMBOL "?relay", ESP8266_SendData
??MQTT_DeleteBuffer?relay SYMBOL "?relay", MQTT_DeleteBuffer
??MQTT_PacketCmdResp?relay SYMBOL "?relay", MQTT_PacketCmdResp
??MQTT_PacketConnect?relay SYMBOL "?relay", MQTT_PacketConnect
??MQTT_PacketPing?relay SYMBOL "?relay", MQTT_PacketPing
??MQTT_PacketPublish?relay SYMBOL "?relay", MQTT_PacketPublish
??MQTT_PacketPublishAck?relay SYMBOL "?relay", MQTT_PacketPublishAck
??MQTT_PacketPublishComp?relay SYMBOL "?relay", MQTT_PacketPublishComp
??MQTT_PacketPublishRec?relay SYMBOL "?relay", MQTT_PacketPublishRec
??MQTT_PacketPublishRel?relay SYMBOL "?relay", MQTT_PacketPublishRel
??MQTT_PacketSubscribe?relay SYMBOL "?relay", MQTT_PacketSubscribe
??MQTT_UnPacketCmd?relay SYMBOL "?relay", MQTT_UnPacketCmd
??MQTT_UnPacketPublish?relay SYMBOL "?relay", MQTT_UnPacketPublish
??MQTT_UnPacketPublishAck?relay SYMBOL "?relay", MQTT_UnPacketPublishAck
??MQTT_UnPacketPublishComp?relay SYMBOL "?relay", MQTT_UnPacketPublishComp
??MQTT_UnPacketPublishRec?relay SYMBOL "?relay", MQTT_UnPacketPublishRec
??MQTT_UnPacketPublishRel?relay SYMBOL "?relay", MQTT_UnPacketPublishRel
??MQTT_UnPacketRecv?relay SYMBOL "?relay", MQTT_UnPacketRecv
??MQTT_UnPacketSubscribe?relay SYMBOL "?relay", MQTT_UnPacketSubscribe
??MQTT_UnPacketUnSubscribe?relay SYMBOL "?relay", MQTT_UnPacketUnSubscribe
??debug?relay       SYMBOL "?relay", debug
??mqtt_rx?relay     SYMBOL "?relay", mqtt_rx
??sprintf?relay     SYMBOL "?relay", sprintf
??strlen?relay      SYMBOL "?relay", strlen
OneNet_DevLink      SYMBOL "OneNet_DevLink"
??OneNet_DevLink?relay SYMBOL "?relay", OneNet_DevLink
OneNet_RevPro       SYMBOL "OneNet_RevPro"
??OneNet_RevPro?relay SYMBOL "?relay", OneNet_RevPro
mqtt_publish_topic  SYMBOL "mqtt_publish_topic"
??mqtt_publish_topic?relay SYMBOL "?relay", mqtt_publish_topic
mqtt_subscribe_topic SYMBOL "mqtt_subscribe_topic"
??mqtt_subscribe_topic?relay SYMBOL "?relay", mqtt_subscribe_topic
onenet_mqtt_send_heart SYMBOL "onenet_mqtt_send_heart"
??onenet_mqtt_send_heart?relay SYMBOL "?relay", onenet_mqtt_send_heart

        EXTERN sprintf
        FUNCTION sprintf,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN debug
        FUNCTION debug,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN MQTT_PacketConnect
        FUNCTION MQTT_PacketConnect,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ESP8266_SendData
        FUNCTION ESP8266_SendData,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN MQTT_DeleteBuffer
        FUNCTION MQTT_DeleteBuffer,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN MQTT_UnPacketRecv
        FUNCTION MQTT_UnPacketRecv,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN MQTT_UnPacketCmd
        FUNCTION MQTT_UnPacketCmd,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN mqtt_rx
        FUNCTION mqtt_rx,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN MQTT_PacketCmdResp
        FUNCTION MQTT_PacketCmdResp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN MQTT_UnPacketPublishAck
        FUNCTION MQTT_UnPacketPublishAck,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN MQTT_UnPacketPublish
        FUNCTION MQTT_UnPacketPublish,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN MQTT_PacketPublishAck
        FUNCTION MQTT_PacketPublishAck,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN MQTT_PacketPublishRec
        FUNCTION MQTT_PacketPublishRec,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN MQTT_UnPacketPublishRec
        FUNCTION MQTT_UnPacketPublishRec,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN MQTT_PacketPublishRel
        FUNCTION MQTT_PacketPublishRel,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN MQTT_UnPacketPublishRel
        FUNCTION MQTT_UnPacketPublishRel,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN MQTT_PacketPublishComp
        FUNCTION MQTT_PacketPublishComp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN MQTT_UnPacketPublishComp
        FUNCTION MQTT_UnPacketPublishComp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN MQTT_UnPacketSubscribe
        FUNCTION MQTT_UnPacketSubscribe,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN MQTT_UnPacketUnSubscribe
        FUNCTION MQTT_UnPacketUnSubscribe,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN MQTT_PacketPing
        FUNCTION MQTT_PacketPing,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN strlen
        FUNCTION strlen,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN MQTT_PacketPublish
        FUNCTION MQTT_PacketPublish,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN MQTT_PacketSubscribe
        FUNCTION MQTT_PacketSubscribe,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??ESP8266_SendData?relay
        FUNCTION ??ESP8266_SendData?relay,00H
        EXTERN ??MQTT_DeleteBuffer?relay
        FUNCTION ??MQTT_DeleteBuffer?relay,00H
        EXTERN ??MQTT_PacketCmdResp?relay
        FUNCTION ??MQTT_PacketCmdResp?relay,00H
        EXTERN ??MQTT_PacketConnect?relay
        FUNCTION ??MQTT_PacketConnect?relay,00H
        EXTERN ??MQTT_PacketPing?relay
        FUNCTION ??MQTT_PacketPing?relay,00H
        EXTERN ??MQTT_PacketPublish?relay
        FUNCTION ??MQTT_PacketPublish?relay,00H
        EXTERN ??MQTT_PacketPublishAck?relay
        FUNCTION ??MQTT_PacketPublishAck?relay,00H
        EXTERN ??MQTT_PacketPublishComp?relay
        FUNCTION ??MQTT_PacketPublishComp?relay,00H
        EXTERN ??MQTT_PacketPublishRec?relay
        FUNCTION ??MQTT_PacketPublishRec?relay,00H
        EXTERN ??MQTT_PacketPublishRel?relay
        FUNCTION ??MQTT_PacketPublishRel?relay,00H
        EXTERN ??MQTT_PacketSubscribe?relay
        FUNCTION ??MQTT_PacketSubscribe?relay,00H
        EXTERN ??MQTT_UnPacketCmd?relay
        FUNCTION ??MQTT_UnPacketCmd?relay,00H
        EXTERN ??MQTT_UnPacketPublish?relay
        FUNCTION ??MQTT_UnPacketPublish?relay,00H
        EXTERN ??MQTT_UnPacketPublishAck?relay
        FUNCTION ??MQTT_UnPacketPublishAck?relay,00H
        EXTERN ??MQTT_UnPacketPublishComp?relay
        FUNCTION ??MQTT_UnPacketPublishComp?relay,00H
        EXTERN ??MQTT_UnPacketPublishRec?relay
        FUNCTION ??MQTT_UnPacketPublishRec?relay,00H
        EXTERN ??MQTT_UnPacketPublishRel?relay
        FUNCTION ??MQTT_UnPacketPublishRel?relay,00H
        EXTERN ??MQTT_UnPacketRecv?relay
        FUNCTION ??MQTT_UnPacketRecv?relay,00H
        EXTERN ??MQTT_UnPacketSubscribe?relay
        FUNCTION ??MQTT_UnPacketSubscribe?relay,00H
        EXTERN ??MQTT_UnPacketUnSubscribe?relay
        FUNCTION ??MQTT_UnPacketUnSubscribe?relay,00H
        EXTERN ??debug?relay
        FUNCTION ??debug?relay,00H
        EXTERN ??mqtt_rx?relay
        FUNCTION ??mqtt_rx?relay,00H
        EXTERN ??sprintf?relay
        FUNCTION ??sprintf?relay,00H
        EXTERN ??strlen?relay
        FUNCTION ??strlen?relay,00H

// I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\mqtt.c
//    1 /**
//    2 	************************************************************
//    3 	************************************************************
//    4 	************************************************************
//    5 	*	ÎÄ¼þÃû£º 	onenet.c
//    6 	*
//    7 	*	×÷Õß£º 		
//    8 	*
//    9 	*	ÈÕÆÚ£º 		2017-05-08
//   10 	*
//   11 	*	°æ±¾£º 		V1.1
//   12 	*
//   13 	*	ËµÃ÷£º 		ÓëonenetÆ½Ì¨µÄÊý¾Ý½»»¥½Ó¿Ú²ã
//   14 	*
//   15 	*	ÐÞ¸Ä¼ÇÂ¼£º	V1.0£ºÐ­Òé·â×°¡¢·µ»ØÅÐ¶Ï¶¼ÔÚÍ¬Ò»¸öÎÄ¼þ£¬²¢ÇÒ²»Í¬Ð­Òé½Ó¿Ú²»Í¬¡£
//   16 	*				V1.1£ºÌá¹©Í³Ò»½Ó¿Ú¹©Ó¦ÓÃ²ãÊ¹ÓÃ£¬¸ù¾Ý²»Í¬Ð­ÒéÎÄ¼þÀ´·â×°Ð­ÒéÏà¹ØµÄÄÚÈÝ¡£
//   17 	************************************************************
//   18 	************************************************************
//   19 	************************************************************
//   20 **/
//   21 //Ð­ÒéÎÄ¼þ
//   22 #include "mqtt.h"
//   23 #include "mqttkit.h"
//   24 
//   25 //C¿â
//   26 #include <string.h>
//   27 #include <stdio.h>
//   28 
//   29 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   30 uint8 packet_buff[max_packet_len]={0};
packet_buff:
        DS 100
        REQUIRE __INIT_XDATA_Z
//   31 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   32 char cmdid_topic[MAX_CMDID_TOPIC_LEN+1] = {0};
cmdid_topic:
        DS 51
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   33 char req_payload[MAX_REQ_PAYLOAD_LEN+1] = {0};
req_payload:
        DS 101
        REQUIRE __INIT_XDATA_Z
//   34 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   35 unsigned char mqttUsername[30]={0};
mqttUsername:
        DS 30
        REQUIRE __INIT_XDATA_Z
//   36 //==========================================================
//   37 //	º¯ÊýÃû³Æ£º	OneNet_DevLink
//   38 //
//   39 //	º¯Êý¹¦ÄÜ£º	Óëonenet´´½¨Á¬½Ó
//   40 //
//   41 //	Èë¿Ú²ÎÊý£º	ÎÞ
//   42 //
//   43 //	·µ»Ø²ÎÊý£º	0-³É¹¦	1-Ê§°Ü
//   44 //
//   45 //	ËµÃ÷£º		ÓëonenetÆ½Ì¨½¨Á¢Á¬½Ó
//   46 //==========================================================

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   47 _Bool OneNet_DevLink(void)
OneNet_DevLink:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function OneNet_DevLink
        CODE
//   48 {
        FUNCALL OneNet_DevLink, sprintf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_DevLink, debug
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_DevLink, MQTT_PacketConnect
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 40, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_DevLink, ESP8266_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_DevLink, MQTT_DeleteBuffer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_DevLink, debug
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 11
        MOV     A,#-0xb
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 25)
//   49     MQTT_PACKET_STRUCTURE mqttPacket = {packet_buff, 0, max_packet_len, MEM_FLAG_STATIC};                //Ð­Òé°ü
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,#(`?<Constant {packet_buff, 0L, 100L, 2}>` >> 8) & 0xff
        MOV     DPL,#`?<Constant {packet_buff, 0L, 100L, 2}>` & 0xff
        MOV     A,#0xb
        LCALL   ?MOVE_LONG8_XDATA_XDATA
//   50 
//   51 	unsigned char *dataPtr;
//   52 	
//   53 	_Bool status = 1;
//   54 
//   55         sprintf(mqttUsername, "%s&%s", DeviceName, ProductKey);
        ; Setup parameters for call to function sprintf
        MOV     ?V0 + 0,#`?<Constant "a1lZYHY3VzY">` & 0xff
        MOV     ?V0 + 1,#(`?<Constant "a1lZYHY3VzY">` >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 27)
        MOV     ?V0 + 0,#`?<Constant "board">` & 0xff
        MOV     ?V0 + 1,#(`?<Constant "board">` >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 29)
        MOV     R4,#`?<Constant "%s&%s">` & 0xff
        MOV     R5,#(`?<Constant "%s&%s">` >> 8) & 0xff
        MOV     R2,#mqttUsername & 0xff
        MOV     R3,#(mqttUsername >> 8) & 0xff
        LCALL   ??sprintf?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 25)
//   56         debug( "OneNet_DevLink\r\nmqttUsername:%s, mqttPassword:%s,mqttClientId:%s\r\n", mqttUsername, mqttPassword, mqttClientId);
        MOV     ?V0 + 4,#`?<Constant "a3369feaabeca751749ef...">` & 0xff
        MOV     ?V0 + 5,#(`?<Constant "a3369feaabeca751749ef...">` >> 8) & 0xff
        MOV     ?V0 + 0,#`?<Constant "12345|securemode=3,si...">` & 0xff
        MOV     ?V0 + 1,#(`?<Constant "12345|securemode=3,si...">` >> 8) & 0xff
        ; Setup parameters for call to function debug
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 27)
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 29)
        MOV     ?V0 + 2,#mqttUsername & 0xff
        MOV     ?V0 + 3,#(mqttUsername >> 8) & 0xff
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 31)
        MOV     R2,#`?<Constant "OneNet_DevLink\\r\\nmqttU...">` & 0xff
        MOV     R3,#(`?<Constant "OneNet_DevLink\\r\\nmqttU...">` >> 8) & 0xff
        LCALL   ??debug?relay
        MOV     A,#0x6
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 25)
//   57     //½ÓÈëonenet
//   58 	if(MQTT_PacketConnect(mqttUsername, mqttPassword, mqttClientId, 256, 0, MQTT_QOS_LEVEL0, NULL, NULL, 0, &mqttPacket) == 0)
        ; Setup parameters for call to function MQTT_PacketConnect
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 27)
        MOV     DPTR,#__Constant_0
        LCALL   ?PUSH_XSTACK8_X_FOUR
        CFI CFA_XSP16 add(XSP16, 31)
        CLR     A
        MOV     ?V0 + 2,A
        MOV     ?V0 + 3,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 33)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 35)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
        CFI CFA_XSP16 add(XSP16, 36)
        MOV     ?V0 + 3,#0x1
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 38)
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 40)
        MOV     R1,#0x0
        MOV     R4,?V0 + 4
        MOV     R5,?V0 + 5
        MOV     R2,#mqttUsername & 0xff
        MOV     R3,#(mqttUsername >> 8) & 0xff
        LCALL   ??MQTT_PacketConnect?relay
        MOV     A,#0xf
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 25)
        MOV     A,R1
        JNZ     ??OneNet_DevLink_0
//   59 	{
//   60 		ESP8266_SendData(mqttPacket._data, mqttPacket._len);			//ÉÏ´«Æ½Ì¨
        ; Setup parameters for call to function ESP8266_SendData
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        LCALL   ?Subroutine2 & 0xFFFF
//   61 		
//   62 		MQTT_DeleteBuffer(&mqttPacket);								//É¾°ü
//   63 	}
??CrossCallReturnLabel_2:
        SJMP    ??OneNet_DevLink_1
//   64 	else
//   65 		debug("WARN:	MQTT_PacketConnect Failed\r\n");
??OneNet_DevLink_0:
        ; Setup parameters for call to function debug
        MOV     R2,#`?<Constant "WARN:\\tMQTT_PacketConn...">` & 0xff
        MOV     R3,#(`?<Constant "WARN:\\tMQTT_PacketConn...">` >> 8) & 0xff
        LCALL   ??debug?relay
//   66 	
//   67 	return status;
??OneNet_DevLink_1:
        SETB    C
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     R7,#0x6
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock0
//   68 	
//   69 }
//   70 
//   71 
//   72 //==========================================================
//   73 //	º¯ÊýÃû³Æ£º	OneNet_RevPro
//   74 //
//   75 //	º¯Êý¹¦ÄÜ£º	Æ½Ì¨·µ»ØÊý¾Ý¼ì²â
//   76 //
//   77 //	Èë¿Ú²ÎÊý£º	dataPtr£ºÆ½Ì¨·µ»ØµÄÊý¾Ý
//   78 //
//   79 //	·µ»Ø²ÎÊý£º	ÎÞ
//   80 //
//   81 //	ËµÃ÷£º		
//   82 //==========================================================

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   83 void OneNet_RevPro(unsigned char *cmd)
OneNet_RevPro:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function OneNet_RevPro
        CODE
//   84 {
        FUNCALL OneNet_RevPro, MQTT_UnPacketRecv
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, MQTT_UnPacketCmd
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, debug
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, mqtt_rx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, MQTT_PacketCmdResp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, debug
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, ESP8266_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, MQTT_DeleteBuffer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, MQTT_UnPacketPublishAck
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, debug
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, debug
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, MQTT_UnPacketPublish
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, debug
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, mqtt_rx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, MQTT_PacketPublishAck
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, debug
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, ESP8266_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, MQTT_DeleteBuffer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, MQTT_PacketPublishRec
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, debug
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, ESP8266_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, MQTT_DeleteBuffer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, MQTT_UnPacketPublishRec
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, debug
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, MQTT_PacketPublishRel
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, debug
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, ESP8266_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, MQTT_DeleteBuffer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, MQTT_UnPacketPublishRel
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, debug
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, MQTT_PacketPublishComp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, debug
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, ESP8266_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, MQTT_DeleteBuffer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, MQTT_UnPacketPublishComp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, debug
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, MQTT_UnPacketSubscribe
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, debug
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, debug
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, MQTT_UnPacketUnSubscribe
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, debug
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL OneNet_RevPro, debug
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 16
        MOV     A,#-0x10
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 28)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//   85 	MQTT_PACKET_STRUCTURE mqttPacket = {packet_buff, 0, max_packet_len, 0};								//Ð­Òé°ü
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,#(`?<Constant {packet_buff, 0L, 100L, 0}>` >> 8) & 0xff
        MOV     DPL,#`?<Constant {packet_buff, 0L, 100L, 0}>` & 0xff
        MOV     A,#0xb
        LCALL   ?MOVE_LONG8_XDATA_XDATA
//   86 	
//   87 	unsigned short topic_len = 0;
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//   88 	unsigned short req_len = 0;
        INC     A
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//   89 
//   90 	unsigned char qos = 0;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
//   91 	static unsigned short pkt_id = 0;
//   92 
//   93     
//   94 	unsigned char type = 0;
//   95 	
//   96 	short result = 0;
//   97         
//   98 	type = MQTT_UnPacketRecv(cmd);
//   99     
//  100 	switch(type)
        ; Setup parameters for call to function MQTT_UnPacketRecv
        LCALL   ??MQTT_UnPacketRecv?relay
        MOV     A,R1
        ADD     A,#-0x3
        JNZ     $+5
        LJMP    ??OneNet_RevPro_0 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??OneNet_RevPro_1 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??OneNet_RevPro_2 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??OneNet_RevPro_3 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??OneNet_RevPro_4 & 0xFFFF
        ADD     A,#-0x2
        JNZ     $+5
        LJMP    ??OneNet_RevPro_5 & 0xFFFF
        ADD     A,#-0x2
        JNZ     $+5
        LJMP    ??OneNet_RevPro_6 & 0xFFFF
        ADD     A,#-0x2
        JNZ     $+5
        LJMP    ??OneNet_RevPro_7 & 0xFFFF
        ADD     A,#-0x2
        JZ      $+5
        LJMP    ??OneNet_RevPro_8 & 0xFFFF
//  101 	{
//  102 		case MQTT_PKT_CMD:															//ÃüÁîÏÂ·¢
//  103     {
//  104 			result = MQTT_UnPacketCmd(cmd, cmdid_topic, req_payload, &req_len);	//½â³ötopicºÍÏûÏ¢Ìå
//  105 			if(result == 0)
        ; Setup parameters for call to function MQTT_UnPacketCmd
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 30)
        MOV     ?V0 + 0,#req_payload & 0xff
        MOV     ?V0 + 1,#(req_payload >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 32)
        MOV     R4,#cmdid_topic & 0xff
        MOV     R5,#(cmdid_topic >> 8) & 0xff
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??MQTT_UnPacketCmd?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 28)
        MOV     A,R1
        JZ      $+5
        LJMP    ??OneNet_RevPro_8 & 0xFFFF
//  106 			{
//  107 				debug("cmdid: %s, req: %s, req_len: %d\r\n", cmdid_topic, req_payload, req_len);
        ; Setup parameters for call to function debug
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_TWO
        CFI CFA_XSP16 add(XSP16, 30)
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 32)
        MOV     ?V0 + 0,#cmdid_topic & 0xff
        MOV     ?V0 + 1,#(cmdid_topic >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 34)
        MOV     R2,#`?<Constant "cmdid: %s, req: %s, r...">` & 0xff
        MOV     R3,#(`?<Constant "cmdid: %s, req: %s, r...">` >> 8) & 0xff
        LCALL   ??debug?relay
        MOV     A,#0x6
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 28)
//  108 				mqtt_rx(cmdid_topic, req_payload);
        ; Setup parameters for call to function mqtt_rx
        MOV     R4,#req_payload & 0xff
        MOV     R5,#(req_payload >> 8) & 0xff
        MOV     R2,#cmdid_topic & 0xff
        MOV     R3,#(cmdid_topic >> 8) & 0xff
        LCALL   ??mqtt_rx?relay
//  109 #if 1
//  110 
//  111 				if(MQTT_PacketCmdResp(cmdid_topic, req_payload, &mqttPacket) == 0)	//ÃüÁî»Ø¸´×é°ü
        ; Setup parameters for call to function MQTT_PacketCmdResp
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 30)
        MOV     R4,#req_payload & 0xff
        MOV     R5,#(req_payload >> 8) & 0xff
        MOV     R2,#cmdid_topic & 0xff
        MOV     R3,#(cmdid_topic >> 8) & 0xff
        LCALL   ??MQTT_PacketCmdResp?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 28)
        MOV     A,R1
        JZ      $+5
        LJMP    ??OneNet_RevPro_8 & 0xFFFF
//  112 				{
//  113 					debug("Tips:	Send CmdResp\r\n");
        ; Setup parameters for call to function debug
        MOV     R2,#`?<Constant "Tips:\\tSend CmdResp\\r\\n">` & 0xff
        MOV     R3,#(`?<Constant "Tips:\\tSend CmdResp\\r\\n">` >> 8) & 0xff
??OneNet_RevPro_9:
        LCALL   ??debug?relay
//  114 					
//  115 					ESP8266_SendData(mqttPacket._data, mqttPacket._len);			//»Ø¸´ÃüÁî
        ; Setup parameters for call to function ESP8266_SendData
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R4,?V0 + 0
        MOV     R5,?V0 + 1
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine4 & 0xFFFF
//  116 					MQTT_DeleteBuffer(&mqttPacket);									//É¾°ü
??CrossCallReturnLabel_6:
        ; Setup parameters for call to function MQTT_DeleteBuffer
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??MQTT_DeleteBuffer?relay
        LJMP    ??OneNet_RevPro_8 & 0xFFFF
//  117 				}
//  118 #endif
//  119 			}
//  120     }
//  121 		break;
//  122 			
//  123 		case MQTT_PKT_PUBACK:														//·¢ËÍPublishÏûÏ¢£¬Æ½Ì¨»Ø¸´µÄAck
//  124 		
//  125 			if(MQTT_UnPacketPublishAck(cmd) == 0)
??OneNet_RevPro_1:
        ; Setup parameters for call to function MQTT_UnPacketPublishAck
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??MQTT_UnPacketPublishAck?relay
        MOV     A,R1
        JZ      $+5
        LJMP    ??OneNet_RevPro_8 & 0xFFFF
//  126 				debug("Tips:	MQTT Publish Send OK\r\n");
        ; Setup parameters for call to function debug
        MOV     R2,#`?<Constant "Tips:\\tMQTT Publish Se...">` & 0xff
        MOV     R3,#(`?<Constant "Tips:\\tMQTT Publish Se...">` >> 8) & 0xff
        LJMP    ??OneNet_RevPro_10 & 0xFFFF
//  127 			
//  128 		break;
//  129 
//  130         case MQTT_PKT_PINGRESP:
//  131         {
//  132             debug("Tips:  HeartBeat OK\r\n");
??OneNet_RevPro_7:
        ; Setup parameters for call to function debug
        MOV     R2,#`?<Constant "Tips:  HeartBeat OK\\r\\n">` & 0xff
        MOV     R3,#(`?<Constant "Tips:  HeartBeat OK\\r\\n">` >> 8) & 0xff
        LJMP    ??OneNet_RevPro_10 & 0xFFFF
//  133             break;
//  134         }
//  135            
//  136         case MQTT_PKT_PUBLISH:  //½ÓÊÕµÄPublishÏûÏ¢
//  137         {
//  138             if(MQTT_UnPacketPublish(cmd, cmdid_topic, &topic_len, req_payload, &req_len, &qos, &pkt_id) == 0)
??OneNet_RevPro_0:
        ; Setup parameters for call to function MQTT_UnPacketPublish
        MOV     ?V0 + 0,#??pkt_id & 0xff
        MOV     ?V0 + 1,#(??pkt_id >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 30)
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 32)
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 34)
        MOV     ?V0 + 0,#req_payload & 0xff
        MOV     ?V0 + 1,#(req_payload >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 36)
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 38)
        MOV     R4,#cmdid_topic & 0xff
        MOV     R5,#(cmdid_topic >> 8) & 0xff
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??MQTT_UnPacketPublish?relay
        MOV     A,#0xa
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 28)
        MOV     A,R1
        JZ      $+5
        LJMP    ??OneNet_RevPro_8 & 0xFFFF
//  139             {
//  140                 debug("topic: %s, topic_len: %d, payload: %s, payload_len: %d\r\n",cmdid_topic, topic_len, req_payload, req_len);
        ; Setup parameters for call to function debug
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_TWO
        CFI CFA_XSP16 add(XSP16, 30)
        MOV     ?V0 + 0,#req_payload & 0xff
        MOV     ?V0 + 1,#(req_payload >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 32)
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_TWO
        CFI CFA_XSP16 add(XSP16, 34)
        MOV     ?V0 + 0,#cmdid_topic & 0xff
        MOV     ?V0 + 1,#(cmdid_topic >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 36)
        MOV     R2,#`?<Constant "topic: %s, topic_len:...">` & 0xff
        MOV     R3,#(`?<Constant "topic: %s, topic_len:...">` >> 8) & 0xff
        LCALL   ??debug?relay
        MOV     A,#0x8
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 28)
//  141                 mqtt_rx(cmdid_topic, req_payload);
        ; Setup parameters for call to function mqtt_rx
        MOV     R4,#req_payload & 0xff
        MOV     R5,#(req_payload >> 8) & 0xff
        MOV     R2,#cmdid_topic & 0xff
        MOV     R3,#(cmdid_topic >> 8) & 0xff
        LCALL   ??mqtt_rx?relay
//  142 
//  143                // MQTT_FreeBuffer(cmdid_topic);
//  144                // MQTT_FreeBuffer(req_payload);        
//  145 
//  146                 switch(qos)
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        DEC     A
        JZ      ??OneNet_RevPro_11
        DEC     A
        JZ      ??OneNet_RevPro_12
        LJMP    ??OneNet_RevPro_8 & 0xFFFF
//  147                 {
//  148                     case 1:                                                         //ÊÕµ½publishµÄqosÎª1£¬Éè±¸ÐèÒª»Ø¸´Ack
//  149                     {
//  150                         if(MQTT_PacketPublishAck(pkt_id, &mqttPacket) == 0)
??OneNet_RevPro_11:
        ; Setup parameters for call to function MQTT_PacketPublishAck
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPTR,#??pkt_id
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??MQTT_PacketPublishAck?relay
        MOV     A,R1
        JZ      $+5
        LJMP    ??OneNet_RevPro_8 & 0xFFFF
//  151                         {
//  152                             debug("Tips:  Send PublishAck\r\n");
        ; Setup parameters for call to function debug
        MOV     R2,#`?<Constant "Tips:  Send PublishAck\\r\\n">` & 0xff
        MOV     R3,#(`?<Constant "Tips:  Send PublishAck\\r\\n">` >> 8) & 0xff
        LJMP    ??OneNet_RevPro_9 & 0xFFFF
//  153                             ESP8266_SendData(mqttPacket._data, mqttPacket._len);
//  154                             MQTT_DeleteBuffer(&mqttPacket);
//  155                         }
//  156                         break;
//  157                     }
//  158                     case 2: //ÊÕµ½publishµÄqosÎª2£¬Éè±¸ÏÈ»Ø¸´Rec
//  159                     {       //Æ½Ì¨»Ø¸´Rel£¬Éè±¸ÔÙ»Ø¸´Comp
//  160                         if(MQTT_PacketPublishRec(pkt_id, &mqttPacket) == 0)
??OneNet_RevPro_12:
        ; Setup parameters for call to function MQTT_PacketPublishRec
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPTR,#??pkt_id
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??MQTT_PacketPublishRec?relay
        MOV     A,R1
        JZ      $+5
        LJMP    ??OneNet_RevPro_8 & 0xFFFF
//  161                         {
//  162                             debug("Tips:  Send PublishRec\r\n");
        ; Setup parameters for call to function debug
        MOV     R2,#`?<Constant "Tips:  Send PublishRec\\r\\n">` & 0xff
        MOV     R3,#(`?<Constant "Tips:  Send PublishRec\\r\\n">` >> 8) & 0xff
        LJMP    ??OneNet_RevPro_9 & 0xFFFF
//  163                             ESP8266_SendData(mqttPacket._data, mqttPacket._len);
//  164                             MQTT_DeleteBuffer(&mqttPacket);
//  165                         }
//  166                         break;
//  167                     }
//  168                     default:
//  169                         break;
//  170                 }
//  171                 
//  172             }
//  173             break;
//  174         }
//  175         case MQTT_PKT_PUBREC:   //·¢ËÍPublishÏûÏ¢£¬Æ½Ì¨»Ø¸´µÄRec£¬Éè±¸Ðè»Ø¸´RelÏûÏ¢
//  176         {
//  177             if(MQTT_UnPacketPublishRec(cmd) == 0)
??OneNet_RevPro_2:
        ; Setup parameters for call to function MQTT_UnPacketPublishRec
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??MQTT_UnPacketPublishRec?relay
        MOV     A,R1
        JZ      $+5
        LJMP    ??OneNet_RevPro_8 & 0xFFFF
//  178             {
//  179                 debug("Tips:  Rev PublishRec\r\n");
        ; Setup parameters for call to function debug
        MOV     R2,#`?<Constant "Tips:  Rev PublishRec\\r\\n">` & 0xff
        MOV     R3,#(`?<Constant "Tips:  Rev PublishRec\\r\\n">` >> 8) & 0xff
        LCALL   ??debug?relay
//  180                 if(MQTT_PacketPublishRel(MQTT_PUBLISH_ID, &mqttPacket) == 0)
        ; Setup parameters for call to function MQTT_PacketPublishRel
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R2,#0xa
        MOV     R3,#0x0
        LCALL   ??MQTT_PacketPublishRel?relay
        MOV     A,R1
        JNZ     ??OneNet_RevPro_8
//  181                 {
//  182                     debug("Tips:  Send PublishRel\r\n");
        ; Setup parameters for call to function debug
        MOV     R2,#`?<Constant "Tips:  Send PublishRel\\r\\n">` & 0xff
        MOV     R3,#(`?<Constant "Tips:  Send PublishRel\\r\\n">` >> 8) & 0xff
        LJMP    ??OneNet_RevPro_9 & 0xFFFF
//  183                     ESP8266_SendData(mqttPacket._data, mqttPacket._len);
//  184                     MQTT_DeleteBuffer(&mqttPacket);
//  185                 }
//  186             }
//  187             break;
//  188         }   
//  189         case MQTT_PKT_PUBREL://ÊÕµ½PublishÏûÏ¢£¬Éè±¸»Ø¸´Recºó£¬Æ½Ì¨»Ø¸´µÄRel£¬Éè±¸ÐèÔÙ»Ø¸´Comp
//  190         {
//  191             if(MQTT_UnPacketPublishRel(cmd, pkt_id) == 0)
??OneNet_RevPro_3:
        ; Setup parameters for call to function MQTT_UnPacketPublishRel
        MOV     DPTR,#??pkt_id
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??MQTT_UnPacketPublishRel?relay
        MOV     A,R1
        JNZ     ??OneNet_RevPro_8
//  192             {
//  193                 debug("Tips:  Rev PublishRel\r\n");
        ; Setup parameters for call to function debug
        MOV     R2,#`?<Constant "Tips:  Rev PublishRel\\r\\n">` & 0xff
        MOV     R3,#(`?<Constant "Tips:  Rev PublishRel\\r\\n">` >> 8) & 0xff
        LCALL   ??debug?relay
//  194                 if(MQTT_PacketPublishComp(MQTT_PUBLISH_ID, &mqttPacket) == 0)
        ; Setup parameters for call to function MQTT_PacketPublishComp
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R2,#0xa
        MOV     R3,#0x0
        LCALL   ??MQTT_PacketPublishComp?relay
        MOV     A,R1
        JNZ     ??OneNet_RevPro_8
//  195                 {
//  196                    debug("Tips:  Send PublishComp\r\n");
        ; Setup parameters for call to function debug
        MOV     R2,#`?<Constant "Tips:  Send PublishCo...">` & 0xff
        MOV     R3,#(`?<Constant "Tips:  Send PublishCo...">` >> 8) & 0xff
        LJMP    ??OneNet_RevPro_9 & 0xFFFF
//  197                     ESP8266_SendData(mqttPacket._data, mqttPacket._len);
//  198                     MQTT_DeleteBuffer(&mqttPacket);
//  199                 }
//  200             }
//  201             break;
//  202         }
//  203         case MQTT_PKT_PUBCOMP:  //·¢ËÍPublishÏûÏ¢£¬Æ½Ì¨·µ»ØRec£¬Éè±¸»Ø¸´Rel£¬Æ½Ì¨ÔÙ·µ»ØµÄComp
//  204         {
//  205             if(MQTT_UnPacketPublishComp(cmd) == 0)
??OneNet_RevPro_4:
        ; Setup parameters for call to function MQTT_UnPacketPublishComp
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??MQTT_UnPacketPublishComp?relay
        MOV     A,R1
        JNZ     ??OneNet_RevPro_8
//  206             {
//  207                 debug("Tips:  Rev PublishComp\r\n");
        ; Setup parameters for call to function debug
        MOV     R2,#`?<Constant "Tips:  Rev PublishComp\\r\\n">` & 0xff
        MOV     R3,#(`?<Constant "Tips:  Rev PublishComp\\r\\n">` >> 8) & 0xff
        SJMP    ??OneNet_RevPro_10
//  208             }
//  209             break;
//  210         }
//  211         case MQTT_PKT_SUBACK:   //·¢ËÍSubscribeÏûÏ¢µÄAck
//  212         {
//  213             if(MQTT_UnPacketSubscribe(cmd) == 0)
??OneNet_RevPro_5:
        ; Setup parameters for call to function MQTT_UnPacketSubscribe
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??MQTT_UnPacketSubscribe?relay
        MOV     A,R1
        JNZ     ??OneNet_RevPro_13
//  214             {
//  215                 debug("Tips:  MQTT Subscribe OK\r\n");
        ; Setup parameters for call to function debug
        MOV     R2,#`?<Constant "Tips:  MQTT Subscribe...">` & 0xff
        MOV     R3,#(`?<Constant "Tips:  MQTT Subscribe...">` >> 8) & 0xff
        SJMP    ??OneNet_RevPro_10
//  216             }
//  217             else
//  218             {
//  219                 debug("Tips:  MQTT Subscribe Err\r\n");
??OneNet_RevPro_13:
        ; Setup parameters for call to function debug
        MOV     R2,#`?<Constant "Tips:  MQTT Subscribe...">_1` & 0xff
        MOV     R3,#(`?<Constant "Tips:  MQTT Subscribe...">_1` >> 8) & 0xff
        SJMP    ??OneNet_RevPro_10
//  220             }
//  221             break;
//  222         }
//  223         case MQTT_PKT_UNSUBACK: //·¢ËÍUnSubscribeÏûÏ¢µÄAck
//  224         {
//  225             if(MQTT_UnPacketUnSubscribe(cmd) == 0)
??OneNet_RevPro_6:
        ; Setup parameters for call to function MQTT_UnPacketUnSubscribe
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??MQTT_UnPacketUnSubscribe?relay
        MOV     A,R1
        JNZ     ??OneNet_RevPro_14
//  226             {
//  227                 debug("Tips:  MQTT UnSubscribe OK\r\n");
        ; Setup parameters for call to function debug
        MOV     R2,#`?<Constant "Tips:  MQTT UnSubscri...">` & 0xff
        MOV     R3,#(`?<Constant "Tips:  MQTT UnSubscri...">` >> 8) & 0xff
        SJMP    ??OneNet_RevPro_10
//  228             }
//  229             else
//  230             {
//  231                 debug("Tips:  MQTT UnSubscribe Err\r\n");
??OneNet_RevPro_14:
        ; Setup parameters for call to function debug
        MOV     R2,#`?<Constant "Tips:  MQTT UnSubscri...">_1` & 0xff
        MOV     R3,#(`?<Constant "Tips:  MQTT UnSubscri...">_1` >> 8) & 0xff
??OneNet_RevPro_10:
        LCALL   ??debug?relay
//  232             }
//  233             break;
//  234         } 		
//  235 		default:
//  236 			result = -1;
//  237 		break;
//  238 	}
//  239 }
??OneNet_RevPro_8:
        MOV     A,#0x10
        CFI EndBlock cfiBlock1
        REQUIRE ?Subroutine0
        ; // Fall through to label ?Subroutine0

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 28)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Valid
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock2

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
??pkt_id:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  240 
//  241 /**************************************************************
//  242 º¯ÊýÃû³Æ : onenet_mqtt_send_heart
//  243 º¯Êý¹¦ÄÜ : ·¢ËÍÐÄÌø
//  244 ÊäÈë²ÎÊý : ÎÞ
//  245 ·µ»ØÖµ  	 : ÎÞ
//  246 ±¸×¢		 : ÎÞ
//  247 **************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  248 void onenet_mqtt_send_heart(void)
onenet_mqtt_send_heart:
        CFI Block cfiBlock3 Using cfiCommon0
        CFI Function onenet_mqtt_send_heart
        CODE
//  249 {
        FUNCALL onenet_mqtt_send_heart, debug
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL onenet_mqtt_send_heart, MQTT_PacketPing
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL onenet_mqtt_send_heart, ESP8266_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL onenet_mqtt_send_heart, MQTT_DeleteBuffer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 11
        MOV     A,#-0xb
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 23)
//  250     MQTT_PACKET_STRUCTURE mqttPacket = {packet_buff, 0, max_packet_len, MEM_FLAG_STATIC};                //Ð­Òé°ü
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,#(`?<Constant {packet_buff, 0L, 100L, 2}>_1` >> 8) & 0xff
        MOV     DPL,#`?<Constant {packet_buff, 0L, 100L, 2}>_1` & 0xff
        MOV     A,#0xb
        LCALL   ?MOVE_LONG8_XDATA_XDATA
//  251 
//  252 	debug("send heart\r\n");
        ; Setup parameters for call to function debug
        MOV     R2,#`?<Constant "send heart\\r\\n">` & 0xff
        MOV     R3,#(`?<Constant "send heart\\r\\n">` >> 8) & 0xff
        LCALL   ??debug?relay
//  253 	MQTT_PacketPing(&mqttPacket);
        ; Setup parameters for call to function MQTT_PacketPing
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??MQTT_PacketPing?relay
//  254     ESP8266_SendData(mqttPacket._data, mqttPacket._len);
        ; Setup parameters for call to function ESP8266_SendData
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        LCALL   ?Subroutine2 & 0xFFFF
//  255 	MQTT_DeleteBuffer(&mqttPacket);									//É¾°ü
//  256 }
??CrossCallReturnLabel_3:
        MOV     A,#0xb
        SJMP    ?Subroutine0
        CFI EndBlock cfiBlock3

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine2:
        CFI Block cfiCond4 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_2
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 25)
        CFI Block cfiCond5 Using cfiCommon0
        CFI (cfiCond5) NoFunction
        CFI (cfiCond5) Conditional ??CrossCallReturnLabel_3
        CFI (cfiCond5) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond5) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond5) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond5) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond5) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond5) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond5) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond5) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond5) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond5) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond5) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond5) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond5) CFA_SP SP+0
        CFI (cfiCond5) CFA_XSP16 add(XSP16, 23)
        CFI Block cfiPicker6 Using cfiCommon1
        CFI (cfiPicker6) NoFunction
        CFI (cfiPicker6) Picker
        LCALL   ?Subroutine3 & 0xFFFF
??CrossCallReturnLabel_4:
        RET
        CFI EndBlock cfiCond4
        CFI EndBlock cfiCond5
        CFI EndBlock cfiPicker6

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine3:
        CFI Block cfiCond7 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_4, ??CrossCallReturnLabel_2
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 25)
        CFI Block cfiCond8 Using cfiCommon0
        CFI (cfiCond8) NoFunction
        CFI (cfiCond8) Conditional ??CrossCallReturnLabel_4, ??CrossCallReturnLabel_3
        CFI (cfiCond8) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond8) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond8) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond8) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond8) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond8) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond8) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond8) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond8) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond8) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond8) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond8) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond8) CFA_SP SP+0
        CFI (cfiCond8) CFA_XSP16 add(XSP16, 23)
        CFI Block cfiCond9 Using cfiCommon0
        CFI (cfiCond9) NoFunction
        CFI (cfiCond9) Conditional ??CrossCallReturnLabel_5, ??CrossCallReturnLabel_0
        CFI (cfiCond9) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond9) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond9) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond9) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond9) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond9) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond9) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond9) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond9) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond9) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond9) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond9) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond9) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond9) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond9) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond9) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond9) CFA_SP SP+0
        CFI (cfiCond9) CFA_XSP16 add(XSP16, 27)
        CFI Block cfiCond10 Using cfiCommon0
        CFI (cfiCond10) NoFunction
        CFI (cfiCond10) Conditional ??CrossCallReturnLabel_5, ??CrossCallReturnLabel_1
        CFI (cfiCond10) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond10) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond10) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond10) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond10) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond10) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond10) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond10) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond10) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond10) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond10) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond10) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond10) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond10) CFA_SP SP+0
        CFI (cfiCond10) CFA_XSP16 add(XSP16, 24)
        CFI Block cfiPicker11 Using cfiCommon1
        CFI (cfiPicker11) NoFunction
        CFI (cfiPicker11) Picker
        MOV     R4,?V0 + 0
        MOV     R5,?V0 + 1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine4 & 0xFFFF
??CrossCallReturnLabel_7:
        ; Setup parameters for call to function MQTT_DeleteBuffer
        ; Setup parameters for call to function MQTT_DeleteBuffer
        ; Setup parameters for call to function MQTT_DeleteBuffer
        ; Setup parameters for call to function MQTT_DeleteBuffer
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??MQTT_DeleteBuffer?relay
        RET
        CFI EndBlock cfiCond7
        CFI EndBlock cfiCond8
        CFI EndBlock cfiCond9
        CFI EndBlock cfiCond10
        CFI EndBlock cfiPicker11

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine4:
        CFI Block cfiCond12 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_6
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond13 Using cfiCommon0
        CFI (cfiCond13) NoFunction
        CFI (cfiCond13) Conditional ??CrossCallReturnLabel_7, ??CrossCallReturnLabel_4, ??CrossCallReturnLabel_2
        CFI (cfiCond13) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond13) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond13) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond13) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond13) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond13) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond13) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond13) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond13) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond13) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond13) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond13) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond13) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond13) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond13) CFA_SP SP+0
        CFI (cfiCond13) CFA_XSP16 add(XSP16, 25)
        CFI Block cfiCond14 Using cfiCommon0
        CFI (cfiCond14) NoFunction
        CFI (cfiCond14) Conditional ??CrossCallReturnLabel_7, ??CrossCallReturnLabel_4, ??CrossCallReturnLabel_3
        CFI (cfiCond14) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond14) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond14) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond14) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond14) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond14) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond14) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond14) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond14) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond14) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond14) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond14) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond14) CFA_SP SP+0
        CFI (cfiCond14) CFA_XSP16 add(XSP16, 23)
        CFI Block cfiCond15 Using cfiCommon0
        CFI (cfiCond15) NoFunction
        CFI (cfiCond15) Conditional ??CrossCallReturnLabel_7, ??CrossCallReturnLabel_5, ??CrossCallReturnLabel_0
        CFI (cfiCond15) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond15) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond15) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond15) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond15) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond15) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond15) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond15) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond15) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond15) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond15) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond15) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond15) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond15) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond15) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond15) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond15) CFA_SP SP+0
        CFI (cfiCond15) CFA_XSP16 add(XSP16, 27)
        CFI Block cfiCond16 Using cfiCommon0
        CFI (cfiCond16) NoFunction
        CFI (cfiCond16) Conditional ??CrossCallReturnLabel_7, ??CrossCallReturnLabel_5, ??CrossCallReturnLabel_1
        CFI (cfiCond16) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond16) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond16) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond16) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond16) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond16) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond16) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond16) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond16) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond16) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond16) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond16) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond16) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond16) CFA_SP SP+0
        CFI (cfiCond16) CFA_XSP16 add(XSP16, 24)
        CFI Block cfiPicker17 Using cfiCommon1
        CFI (cfiPicker17) NoFunction
        CFI (cfiPicker17) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??ESP8266_SendData?relay
        RET
        CFI EndBlock cfiCond12
        CFI EndBlock cfiCond13
        CFI EndBlock cfiCond14
        CFI EndBlock cfiCond15
        CFI EndBlock cfiCond16
        CFI EndBlock cfiPicker17
//  257 
//  258 
//  259 /**************************************************************
//  260 º¯ÊýÃû³Æ : mqtt_publish_topic
//  261 º¯Êý¹¦ÄÜ : onenet mqtt ·¢²¼Ö÷ÌâÏûÏ¢
//  262 ÊäÈë²ÎÊý : topic£º·¢²¼µÄÖ÷Ìâ
//  263 		   msg£ºÏûÏ¢ÄÚÈÝ
//  264 ·µ»ØÖµ  	 : PUBLISH_MSG_OK: ·¢²¼ÏûÏ¢³É¹¦
//  265 		   PUBLISH_MSG_ERROR£º·¢²¼ÏûÏ¢Ê§°Ü
//  266 ±¸×¢		 : ÎÞ
//  267 **************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  268 _Bool mqtt_publish_topic(const char *topic, const char *msg)
mqtt_publish_topic:
        CFI Block cfiBlock18 Using cfiCommon0
        CFI Function mqtt_publish_topic
        CODE
//  269 {
        FUNCALL mqtt_publish_topic, debug
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mqtt_publish_topic, strlen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mqtt_publish_topic, MQTT_PacketPublish
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 43, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 43, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mqtt_publish_topic, ESP8266_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mqtt_publish_topic, MQTT_DeleteBuffer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 11
        MOV     A,#-0xb
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 27)
        MOV     ?V0 + 6,R2
        MOV     ?V0 + 7,R3
        MOV     ?V0 + 4,R4
        MOV     ?V0 + 5,R5
//  270   MQTT_PACKET_STRUCTURE mqttPacket = {packet_buff, 0, max_packet_len, MEM_FLAG_STATIC};                //Ð­Òé°ü
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,#(`?<Constant {packet_buff, 0L, 100L, 2}>_2` >> 8) & 0xff
        MOV     DPL,#`?<Constant {packet_buff, 0L, 100L, 2}>_2` & 0xff
        MOV     A,#0xb
        LCALL   ?MOVE_LONG8_XDATA_XDATA
//  271 	
//  272 	debug("publish topic: %s, msg: %s\r\n", topic, msg);
        ; Setup parameters for call to function debug
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 29)
        MOV     R0,#?V0 + 6
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 31)
        MOV     R2,#`?<Constant "publish topic: %s, ms...">` & 0xff
        MOV     R3,#(`?<Constant "publish topic: %s, ms...">` >> 8) & 0xff
        LCALL   ??debug?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 27)
//  273 
//  274 	if(MQTT_PacketPublish(MQTT_PUBLISH_ID, topic, msg, strlen(msg), MQTT_QOS_LEVEL2, 0, 1, &mqttPacket) == 0)
        ; Setup parameters for call to function MQTT_PacketPublish
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 29)
        MOV     DPTR,#__Constant_1
        LCALL   ?PUSH_XSTACK8_X_FOUR
        CFI CFA_XSP16 add(XSP16, 33)
        MOV     DPTR,#__Constant_0
        LCALL   ?PUSH_XSTACK8_X_FOUR
        CFI CFA_XSP16 add(XSP16, 37)
        ; Setup parameters for call to function strlen
        MOV     R2,?V0 + 4
        MOV     R3,?V0 + 5
        LCALL   ??strlen?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        CLR     A
        MOV     ?V0 + 2,A
        MOV     ?V0 + 3,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_FOUR
        CFI CFA_XSP16 add(XSP16, 41)
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 43)
        MOV     R1,#0x2
        MOV     R4,?V0 + 6
        MOV     R5,?V0 + 7
        MOV     R2,#0xa
        MOV     R3,#0x0
        LCALL   ??MQTT_PacketPublish?relay
        MOV     A,#0x10
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 27)
        MOV     A,R1
        JNZ     ??mqtt_publish_topic_0
//  275 	{
//  276 		ESP8266_SendData(mqttPacket._data, mqttPacket._len);//ÉÏ´«Æ½Ì¨
        ; Setup parameters for call to function ESP8266_SendData
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        LCALL   ?Subroutine1 & 0xFFFF
//  277 		MQTT_DeleteBuffer(&mqttPacket);	//É¾°ü
//  278 		return 0;
//  279 	}
??CrossCallReturnLabel_0:
        SJMP    ??mqtt_publish_topic_1
//  280 	else
//  281 	{
//  282 		return 1;
??mqtt_publish_topic_0:
        SETB    C
??mqtt_publish_topic_1:
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 16)
        MOV     R7,#0x8
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock18
//  283 	}
//  284 
//  285 }
//  286 
//  287 /*  ·¢²¼Ö÷ÌâÎª"hello_topic"£¬ÏûÏ¢Îª"hello_world" */
//  288 //if(0 == onenet_mqtt_publish_topic("hello_topic", "hello_world"))
//  289 //{;}
//  290 
//  291  
//  292 /**************************************************************
//  293 º¯ÊýÃû³Æ : onenet_mqtt_subscribe_topic
//  294 º¯Êý¹¦ÄÜ : onenet mqtt ¶©ÔÄÖ÷Ìâ
//  295 ÊäÈë²ÎÊý : topic£º¶©ÔÄµÄtopic
//  296 		   topic_cnt£ºtopic¸öÊý
//  297 ·µ»ØÖµ  	 : SUBSCRIBE_TOPIC_OK:¶©ÔÄ³É¹¦
//  298 		   SUBSCRIBE_TOPIC_ERROR£º¶©ÔÄÊ§°Ü
//  299 ±¸×¢		 : ÎÞ
//  300 **************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  301 _Bool mqtt_subscribe_topic(const signed char *topic[], unsigned char topic_cnt)
mqtt_subscribe_topic:
        CFI Block cfiBlock19 Using cfiCommon0
        CFI Function mqtt_subscribe_topic
        CODE
//  302 {
        FUNCALL mqtt_subscribe_topic, debug
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mqtt_subscribe_topic, MQTT_PacketSubscribe
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mqtt_subscribe_topic, ESP8266_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL mqtt_subscribe_topic, MQTT_DeleteBuffer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xd
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 13)
        ; Saved register size: 13
        ; Auto size: 11
        MOV     A,#-0xb
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 24)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 4,R1
//  303 	
//  304 	unsigned char i = 0;
        MOV     ?V0 + 0,#0x0
//  305   MQTT_PACKET_STRUCTURE mqttPacket = {packet_buff, 0, max_packet_len, MEM_FLAG_STATIC};                //Ð­Òé°ü
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,#(`?<Constant {packet_buff, 0L, 100L, 2}>_3` >> 8) & 0xff
        MOV     DPL,#`?<Constant {packet_buff, 0L, 100L, 2}>_3` & 0xff
        MOV     A,#0xb
        LCALL   ?MOVE_LONG8_XDATA_XDATA
        SJMP    ??mqtt_subscribe_topic_0
//  306  
//  307 	for(; i < topic_cnt; i++)
//  308 	{
//  309 		debug("subscribe topic: %s\r\n", topic[i]);
??mqtt_subscribe_topic_1:
        ; Setup parameters for call to function debug
        MOV     A,?V0 + 0
        CLR     C
        RLC     A
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     A,R6
        ADD     A,R0
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,R1
        MOV     DPH,A
        LCALL   ?PUSH_XSTACK8_X_TWO
        CFI CFA_XSP16 add(XSP16, 26)
        MOV     R2,#`?<Constant "subscribe topic: %s\\r\\n">` & 0xff
        MOV     R3,#(`?<Constant "subscribe topic: %s\\r\\n">` >> 8) & 0xff
        LCALL   ??debug?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 24)
//  310 	}
        INC     ?V0 + 0
??mqtt_subscribe_topic_0:
        MOV     A,?V0 + 0
        CLR     C
        SUBB    A,?V0 + 4
        JC      ??mqtt_subscribe_topic_1
//  311     
//  312 	if(MQTT_PacketSubscribe(MQTT_SUBSCRIBE_ID, MQTT_QOS_LEVEL2, topic, topic_cnt, &mqttPacket) == 0)
        ; Setup parameters for call to function MQTT_PacketSubscribe
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 26)
        MOV     A,?V0 + 4
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
        CFI CFA_XSP16 add(XSP16, 27)
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R1,#0x2
        MOV     R2,#0x14
        MOV     R3,#0x0
        LCALL   ??MQTT_PacketSubscribe?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 24)
        MOV     A,R1
        JNZ     ??mqtt_subscribe_topic_2
//  313 	{
//  314 		ESP8266_SendData(mqttPacket._data, mqttPacket._len);//ÉÏ´«Æ½Ì¨
        ; Setup parameters for call to function ESP8266_SendData
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        LCALL   ?Subroutine1 & 0xFFFF
//  315 		MQTT_DeleteBuffer(&mqttPacket);											//É¾°ü
//  316 		return 0;
//  317 	}
??CrossCallReturnLabel_1:
        SJMP    ??mqtt_subscribe_topic_3
//  318 	else
//  319 	{
//  320 		return 1;
??mqtt_subscribe_topic_2:
        SETB    C
??mqtt_subscribe_topic_3:
        MOV     A,#0xb
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 13)
        MOV     R7,#0x5
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock19
//  321 	}
//  322 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
        CFI Block cfiCond20 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_0
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 27)
        CFI Block cfiCond21 Using cfiCommon0
        CFI (cfiCond21) NoFunction
        CFI (cfiCond21) Conditional ??CrossCallReturnLabel_1
        CFI (cfiCond21) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond21) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond21) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond21) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond21) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond21) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond21) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond21) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond21) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond21) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond21) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond21) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond21) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond21) CFA_SP SP+0
        CFI (cfiCond21) CFA_XSP16 add(XSP16, 24)
        CFI Block cfiPicker22 Using cfiCommon1
        CFI (cfiPicker22) NoFunction
        CFI (cfiPicker22) Picker
        LCALL   ?Subroutine3 & 0xFFFF
??CrossCallReturnLabel_5:
        CLR     C
        RET
        CFI EndBlock cfiCond20
        CFI EndBlock cfiCond21
        CFI EndBlock cfiPicker22

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??OneNet_DevLink?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    OneNet_DevLink

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??OneNet_RevPro?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    OneNet_RevPro

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??onenet_mqtt_send_heart?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    onenet_mqtt_send_heart

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mqtt_publish_topic?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mqtt_publish_topic

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??mqtt_subscribe_topic?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    mqtt_subscribe_topic

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant {packet_buff, 0L, 100L, 2}>`:
        DATA16
        DW packet_buff
        DATA32
        DD 0
        DD 100
        DATA8
        DB 2

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "%s&%s">`:
        DB "%s&%s"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "board">`:
        DB "board"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "a1lZYHY3VzY">`:
        DB "a1lZYHY3VzY"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "OneNet_DevLink\\r\\nmqttU...">`:
        DB 4FH, 6EH, 65H, 4EH, 65H, 74H, 5FH, 44H
        DB 65H, 76H, 4CH, 69H, 6EH, 6BH, 0DH, 0AH
        DB 6DH, 71H, 74H, 74H, 55H, 73H, 65H, 72H
        DB 6EH, 61H, 6DH, 65H, 3AH, 25H, 73H, 2CH
        DB 20H, 6DH, 71H, 74H, 74H, 50H, 61H, 73H
        DB 73H, 77H, 6FH, 72H, 64H, 3AH, 25H, 73H
        DB 2CH, 6DH, 71H, 74H, 74H, 43H, 6CH, 69H
        DB 65H, 6EH, 74H, 49H, 64H, 3AH, 25H, 73H
        DB 0DH, 0AH, 0

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "a3369feaabeca751749ef...">`:
        DB "a3369feaabeca751749ef7f395c7264e92856f73"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "12345|securemode=3,si...">`:
        DB 31H, 32H, 33H, 34H, 35H, 7CH, 73H, 65H
        DB 63H, 75H, 72H, 65H, 6DH, 6FH, 64H, 65H
        DB 3DH, 33H, 2CH, 73H, 69H, 67H, 6EH, 6DH
        DB 65H, 74H, 68H, 6FH, 64H, 3DH, 68H, 6DH
        DB 61H, 63H, 73H, 68H, 61H, 31H, 2CH, 74H
        DB 69H, 6DH, 65H, 73H, 74H, 61H, 6DH, 70H
        DB 3DH, 37H, 38H, 39H, 7CH, 0

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "WARN:\\tMQTT_PacketConn...">`:
        DB "WARN:\tMQTT_PacketConnect Failed\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant {packet_buff, 0L, 100L, 0}>`:
        DATA16
        DW packet_buff
        DATA32
        DD 0
        DD 100
        DATA8
        DB 0

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "cmdid: %s, req: %s, r...">`:
        DB "cmdid: %s, req: %s, req_len: %d\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Tips:\\tSend CmdResp\\r\\n">`:
        DB "Tips:\tSend CmdResp\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Tips:\\tMQTT Publish Se...">`:
        DB "Tips:\tMQTT Publish Send OK\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Tips:  HeartBeat OK\\r\\n">`:
        DB "Tips:  HeartBeat OK\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "topic: %s, topic_len:...">`:
        DB 74H, 6FH, 70H, 69H, 63H, 3AH, 20H, 25H
        DB 73H, 2CH, 20H, 74H, 6FH, 70H, 69H, 63H
        DB 5FH, 6CH, 65H, 6EH, 3AH, 20H, 25H, 64H
        DB 2CH, 20H, 70H, 61H, 79H, 6CH, 6FH, 61H
        DB 64H, 3AH, 20H, 25H, 73H, 2CH, 20H, 70H
        DB 61H, 79H, 6CH, 6FH, 61H, 64H, 5FH, 6CH
        DB 65H, 6EH, 3AH, 20H, 25H, 64H, 0DH, 0AH
        DB 0

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Tips:  Send PublishAck\\r\\n">`:
        DB "Tips:  Send PublishAck\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Tips:  Send PublishRec\\r\\n">`:
        DB "Tips:  Send PublishRec\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Tips:  Rev PublishRec\\r\\n">`:
        DB "Tips:  Rev PublishRec\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Tips:  Send PublishRel\\r\\n">`:
        DB "Tips:  Send PublishRel\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Tips:  Rev PublishRel\\r\\n">`:
        DB "Tips:  Rev PublishRel\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Tips:  Send PublishCo...">`:
        DB "Tips:  Send PublishComp\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Tips:  Rev PublishComp\\r\\n">`:
        DB "Tips:  Rev PublishComp\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Tips:  MQTT Subscribe...">`:
        DB "Tips:  MQTT Subscribe OK\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Tips:  MQTT Subscribe...">_1`:
        DB "Tips:  MQTT Subscribe Err\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Tips:  MQTT UnSubscri...">`:
        DB "Tips:  MQTT UnSubscribe OK\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Tips:  MQTT UnSubscri...">_1`:
        DB "Tips:  MQTT UnSubscribe Err\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant {packet_buff, 0L, 100L, 2}>_1`:
        DATA16
        DW packet_buff
        DATA32
        DD 0
        DD 100
        DATA8
        DB 2

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "send heart\\r\\n">`:
        DB "send heart\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant {packet_buff, 0L, 100L, 2}>_2`:
        DATA16
        DW packet_buff
        DATA32
        DD 0
        DD 100
        DATA8
        DB 2

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "publish topic: %s, ms...">`:
        DB "publish topic: %s, msg: %s\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant {packet_buff, 0L, 100L, 2}>_3`:
        DATA16
        DW packet_buff
        DATA32
        DD 0
        DD 100
        DATA8
        DB 2

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "subscribe topic: %s\\r\\n">`:
        DB "subscribe topic: %s\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_0:
        DD 0

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_1:
        DD 1

        END
//  323 
//  324 //Ö÷Ìâ¶©ÔÄ·½·¨
//  325 //const signed char *g_mqtt_topics[] = {"mqtt_topic", "topic_test"};
//  326 //if(0 == onenet_mqtt_subscribe_topic(g_mqtt_topics, 2))
//  327 
//  328 
//  329 
// 
// 1 384 bytes in segment BANKED_CODE
//    30 bytes in segment BANK_RELAYS
//   798 bytes in segment XDATA_ROM_C
//   284 bytes in segment XDATA_Z
// 
// 1 414 bytes of CODE  memory
//   790 bytes of CONST memory (+ 8 bytes shared)
//   284 bytes of XDATA memory
//
//Errors: none
//Warnings: 24
