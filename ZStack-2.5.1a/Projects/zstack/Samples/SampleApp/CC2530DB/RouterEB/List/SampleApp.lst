###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.3.10338/W32 for 8051         27/May/2020  18:08:48 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢» #
#                          ·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ #
#                          ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\So #
#                          urce\SampleApp.c                                   #
#    Command line       =  -f "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ #
#                          ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­ #
#                          Òé)\ZStack-2.5.1a\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\..\..\..\Tools\CC2530DB\f8wRouter.cfg"  #
#                          (-DCPU32MHZ -DROOT=__near_func                     #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8         #
#                          -DMAC_CFG_RX_MAX=5 -DRTR_NWK) -f                   #
#                          "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢ #
#                          »·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé) #
#                          \ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"     #
#                          (-DZIGBEEPRO -DSECURE=0 -DZG_SECURE_DYNAMIC=0      #
#                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800          #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFF1                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁ #
#                          Ï-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\Êµ #
#                          Ñé7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zst #
#                          ack\Samples\SampleApp\Source\SampleApp.c" -D       #
#                          ZTOOL_P1 -D xMT_TASK -D xMT_SYS_FUNC -D            #
#                          xMT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG -lC            #
#                          "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢ #
#                          »·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé) #
#                          \ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\RouterEB\List\" -lA                        #
#                          "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢ #
#                          »·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé) #
#                          \ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\RouterEB\List\" --diag_suppress            #
#                          Pe001,Pa010 -o "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ #
#                          §Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢Àï #
#                          ÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Samp #
#                          les\SampleApp\CC2530DB\RouterEB\Obj\" -e           #
#                          --no_code_motion --debug --core=plain --dptr=16,1  #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ #
#                          ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­ #
#                          Òé)\ZStack-2.5.1a\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\ #
#                          Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢À #
#                          ïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Sam #
#                          ples\SampleApp\CC2530DB\..\Source\" -I             #
#                          "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢ #
#                          »·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé) #
#                          \ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\ZMain\TI2530DB\" -I               #
#                          "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢ #
#                          »·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé) #
#                          \ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\..\..\Components\hal\include\"    #
#                          -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ #
#                          ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­ #
#                          Òé)\ZStack-2.5.1a\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\..\..\..\..\..\Components\hal\target\CC #
#                          2530EB\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï° #
#                          Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆI #
#                          OT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Samples #
#                          \SampleApp\CC2530DB\..\..\..\..\..\Components\mac\ #
#                          include\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï #
#                          °Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆ #
#                          IOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Sample #
#                          s\SampleApp\CC2530DB\..\..\..\..\..\Components\mac #
#                          \high_level\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3 #
#                          \Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ #
#                          ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Sa #
#                          mples\SampleApp\CC2530DB\..\..\..\..\..\Components #
#                          \mac\low_level\srf04\" -I                          #
#                          "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢ #
#                          »·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé) #
#                          \ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\..\..\Components\mac\low_level\sr #
#                          f04\single_chip\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ- #
#                          V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé #
#                          7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstac #
#                          k\Samples\SampleApp\CC2530DB\..\..\..\..\..\Compon #
#                          ents\mt\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï #
#                          °Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆ #
#                          IOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Sample #
#                          s\SampleApp\CC2530DB\..\..\..\..\..\Components\osa #
#                          l\include\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ #
#                          §Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢Àï #
#                          ÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Samp #
#                          les\SampleApp\CC2530DB\..\..\..\..\..\Components\s #
#                          ervices\saddr\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4 #
#                          .3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7. #
#                          °¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\..\..\Componen #
#                          ts\services\sdata\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁ #
#                          Ï-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\Êµ #
#                          Ñé7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zst #
#                          ack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Comp #
#                          onents\stack\af\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ- #
#                          V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé #
#                          7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstac #
#                          k\Samples\SampleApp\CC2530DB\..\..\..\..\..\Compon #
#                          ents\stack\nwk\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V #
#                          4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7 #
#                          .°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack #
#                          \Samples\SampleApp\CC2530DB\..\..\..\..\..\Compone #
#                          nts\stack\sapi\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V #
#                          4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7 #
#                          .°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack #
#                          \Samples\SampleApp\CC2530DB\..\..\..\..\..\Compone #
#                          nts\stack\sec\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4 #
#                          .3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7. #
#                          °¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\..\..\Componen #
#                          ts\stack\sys\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4. #
#                          3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.° #
#                          ¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\S #
#                          amples\SampleApp\CC2530DB\..\..\..\..\..\Component #
#                          s\stack\zdo\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3 #
#                          \Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ #
#                          ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Sa #
#                          mples\SampleApp\CC2530DB\..\..\..\..\..\Components #
#                          \zmac\" -I "I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°À #
#                          ý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIO #
#                          T(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Samples\ #
#                          SampleApp\CC2530DB\..\..\..\..\..\Components\zmac\ #
#                          f8w\" -Ohz                                         #
#    List file          =  I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢» #
#                          ·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ #
#                          ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC #
#                          2530DB\RouterEB\List\SampleApp.lst                 #
#    Object file        =  I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢» #
#                          ·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ #
#                          ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC #
#                          2530DB\RouterEB\Obj\SampleApp.r51                  #
#                                                                             #
#                                                                             #
###############################################################################

I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\SampleApp.c
      1          /*********************************************************************
      2           * INCLUDES
      3           */
      4          
      5          #include <stdio.h>
      6          #include <string.h>
      7          #include "AF.h"
      8          #include "OnBoard.h"
      9          #include "OSAL_Tasks.h"
     10          #include "SampleApp.h"
     11          #include "ZDApp.h"
     12          #include "ZDObject.h"
     13          #include "ZDProfile.h"
     14          
     15          #include "hal_drivers.h"
     16          #include "hal_key.h"
     17          #if defined ( LCD_SUPPORTED )
     18            #include "hal_lcd.h"
     19          #endif
     20          #include "hal_led.h"
     21          #include "hal_uart.h"
     22          
     23          #ifdef ZDO_COORDINATOR
     24          //Ð­ÒéÎÄ¼þ
     25          #include "mqtt.h"
     26          #include "mqttkit.h"
     27          
     28          #else
     29          
     30          #include "dht11.h"
     31          
     32          #endif
     33          
     34          
     35          /*********************************************************************
     36           * MACROS
     37           */
     38          
     39          /*********************************************************************
     40           * CONSTANTS
     41           */
     42          
     43          #if !defined( SAMPLE_APP_PORT )
     44          #define SAMPLE_APP_PORT  0
     45          #endif
     46          
     47          #if !defined( SAMPLE_APP_RX_MAX )
     48          #define SAMPLE_APP_RX_MAX  200
     49          #endif
     50          
     51          
     52          // This list should be filled with Application specific Cluster IDs.

   \                                 In  segment XDATA_ROM_C, align 1
     53          const cId_t SampleApp_ClusterList[SAMPLE_MAX_CLUSTERS] =
   \                     SampleApp_ClusterList:
   \   000000   0100         DW 1
   \   000002   0200         DW 2
   \   000004   0300         DW 3
     54          {
     55            SAMPLEAPP_P2P_CLUSTERID,
     56            SAMPLEAPP_PERIODIC_CLUSTERID,
     57            SERIALAPP_CONNECTREQ_CLUSTER
     58          };
     59          

   \                                 In  segment XDATA_ROM_C, align 1
     60          const SimpleDescriptionFormat_t SampleApp_SimpleDesc =
   \                     SampleApp_SimpleDesc:
   \   000000   0B           DB 11
   \   000001   050F         DW 3845
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   03           DB 3
   \   000007   ....         DW SampleApp_ClusterList
   \   000009   03           DB 3
   \   00000A   ....         DW SampleApp_ClusterList
     61          {
     62            SAMPLEAPP_ENDPOINT,              //  int   Endpoint;
     63            SAMPLEAPP_PROFID,                //  uint16 AppProfId[2];
     64            SAMPLEAPP_DEVICEID,              //  uint16 AppDeviceId[2];
     65            SAMPLEAPP_DEVICE_VERSION,        //  int   AppDevVer:4;
     66            SAMPLEAPP_FLAGS,                 //  int   AppFlags:4;
     67            SAMPLE_MAX_CLUSTERS,          //  byte  AppNumInClusters;
     68            (cId_t *)SampleApp_ClusterList,  //  byte *pAppInClusterList;
     69            SAMPLE_MAX_CLUSTERS,          //  byte  AppNumOutClusters;
     70            (cId_t *)SampleApp_ClusterList   //  byte *pAppOutClusterList;
     71          };
     72          

   \                                 In  segment XDATA_I, align 1, keep-with-next
     73          endPointDesc_t SampleApp_epDesc =
   \                     SampleApp_epDesc:
   \   000000                DS 6
   \   000006                REQUIRE `?<Initializer for SampleApp_epDesc>`
   \   000006                REQUIRE __INIT_XDATA_I
     74          {
     75            SAMPLEAPP_ENDPOINT,
     76           &SampleApp_TaskID,
     77            (SimpleDescriptionFormat_t *)&SampleApp_SimpleDesc,
     78            noLatencyReqs
     79          };
     80          
     81          /*********************************************************************
     82           * TYPEDEFS
     83           */
     84          
     85          /*********************************************************************
     86           * GLOBAL VARIABLES
     87           */

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     88          devStates_t SampleApp_NwkState;   
   \                     SampleApp_NwkState:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     89          uint8 SampleApp_TaskID;           // Task ID for internal task/event processing.
   \                     SampleApp_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     90          
     91          /*********************************************************************
     92           * EXTERNAL VARIABLES
     93           */
     94          
     95          /*********************************************************************
     96           * EXTERNAL FUNCTIONS
     97           */
     98          
     99          /*********************************************************************
    100           * LOCAL VARIABLES
    101           */
    102          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    103          static uint8 SampleApp_MsgID;
   \                     SampleApp_MsgID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    104          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    105          afAddrType_t SampleApp_P2P_DstAddr;      //µã²¥
   \                     SampleApp_P2P_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
    106          
    107          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    108          static uint8 SampleApp_RxBuf[SAMPLE_APP_RX_MAX+1]={0};
   \                     SampleApp_RxBuf:
   \   000000                DS 201
   \   0000C9                REQUIRE __INIT_XDATA_Z
    109          static uint16 SampleApp_RxLen=0;
    110          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    111          uint8 onenet_login_ok=0;//onenet×¢²á³É¹¦ 0:Î´×¢²á£¬1£º×¢²áÖÐ¡¡2£º×¢²á³É¹¦
   \                     onenet_login_ok:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    112          uint8 end_temp;//ÖÕ¶ËµÄÎÂ¶È
   \                     end_temp:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    113          uint8 end_hum;//ÖÕ¶ËµÄÊª¶È
   \                     end_hum:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    114          
    115          
    116          #ifdef ZDO_COORDINATOR
    117          signed char *g_mqtt_topics_set[5] = {NULL};
    118          u8 topics_buff[60]={0};
    119          u8 topics_post[100]={0}; //·¢²¼µÄÖ÷Ìâ
    120          u8 mqtt_message[200]={0};//·¢²¼µÄÏûÏ¢
    121          #endif
    122          
    123          /*********************************************************************
    124           * LOCAL FUNCTIONS
    125           */
    126          
    127          static void SampleApp_ProcessMSGCmd( afIncomingMSGPacket_t *pkt );
    128          void SampleApp_CallBack(uint8 port, uint8 event); 
    129          static void SampleApp_Send_P2P_Message( void );
    130          static void OneNet_publish_topic();
    131          void debug(uint8 * msg, ...);
    132          
    133          /*********************************************************************
    134           * @fn      SampleApp_Init
    135           *
    136           * @brief   This is called during OSAL tasks' initialization.
    137           *
    138           * @param   task_id - the Task ID assigned by OSAL.
    139           *
    140           * @return  none
    141           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    142          void SampleApp_Init( uint8 task_id )
   \                     SampleApp_Init:
    143          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    144            halUARTCfg_t uartConfig;
    145          
    146            SampleApp_TaskID = task_id;
   \   000007   90....       MOV     DPTR,#SampleApp_TaskID
   \   00000A   F0           MOVX    @DPTR,A
    147            SampleApp_NwkState = DEV_INIT;       
   \   00000B   90....       MOV     DPTR,#SampleApp_NwkState
   \   00000E   7401         MOV     A,#0x1
   \   000010   F0           MOVX    @DPTR,A
    148          
    149            MT_UartInit();                  //´®¿Ú³õÊ¼»¯
                   ^
Warning[Pe223]: function "MT_UartInit" declared implicitly
   \   000011                ; Setup parameters for call to function MT_UartInit
   \   000011   12....       LCALL   ??MT_UartInit?relay
    150            MT_UartRegisterTaskID(task_id); //×¢²á´®¿ÚÈÎÎñ
                   ^
Warning[Pe223]: function "MT_UartRegisterTaskID" declared implicitly
   \   000014                ; Setup parameters for call to function MT_UartRegisterTaskID
   \   000014   8E..         MOV     ?V0 + 0,R6
   \   000016   AA..         MOV     R2,?V0 + 0
   \   000018   7B00         MOV     R3,#0x0
   \   00001A   12....       LCALL   ??MT_UartRegisterTaskID?relay
    151            afRegister( (endPointDesc_t *)&SampleApp_epDesc );
   \   00001D                ; Setup parameters for call to function afRegister
   \   00001D   7A..         MOV     R2,#SampleApp_epDesc & 0xff
   \   00001F   7B..         MOV     R3,#(SampleApp_epDesc >> 8) & 0xff
   \   000021   12....       LCALL   ??afRegister?relay
    152            RegisterForKeys( task_id );
   \   000024                ; Setup parameters for call to function RegisterForKeys
   \   000024   EE           MOV     A,R6
   \   000025   F9           MOV     R1,A
   \   000026   12....       LCALL   ??RegisterForKeys?relay
    153          
    154          #ifdef ZDO_COORDINATOR
    155            //Ð­µ÷Æ÷³õÊ¼»¯
    156            
    157            //·ê·äÃùÆ÷³õÊ¼»¯
    158          
    159            P0SEL &= ~0x80;                 //ÉèÖÃP07ÎªÆÕÍ¨IO¿Ú
    160            P0DIR |= 0x80;                 //P07¶¨ÒåÎªÊä³ö¿Ú
    161          
    162            //Ä¬ÈÏ·äÃùÆ÷²»Ïì
    163            P0_7=1;  
    164            
    165            //³õÊ¼»¯·¢²¼µÄÖ÷Ìâ
    166            sprintf(topics_post, "/sys/%s/%s/thing/event/property/post",ProductKey,DeviceName);
    167            
    168            //³õÊ¼»¯¶©ÔÄµÄÖ÷Ìâ
    169            sprintf(topics_buff, "/sys/%s/%s/thing/service/property/set",ProductKey,DeviceName);
    170            g_mqtt_topics_set[0]=topics_buff;  
    171            
    172          #endif
    173            
    174            SampleApp_P2P_DstAddr.addrMode = (afAddrMode_t)Addr16Bit; //µã²¥ 
   \   000029   90....       MOV     DPTR,#SampleApp_P2P_DstAddr + 8
   \   00002C   7402         MOV     A,#0x2
   \   00002E   F0           MOVX    @DPTR,A
    175            SampleApp_P2P_DstAddr.endPoint = SAMPLEAPP_ENDPOINT; 
   \   00002F   A3           INC     DPTR
   \   000030   740B         MOV     A,#0xb
   \   000032   F0           MOVX    @DPTR,A
    176            SampleApp_P2P_DstAddr.addr.shortAddr = 0x0000;            //·¢¸øÐ­µ÷Æ÷
   \   000033   90....       MOV     DPTR,#SampleApp_P2P_DstAddr
   \   000036   E4           CLR     A
   \   000037   F0           MOVX    @DPTR,A
   \   000038   A3           INC     DPTR
   \   000039   F0           MOVX    @DPTR,A
    177          
    178          
    179          }
   \   00003A                REQUIRE ?Subroutine0
   \   00003A                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F02         MOV     R7,#0x2
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    180          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    181          void SampleApp_HandleKeys( uint8 shift, uint8 keys )
   \                     SampleApp_HandleKeys:
    182          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    183            (void)shift;  // Intentionally unreferenced parameter
    184          
    185          #if defined(ZDO_COORDINATOR)
    186          
    187            if ( keys & HAL_KEY_SW_6 )//key1
    188            {
    189              const signed char *g_mqtt_topics[] = {"mqtt_topic_test1"};
    190              if(0 == mqtt_subscribe_topic(g_mqtt_topics, 1))
    191              {
    192          
    193              }
    194            }
    195          
    196            if ( keys & HAL_KEY_SW_1 )//key2
    197            {
    198          
    199            }
    200          
    201          #endif
    202          }
   \   000000   02....       LJMP    ?BRET
    203          
    204          
    205          /*********************************************************************
    206           * @fn      SampleApp_ProcessEvent
    207           *
    208           * @brief   Generic Application Task event processor.
    209           *
    210           * @param   task_id  - The OSAL assigned task ID.
    211           * @param   events   - Bit map of events to process.
    212           *
    213           * @return  Event flags of all unprocessed events.
    214           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    215          UINT16 SampleApp_ProcessEvent( uint8 task_id, UINT16 events )
   \                     SampleApp_ProcessEvent:
    216          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    217            (void)task_id;  // Intentionally unreferenced parameter
    218            
    219            if ( events & SYS_EVENT_MSG )
   \   000009   5480         ANL     A,#0x80
   \   00000B   7052         JNZ     ??SampleApp_ProcessEvent_0
    220            {
    221              afIncomingMSGPacket_t *MSGpkt;
    222          
    223              while ( (MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID )) )
    224              {
    225                switch ( MSGpkt->hdr.event )
    226                {
    227                case KEY_CHANGE:
    228                  SampleApp_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
    229                  break;
    230                
    231                case AF_INCOMING_MSG_CMD:
    232                  SampleApp_ProcessMSGCmd( MSGpkt );
    233                  break;
    234                  
    235                case ZDO_STATE_CHANGE:
    236                  SampleApp_NwkState = (devStates_t)(MSGpkt->hdr.status);
    237                  if ( (SampleApp_NwkState == DEV_ZB_COORD)||
    238                      (SampleApp_NwkState == DEV_ROUTER)
    239                      || (SampleApp_NwkState == DEV_END_DEVICE) )
    240                  {
    241                      //Á¬Íø³É¹¦ºó£¬Æô¶¯Ò»¸ö¶¨Ê±Æ÷
    242                      osal_start_timerEx( SampleApp_TaskID,
    243                                        SAMPLEAPP_SEND_PERIODIC_MSG_EVT,
    244                                        SAMPLEAPP_SEND_PERIODIC_MSG_TIMEOUT );
    245                  }
    246                  else
    247                  {
    248                    // Device is no longer in the network
    249                  }
    250                  break;
    251          
    252                default:
    253                  break;
    254                }
    255          
    256                osal_msg_deallocate( (uint8 *)MSGpkt );
    257              }
    258          
    259              return ( events ^ SYS_EVENT_MSG );
    260            }
    261          
    262          #ifdef ZDO_COORDINATOR
    263          
    264            //¶¨Ê±Æ÷Ê±¼äµ½
    265            if ( events & SAMPLEAPP_SEND_PERIODIC_MSG_EVT )
    266            {  
    267              if(onenet_login_ok==2)
    268              {
    269                  //Èç¹û½ÓÈëonenet³É¹¦£¬Æô¶¯ÐÄÌøºÍ·¢ËÍÊý¾Ý¶¨AÆ÷
    270          
    271                  P1_1=0;//µãÁÁD2
    272          
    273                
    274                  // Æô¶¯ÐÄÌø¶¨Ê±Æ÷£¬15ÃëÒ»´Î
    275                  osal_start_timerEx( SampleApp_TaskID, SAMPLEAPP_ONENET_HEART_BEAT_EVT,15000 );
    276                  
    277                  // Æô¶¯·¢ËÍÊý¾Ý¶¨Ê±Æ÷£¬5ÃëÒ»´Î
    278                  osal_start_timerEx( SampleApp_TaskID, SAMPLEAPP_ONENET_SEND_DATA_EVT,5000 );
    279              }
    280              else
    281              {        
    282                  onenet_login_ok=1;//onenet×¢²á³É¹¦ 0:Î´×¢²á£¬1£º×¢²áÖÐ¡¡2£º×¢²á³É¹¦
    283                  SampleApp_RxLen=0;
    284          
    285                  //Èç¹ûÃ»ÓÐ½ÓÈëonenet³É¹¦£¬ÖØÐÂ·¢Æð½ÓÈë
    286                  OneNet_DevLink();//½ÓÈëonenet·þÎñÆ÷
    287          
    288                  //LED2ÉÁ£¬±íÊ¾ÕýÔÚ½ÓÈëonenet
    289                  HalLedBlink (HAL_LED_2, 5, 50, 500);
    290          
    291                  // Ã¿5Ãë³¢ÊÔ½ÓÈëÒ»´Î
    292                  osal_start_timerEx( SampleApp_TaskID, SAMPLEAPP_SEND_PERIODIC_MSG_EVT,5000 );
    293              }
    294          
    295          
    296              // return unprocessed events
    297              return (events ^ SAMPLEAPP_SEND_PERIODIC_MSG_EVT);
    298            }
    299          
    300          
    301            //ÐÄÌø¶¨Ê±Æ÷Ê±¼äµ½
    302            if ( events & SAMPLEAPP_ONENET_HEART_BEAT_EVT )
    303            {
    304              if(onenet_login_ok==2)
    305              {
    306                  //·¢ËÍÐÄÌø
    307                  onenet_mqtt_send_heart();        
    308              }
    309              
    310              // Æô¶¯ÐÄÌø¶¨Ê±Æ÷£¬15ÃëÒ»´Î
    311              osal_start_timerEx( SampleApp_TaskID, SAMPLEAPP_ONENET_HEART_BEAT_EVT,15000 );
    312          
    313          
    314              // return unprocessed events
    315              return (events ^ SAMPLEAPP_ONENET_HEART_BEAT_EVT);
    316            }
    317          
    318          
    319            //·¢ËÍÊý¾Ý¶¨Ê±Æ÷Ê±¼äµ½
    320            if ( events & SAMPLEAPP_ONENET_SEND_DATA_EVT )
    321            {
    322              if(onenet_login_ok==2)
    323              {
    324                  //·¢ËÍÎÂÊª¶ÈÊý¾Ýµ½onenet
    325              //    OneNet_SendData(end_temp, end_hum);
    326          
    327                  sprintf(mqtt_message,
    328                  "{\"method\":\"thing.service.property.set\",\"id\":\"630262306\",\"params\":{\
    329                      \"CurrentTemperature_1\":%d,\
    330                      \"Humidified\":%d\
    331                  },\"version\":\"1.0.0\"}",
    332                  end_temp,
    333                  end_hum
    334                  );
    335                        
    336                  //·¢²¼Ö÷Ìâ
    337                  mqtt_publish_topic(topics_post, mqtt_message);
    338          
    339               //  OneNet_publish_topic();
    340              }
    341              
    342              // Æô¶¯·¢ËÍÊý¾Ý¶¨Ê±Æ÷£¬5ÃëÒ»´Î
    343              osal_start_timerEx( SampleApp_TaskID, SAMPLEAPP_ONENET_SEND_DATA_EVT,5000 );
    344          
    345          
    346              // return unprocessed events
    347              return (events ^ SAMPLEAPP_ONENET_SEND_DATA_EVT);
    348            }
    349          
    350            
    351          #else 
    352          
    353            //¶¨Ê±Æ÷Ê±¼äµ½
    354            if ( events & SAMPLEAPP_SEND_PERIODIC_MSG_EVT )
   \   00000D   EE           MOV     A,R6
   \   00000E   A2E0         MOV     C,0xE0 /* A   */.0
   \   000010   5079         JNC     ??SampleApp_ProcessEvent_1
    355            {
    356           
    357              // DHT11²É¼¯
    358              SampleApp_Send_P2P_Message();
   \   000012                ; Setup parameters for call to function SampleApp_Send_P2P_Message
   \   000012   12....       LCALL   ??SampleApp_Send_P2P_Message?relay
    359          
    360              // Setup to send message again in normal period (+ a little jitter)
    361              osal_start_timerEx( SampleApp_TaskID, SAMPLEAPP_SEND_PERIODIC_MSG_EVT,
    362                  (SAMPLEAPP_SEND_PERIODIC_MSG_TIMEOUT + (osal_rand() & 0x00FF)) );
   \   000015                ; Setup parameters for call to function osal_rand
   \   000015   12....       LCALL   ??osal_rand?relay
   \   000018                ; Setup parameters for call to function osal_start_timerEx
   \   000018   EA           MOV     A,R2
   \   000019   24B8         ADD     A,#-0x48
   \   00001B   FC           MOV     R4,A
   \   00001C   E4           CLR     A
   \   00001D   340B         ADDC    A,#0xb
   \   00001F   FD           MOV     R5,A
   \   000020   7A01         MOV     R2,#0x1
   \   000022   7B00         MOV     R3,#0x0
   \   000024   90....       MOV     DPTR,#SampleApp_TaskID
   \   000027   E0           MOVX    A,@DPTR
   \   000028   F9           MOV     R1,A
   \   000029   12....       LCALL   ??osal_start_timerEx?relay
    363          
    364              // return unprocessed events
    365              return (events ^ SAMPLEAPP_SEND_PERIODIC_MSG_EVT);
   \   00002C   EE           MOV     A,R6
   \   00002D   6401         XRL     A,#0x1
   \   00002F   FA           MOV     R2,A
   \   000030   EF           MOV     A,R7
   \                     ??SampleApp_ProcessEvent_2:
   \   000031   FB           MOV     R3,A
   \   000032   805B         SJMP    ??SampleApp_ProcessEvent_3
    366            }
   \                     ??SampleApp_ProcessEvent_4:
   \   000034   A3           INC     DPTR
   \   000035   E0           MOVX    A,@DPTR
   \   000036   90....       MOV     DPTR,#SampleApp_NwkState
   \   000039   F0           MOVX    @DPTR,A
   \   00003A   6409         XRL     A,#0x9
   \   00003C   600A         JZ      ??SampleApp_ProcessEvent_5
   \   00003E   E0           MOVX    A,@DPTR
   \   00003F   6407         XRL     A,#0x7
   \   000041   6005         JZ      ??SampleApp_ProcessEvent_5
   \   000043   E0           MOVX    A,@DPTR
   \   000044   6406         XRL     A,#0x6
   \   000046   7010         JNZ     ??SampleApp_ProcessEvent_6
   \                     ??SampleApp_ProcessEvent_5:
   \   000048                ; Setup parameters for call to function osal_start_timerEx
   \   000048   7CB8         MOV     R4,#-0x48
   \   00004A   7D0B         MOV     R5,#0xb
   \   00004C   7A01         MOV     R2,#0x1
   \   00004E   7B00         MOV     R3,#0x0
   \   000050   90....       MOV     DPTR,#SampleApp_TaskID
   \   000053   E0           MOVX    A,@DPTR
   \   000054   F9           MOV     R1,A
   \   000055   12....       LCALL   ??osal_start_timerEx?relay
   \                     ??SampleApp_ProcessEvent_6:
   \   000058                ; Setup parameters for call to function osal_msg_deallocate
   \   000058   AA..         MOV     R2,?V0 + 0
   \   00005A   AB..         MOV     R3,?V0 + 1
   \   00005C   12....       LCALL   ??osal_msg_deallocate?relay
   \                     ??SampleApp_ProcessEvent_0:
   \   00005F                ; Setup parameters for call to function osal_msg_receive
   \   00005F   90....       MOV     DPTR,#SampleApp_TaskID
   \   000062   E0           MOVX    A,@DPTR
   \   000063   F9           MOV     R1,A
   \   000064   12....       LCALL   ??osal_msg_receive?relay
   \   000067   8A..         MOV     ?V0 + 0,R2
   \   000069   8B..         MOV     ?V0 + 1,R3
   \   00006B   EA           MOV     A,R2
   \   00006C   45..         ORL     A,?V0 + 1
   \   00006E   6014         JZ      ??SampleApp_ProcessEvent_7
   \   000070   8A82         MOV     DPL,R2
   \   000072   8B83         MOV     DPH,R3
   \   000074   E0           MOVX    A,@DPTR
   \   000075   24E6         ADD     A,#-0x1a
   \   000077   6006         JZ      ??SampleApp_ProcessEvent_8
   \   000079   2449         ADD     A,#0x49
   \   00007B   60B7         JZ      ??SampleApp_ProcessEvent_4
   \   00007D   80D9         SJMP    ??SampleApp_ProcessEvent_6
   \                     ??SampleApp_ProcessEvent_8:
   \   00007F                ; Setup parameters for call to function SampleApp_ProcessMSGCmd
   \   00007F   12....       LCALL   ??SampleApp_ProcessMSGCmd?relay
   \   000082   80D4         SJMP    ??SampleApp_ProcessEvent_6
   \                     ??SampleApp_ProcessEvent_7:
   \   000084   EE           MOV     A,R6
   \   000085   FA           MOV     R2,A
   \   000086   EF           MOV     A,R7
   \   000087   6480         XRL     A,#0x80
   \   000089   80A6         SJMP    ??SampleApp_ProcessEvent_2
    367          
    368          #endif
    369          
    370            return ( 0 );  // Discard unknown events.
   \                     ??SampleApp_ProcessEvent_1:
   \   00008B   7A00         MOV     R2,#0x0
   \   00008D   7B00         MOV     R3,#0x0
   \                     ??SampleApp_ProcessEvent_3:
   \   00008F   7F04         MOV     R7,#0x4
   \   000091   02....       LJMP    ?BANKED_LEAVE_XDATA
    371          }
    372          
    373          /*********************************************************************
    374           * @fn      SerialApp_ProcessMSGCmd
    375           *
    376           * @brief   Data message processor callback. This function processes
    377           *          any incoming data - probably from other devices. Based
    378           *          on the cluster ID, perform the intended action.
    379           *
    380           * @param   pkt - pointer to the incoming message packet
    381           *
    382           * @return  TRUE if the 'pkt' parameter is being used and will be freed later,
    383           *          FALSE otherwise.
    384           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    385          void SampleApp_ProcessMSGCmd( afIncomingMSGPacket_t *pkt )
   \                     SampleApp_ProcessMSGCmd:
    386          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    387            uint8 buff[20]={0};
                         ^
Warning[Pe177]: variable "buff" was declared but never referenced
    388          
    389            switch ( pkt->clusterId )
    390            {
    391            // ½ÓÊÕÖÕ¶ËÉÏ´«µÄÎÂ¶ÈÊý¾Ý
    392            case SAMPLEAPP_P2P_CLUSTERID: 
    393          #ifdef ZDO_COORDINATOR
    394              {
    395                  end_temp=pkt->cmd.Data[0]; //ÖÕ¶ËÎÂ¶È
    396                  end_hum=pkt->cmd.Data[1]; //ÖÕ¶ËÊª¶È 
    397          
    398          
    399                  sprintf(buff, "T:%d", end_temp);
    400                  HalLcdWriteString(buff, HAL_LCD_LINE_3); //LCDÏÔÊ¾
    401          
    402                  sprintf(buff, "H:%d", end_hum);
    403                  HalLcdWriteString(buff, HAL_LCD_LINE_4); //LCDÏÔÊ¾
    404              }
    405          #endif
    406              break;
    407          
    408            case SAMPLEAPP_PERIODIC_CLUSTERID:
    409          
    410              break;
    411          
    412              default:
    413                break;
    414            }
    415          }
   \   000000   02....       LJMP    ?BRET
    416          
    417          #ifdef ZDO_COORDINATOR
    418          
    419          //·¢ËÍMQTTÊý¾Ý
    420          void ESP8266_SendData(char* buff, int len)
    421          {
    422              if(len==0) return;
    423              
    424              HalUARTWrite(0,buff, len);
    425          }
    426          
    427          
    428          //½ÓÊÕµ½ÏÂ·¢ÃüÁî£¬»òÕß½ÓÊÕµ½¶©ÔÄµÄÏûÏ¢
    429          //topic:ÊÕµ½µÄÖ÷Ìâ
    430          //cmd::Ö÷Ìâ¶ÔÓ¦µÄÄÚÈÝ
    431          void mqtt_rx(uint8* topic, uint8* cmd)
    432          {
    433              //Ð­µ÷Æ÷ÊÕµ½Êý¾Ýºó
    434              //¸ù¾ÝÉè¼Æ¾ö¶¨Êý¾ÝÈçºÎ´¦Àí
    435          
    436              if(topic == NULL || cmd==NULL) return;
    437          
    438          
    439          
    440              //ÎÒÃÇÖ»¹ØÐÄÄÚÈÝ£¬¼´Ö»¹ØÐÄCMD£¬²»´¦ÀíÖ÷Ìâ
    441          
    442              //ÎÒÃÇ´¦Àí3¸ö×Ö½Ú£¬»òÕß3¸ö×Ö½ÚÒÔÉÏµÄ
    443              if(osal_strlen(cmd)>=3)
    444              {
    445                  //D31 D30
    446                
    447                  if(cmd[0]=='D'||cmd[0]=='d')
    448                  {
    449                      //¿ØÖÆD2
    450                      if(cmd[1]=='2')
    451                      {
    452                          if(cmd[2]=='1')
    453                          {
    454                              P1_1=0;//D2ÁÁ
    455                          }
    456                          else
    457                          {
    458                              P1_1=1;//D2Ãð
    459                          }
    460                      }
    461          
    462                      //¿ØÖÆD3
    463                      if(cmd[1]=='3')
    464                      {
    465                          if(cmd[2]=='1')
    466                          {
    467                              P1_4=0;//D3ÁÁ
    468                          }
    469                          else
    470                          {
    471                              P1_4=1;//D3Ãð
    472                          }
    473                      }
    474                      
    475                  }
    476              }
    477            
    478          }
    479          
    480          
    481          
    482          void OneNet_publish_topic()
    483          {
    484              uint8 buff[20]={0};
    485          
    486              sprintf(buff, "t:%d,h:%d", end_temp, end_hum);
    487          
    488              /*  ·¢²¼Ö÷ÌâÎª"hello_topic_public"£¬ÏûÏ¢ÎªÎÂ¶ÈºÍÊª¶È */
    489              if(0 == mqtt_publish_topic("hello_topic_public", buff))
    490              {;}
    491          }
    492          
    493          
    494          
    495          /*********************************************************************
    496           * @fn      SampleApp_CallBack
    497           *
    498           * @brief   Send data OTA.
    499           *
    500           * @param   port - UART port.
    501           * @param   event - the UART port event flag.
    502           *
    503           * @return  none
    504           */
    505          uint32 lastReadMs=0;
    506          void SampleApp_CallBack(uint8 port, uint8 event)
    507          {
    508            (void)port;
    509          
    510            if(0==onenet_login_ok)
    511            {
    512              HalUARTRead(SAMPLE_APP_PORT, SampleApp_RxBuf, SAMPLE_APP_RX_MAX);
    513              SampleApp_RxLen=0;
    514              osal_memset(SampleApp_RxBuf, 0, SAMPLE_APP_RX_MAX);    
    515            }
    516            else if(1==onenet_login_ok)//onenet×¢²á³É¹¦ 0:Î´×¢²á£¬1£º×¢²áÖÐ¡¡2£º×¢²á³É¹¦
    517            {
    518              //Ò»¸öÒ»¸ö×Ö½Ú¶Á
    519              SampleApp_RxLen += HalUARTRead(SAMPLE_APP_PORT, SampleApp_RxBuf+SampleApp_RxLen, 4);
    520          
    521              //ÅÐ¶ÏÊÇ·ñÊÇ×¢²á³É¹¦
    522              if(SampleApp_RxLen>=4)
    523              {
    524                  debug("rx len=%d(%x,%x,%x,%x)\r\n", SampleApp_RxLen,SampleApp_RxBuf[0],SampleApp_RxBuf[1],SampleApp_RxBuf[2],SampleApp_RxBuf[3]);
    525          
    526                  //µÈ´ý½ÓÈëÏìÓ¦
    527                  if(MQTT_UnPacketRecv(SampleApp_RxBuf) == MQTT_PKT_CONNACK)
    528                  {
    529                      if(0==MQTT_UnPacketConnectAck(SampleApp_RxBuf))
    530                      {
    531                          onenet_login_ok=2;//×¢²á³É¹¦
    532                          SampleApp_RxLen=0;
    533          
    534                          //ÇëÇó¶©ÔÄÖ÷Ìâ
    535                          mqtt_subscribe_topic(g_mqtt_topics_set, 1);
    536                      }
    537                  }
    538              }
    539          
    540              //Êý×éÂú£¬Çå0                              
    541              if(SampleApp_RxLen>=SAMPLE_APP_RX_MAX)
    542              {
    543                  SampleApp_RxLen=0;
    544              }
    545            }
    546            else if(2==onenet_login_ok)
    547            {
    548                //Èç¹ûÊÇ×¢²á³É¹¦£¬¶Á·þÎñÆ÷µÄ¿ØÖÆÃüÁî
    549          
    550                uint32 curMs=osal_GetSystemClock(); 
    551          
    552                if((curMs-lastReadMs)<1000) return;
    553          
    554                lastReadMs=curMs;
    555                SampleApp_RxLen=0;
    556                osal_memset(SampleApp_RxBuf, 0, SAMPLE_APP_RX_MAX+1);
    557                SampleApp_RxLen = HalUARTRead(SAMPLE_APP_PORT, SampleApp_RxBuf, SAMPLE_APP_RX_MAX);
    558                
    559          
    560          
    561                if(SampleApp_RxLen>0)
    562                {        
    563                  debug("rx len=%d.\r\n", SampleApp_RxLen);
    564                  
    565                  OneNet_RevPro(SampleApp_RxBuf);
    566                  SampleApp_RxLen=0;
    567                  osal_memset(SampleApp_RxBuf, 0, SAMPLE_APP_RX_MAX+1);
    568                }
    569            }
    570          
    571          }
    572          
    573          #else
    574          
    575          /*********************************************************************
    576           * @fn      SampleApp_Send_P2P_Message
    577           *
    578           * @brief   point to point.
    579           *
    580           * @param   none
    581           *
    582           * @return  none
    583           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    584          void SampleApp_Send_P2P_Message( void )
   \                     SampleApp_Send_P2P_Message:
    585          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 25
   \   000005   74E7         MOV     A,#-0x19
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    586            uint8 str[5]={0};
   \   00000A   85..82       MOV     DPL,?XSP + 0
   \   00000D   85..83       MOV     DPH,?XSP + 1
   \   000010   AC82         MOV     R4,DPL
   \   000012   AD83         MOV     R5,DPH
   \   000014   7583..       MOV     DPH,#(`?<Constant {0}>` >> 8) & 0xff
   \   000017   7582..       MOV     DPL,#`?<Constant {0}>` & 0xff
   \   00001A   7405         MOV     A,#0x5
   \   00001C   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    587            uint8 strTemp[20]={0};
   \   00001F   7405         MOV     A,#0x5
   \   000021   12....       LCALL   ?XSTACK_DISP0_8
   \   000024   AC82         MOV     R4,DPL
   \   000026   AD83         MOV     R5,DPH
   \   000028   7583..       MOV     DPH,#(`?<Constant {0}>_1` >> 8) & 0xff
   \   00002B   7582..       MOV     DPL,#`?<Constant {0}>_1` & 0xff
   \   00002E   7414         MOV     A,#0x14
   \   000030   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    588            int len=0;
    589          
    590            DHT11();             //»ñÈ¡ÎÂÊª¶È
   \   000033                ; Setup parameters for call to function DHT11
   \   000033   12....       LCALL   ??DHT11?relay
    591          
    592            str[0] = wendu;//ÎÂ¶È
   \   000036   90....       MOV     DPTR,#wendu
   \   000039   E0           MOVX    A,@DPTR
   \   00003A   85..82       MOV     DPL,?XSP + 0
   \   00003D   85..83       MOV     DPH,?XSP + 1
   \   000040   F0           MOVX    @DPTR,A
    593            str[1] = shidu;//Êª¶È
   \   000041   90....       MOV     DPTR,#shidu
   \   000044   E0           MOVX    A,@DPTR
   \   000045   C0E0         PUSH    A
   \   000047   7401         MOV     A,#0x1
   \   000049   12....       LCALL   ?XSTACK_DISP0_8
   \   00004C   D0E0         POP     A
   \   00004E   F0           MOVX    @DPTR,A
    594            len=2;
    595          
    596            sprintf(strTemp, "T&H:%d %d", str[0],str[1]);
                           ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"
   \   00004F                ; Setup parameters for call to function sprintf
   \   00004F   F5..         MOV     ?V0 + 0,A
   \   000051   75..00       MOV     ?V0 + 1,#0x0
   \   000054   78..         MOV     R0,#?V0 + 0
   \   000056   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000059   7402         MOV     A,#0x2
   \   00005B   12....       LCALL   ?XSTACK_DISP0_8
   \   00005E   E0           MOVX    A,@DPTR
   \   00005F   F5..         MOV     ?V0 + 0,A
   \   000061   78..         MOV     R0,#?V0 + 0
   \   000063   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000066   7C..         MOV     R4,#`?<Constant "T&H:%d %d">` & 0xff
   \   000068   7D..         MOV     R5,#(`?<Constant "T&H:%d %d">` >> 8) & 0xff
   \   00006A   7409         MOV     A,#0x9
   \   00006C   12....       LCALL   ?XSTACK_DISP0_8
   \   00006F   AA82         MOV     R2,DPL
   \   000071   AB83         MOV     R3,DPH
   \   000073   12....       LCALL   ??sprintf?relay
   \   000076   7404         MOV     A,#0x4
   \   000078   12....       LCALL   ?DEALLOC_XSTACK8
    597            HalLcdWriteString(strTemp, HAL_LCD_LINE_3); //LCDÏÔÊ¾
                                     ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"
   \   00007B                ; Setup parameters for call to function HalLcdWriteString
   \   00007B   7903         MOV     R1,#0x3
   \   00007D   7405         MOV     A,#0x5
   \   00007F   12....       LCALL   ?XSTACK_DISP0_8
   \   000082   AA82         MOV     R2,DPL
   \   000084   AB83         MOV     R3,DPH
   \   000086   12....       LCALL   ??HalLcdWriteString?relay
    598          
    599            HalUARTWrite(0, strTemp, osal_strlen(strTemp));           //´®¿ÚÊä³öÌáÊ¾ÐÅÏ¢
                                                        ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"

  static uint16 SampleApp_RxLen=0;
                ^
"I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\SampleApp.c",109  Warning[Pe177]: 
          variable "SampleApp_RxLen" was declared but never referenced

  static void OneNet_publish_topic();
              ^
"I:\zigbee\×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-V4.3\Ñ§Ï°Àý³ÌÒÔ¼°¿ª·¢»·¾³°²×°\µÚÆßÕÂ.×ÛºÏÊµÑé\ÊµÑé7.°¢ÀïÔÆIOT(MQTTÐ­Òé)\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\SampleApp.c",130  Warning[Pe177]: 
          function "OneNet_publish_topic" was declared but never referenced
   \   000089                ; Setup parameters for call to function HalUARTWrite
   \   000089                ; Setup parameters for call to function osal_strlen
   \   000089   7405         MOV     A,#0x5
   \   00008B   12....       LCALL   ?XSTACK_DISP0_8
   \   00008E   AA82         MOV     R2,DPL
   \   000090   AB83         MOV     R3,DPH
   \   000092   12....       LCALL   ??osal_strlen?relay
   \   000095   EA           MOV     A,R2
   \   000096   FC           MOV     R4,A
   \   000097   EB           MOV     A,R3
   \   000098   FD           MOV     R5,A
   \   000099   7405         MOV     A,#0x5
   \   00009B   12....       LCALL   ?XSTACK_DISP0_8
   \   00009E   AA82         MOV     R2,DPL
   \   0000A0   AB83         MOV     R3,DPH
   \   0000A2   7900         MOV     R1,#0x0
   \   0000A4   12....       LCALL   ??HalUARTWrite?relay
    600            HalUARTWrite(0, "\r\n",2);
   \   0000A7                ; Setup parameters for call to function HalUARTWrite
   \   0000A7   7C02         MOV     R4,#0x2
   \   0000A9   7D00         MOV     R5,#0x0
   \   0000AB   7A..         MOV     R2,#`?<Constant "\\r\\n">` & 0xff
   \   0000AD   7B..         MOV     R3,#(`?<Constant "\\r\\n">` >> 8) & 0xff
   \   0000AF   7900         MOV     R1,#0x0
   \   0000B1   12....       LCALL   ??HalUARTWrite?relay
    601          
    602            //ÎÞÏß·¢ËÍµ½Ð­µ÷Æ÷
    603            if ( AF_DataRequest( &SampleApp_P2P_DstAddr, &SampleApp_epDesc,
    604                                 SAMPLEAPP_P2P_CLUSTERID,
    605                                 len,
    606                                 str,
    607                                 &SampleApp_MsgID,
    608                                 AF_DISCV_ROUTE,
    609                                 AF_DEFAULT_RADIUS ) == afStatus_SUCCESS )
   \   0000B4                ; Setup parameters for call to function AF_DataRequest
   \   0000B4   75..1E       MOV     ?V0 + 0,#0x1e
   \   0000B7   78..         MOV     R0,#?V0 + 0
   \   0000B9   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000BC   75....       MOV     ?V0 + 0,#SampleApp_MsgID & 0xff
   \   0000BF   75....       MOV     ?V0 + 1,#(SampleApp_MsgID >> 8) & 0xff
   \   0000C2   78..         MOV     R0,#?V0 + 0
   \   0000C4   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000C7   7403         MOV     A,#0x3
   \   0000C9   12....       LCALL   ?XSTACK_DISP0_8
   \   0000CC   8582..       MOV     ?V0 + 0,DPL
   \   0000CF   8583..       MOV     ?V0 + 1,DPH
   \   0000D2   78..         MOV     R0,#?V0 + 0
   \   0000D4   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000D7   75..02       MOV     ?V0 + 0,#0x2
   \   0000DA   75..00       MOV     ?V0 + 1,#0x0
   \   0000DD   78..         MOV     R0,#?V0 + 0
   \   0000DF   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000E2   75..01       MOV     ?V0 + 0,#0x1
   \   0000E5   78..         MOV     R0,#?V0 + 0
   \   0000E7   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000EA   7920         MOV     R1,#0x20
   \   0000EC   7C..         MOV     R4,#SampleApp_epDesc & 0xff
   \   0000EE   7D..         MOV     R5,#(SampleApp_epDesc >> 8) & 0xff
   \   0000F0   7A..         MOV     R2,#SampleApp_P2P_DstAddr & 0xff
   \   0000F2   7B..         MOV     R3,#(SampleApp_P2P_DstAddr >> 8) & 0xff
   \   0000F4   12....       LCALL   ??AF_DataRequest?relay
   \   0000F7   7409         MOV     A,#0x9
   \   0000F9   12....       LCALL   ?DEALLOC_XSTACK8
    610            {
    611            }
    612            else
    613            {
    614              // Error occurred in request to send.
    615            }
    616          }
   \   0000FC   7419         MOV     A,#0x19
   \   0000FE   12....       LCALL   ?DEALLOC_XSTACK8
   \   000101   02....       LJMP    ?Subroutine0 & 0xFFFF
    617          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    618          void SampleApp_CallBack(uint8 port, uint8 event)
   \                     SampleApp_CallBack:
    619          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    620            (void)port;
    621          
    622            HalUARTRead(SAMPLE_APP_PORT, SampleApp_RxBuf, 1);
   \   000004                ; Setup parameters for call to function HalUARTRead
   \   000004   7C01         MOV     R4,#0x1
   \   000006   7D00         MOV     R5,#0x0
   \   000008   7A..         MOV     R2,#SampleApp_RxBuf & 0xff
   \   00000A   7B..         MOV     R3,#(SampleApp_RxBuf >> 8) & 0xff
   \   00000C   7900         MOV     R1,#0x0
   \   00000E   12....       LCALL   ??HalUARTRead?relay
    623          
    624          }
   \   000011   D083         POP     DPH
   \   000013   D082         POP     DPL
   \   000015   02....       LJMP    ?BRET
    625          
    626          
    627          #endif
    628          
    629          
    630          //µ÷ÊÔÐÅÏ¢Êä³ö

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    631          void debug(uint8 * msg, ...)
   \                     debug:
    632          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    633          #if 0
    634              uint8 len=0;
    635              char info[100] = {0};
    636              va_list args;
    637          
    638              if(msg==NULL) return;
    639          
    640              va_start(args, msg);
    641              vsprintf(info, (const char*)msg, args);
    642              va_end(args);
    643          
    644              len=osal_strlen((char *)info);
    645              if(len==0) return;
    646          
    647              
    648              HalUARTWrite(1,info, len);//´®¿Ú0·¢ËÍ    
    649          #endif    
    650          }
   \   000000   02....       LJMP    ?BRET

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for SampleApp_epDesc>`:
   \   000000   0B           DB 11
   \   000001   ....         DW SampleApp_TaskID
   \   000003   ....         DW SampleApp_SimpleDesc
   \   000005   00           DB 0

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_HandleKeys?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_HandleKeys

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_ProcessMSGCmd?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_ProcessMSGCmd

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_Send_P2P_Message?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_Send_P2P_Message

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_CallBack?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_CallBack

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??debug?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    debug

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>`:
   \   000000   00           DB 0
   \   000001   00000000     DB 0, 0, 0, 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>_1`:
   \   000000   00           DB 0
   \   000001   00000000     DB 0, 0, 0, 0, 0, 0, 0, 0
   \            00000000
   \   000009   00000000     DB 0, 0, 0, 0, 0, 0, 0, 0
   \            00000000
   \   000011   000000       DB 0, 0, 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "T&H:%d %d">`:
   \   000000   5426483A     DB "T&H:%d %d"
   \            25642025
   \            6400    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "\\r\\n">`:
   \   000000   0D0A00       DB "\015\012"
    651          
    652          

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     SampleApp_CallBack                 2      0      0
       -> HalUARTRead                   4      0      0
     SampleApp_HandleKeys               0      0      0
     SampleApp_Init                     0      0     10
       -> MT_UartInit                   0      0     20
       -> MT_UartRegisterTaskID         0      0     20
       -> afRegister                    0      0     20
       -> RegisterForKeys               0      0     20
     SampleApp_ProcessEvent             0      0     12
       -> SampleApp_Send_P2P_Message
                                        0      0     24
       -> osal_rand                     0      0     24
       -> osal_start_timerEx            0      0     24
       -> osal_start_timerEx            0      0     24
       -> osal_msg_deallocate           0      0     24
       -> osal_msg_receive              0      0     24
       -> SampleApp_ProcessMSGCmd       0      0     24
     SampleApp_ProcessMSGCmd            0      0     12
     SampleApp_Send_P2P_Message         2      0     56
       -> DHT11                         0      0     70
       -> sprintf                       0      0     78
       -> HalLcdWriteString             0      0     70
       -> osal_strlen                   0      0     70
       -> HalUARTWrite                  0      0     70
       -> HalUARTWrite                  0      0     70
       -> AF_DataRequest                0      0     88
     debug                              0      0      0


   Segment part sizes:

     Function/Label                      Bytes
     --------------                      -----
     SampleApp_ClusterList                  6
     SampleApp_SimpleDesc                  12
     SampleApp_epDesc                       6
     SampleApp_NwkState                     1
     SampleApp_TaskID                       1
     SampleApp_MsgID                        1
     SampleApp_P2P_DstAddr                 12
     SampleApp_RxBuf                      201
     onenet_login_ok                        1
     end_temp                               1
     end_hum                                1
     SampleApp_Init                        58
     ?Subroutine0                           5
     SampleApp_HandleKeys                   3
     SampleApp_ProcessEvent               148
     SampleApp_ProcessMSGCmd                3
     SampleApp_Send_P2P_Message           260
     SampleApp_CallBack                    24
     debug                                  3
     ?<Initializer for SampleApp_epDesc>    6
     ??SampleApp_Init?relay                 6
     ??SampleApp_HandleKeys?relay           6
     ??SampleApp_ProcessEvent?relay         6
     ??SampleApp_ProcessMSGCmd?relay        6
     ??SampleApp_Send_P2P_Message?relay     6
     ??SampleApp_CallBack?relay             6
     ??debug?relay                          6
     ?<Constant {0}>                        5
     ?<Constant {0}>_1                     20
     ?<Constant "T&H:%d %d">               10
     ?<Constant "\r\n">                     3

 
 504 bytes in segment BANKED_CODE
  42 bytes in segment BANK_RELAYS
   6 bytes in segment XDATA_I
   6 bytes in segment XDATA_ID
  56 bytes in segment XDATA_ROM_C
 219 bytes in segment XDATA_Z
 
 552 bytes of CODE  memory
  56 bytes of CONST memory
 225 bytes of XDATA memory

Errors: none
Warnings: 8
